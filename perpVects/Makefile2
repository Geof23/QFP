# a makefile for a variety of compielrs and compiler flags
# NOTES: gcc 5.x (apparently) has a problem with shift count for templated types
# (regarding -Wno-shift-count-overflow)

#the list of compilers to iterate over
#compiler specific flags may be set here
GCC := g++
CLANG := $(if $(shell which clang++-3.6), clang++-3.6, clang++)
PG := pgCC  #doesn't fully support c++11 (even 15.7!) so not in list
INTEL := icpc -mlong-double-80

COMPILERS := $(foreach c, GCC INTEL CLANG, $(if $(shell which $($(c))), $c,))

#gives highly detailed output (general scores aren't perfect indexes of results --
#  i.e. different results can produce identical scores
VERBOSE ?= 

#CC_GEN_OPTS ?= -O0 -ggdb
CC_REQUIRED := -std=c++11  -lstdc++ -lm -Wno-shift-count-overflow -I../gdb/inst -DQC

include ../Makefile.switches


hostname := $(shell hostname)

.phony : all
.phony : cleanResults #strip excess info from Intel output (__file__) and remove emtpy outputs
.phony : archive

TARGETS := $(foreach c, $(COMPILERS), $(foreach s, $(SWITCHES), $c_$(hostname)_$(strip $(s))_out_$(VERBOSE)))

all : $(TARGETS) cleanResults archive

#very cool: recyclable target definitions! adapted from
#http://make.mad-scientist.net/the-eval-function/

define RULE
$2_$(hostname)_$(strip $1)_out_$(VERBOSE) : $2_$(hostname)_$(strip $1)
	-./$$< $(VERBOSE) > $$@
	-sed -i 's/HOST/$(hostname)/g' $$@
	-sed -i 's/SWITCHES/$($(strip $1))/g' $$@
	-sed -i 's/COMPILER/$($(strip $2))/g' $$@
	-sed -i 's/FILENAME/$2_$(hostname)_$(strip $1)/g' $$@

$2_$(hostname)_$(strip $1) : test.cpp
	-$($(strip $2)) $($(strip $1)) $(CC_REQUIRED) $$< -o $$@
endef

$(foreach c, $(COMPILERS), $(foreach s, $(SWITCHES), $(eval $(call RULE, $s, $c))))

cleanResults : $(TARGETS)
	$(info doing clean)
	sed -i 's/FPTests:://' *out_$(VERBOSE)
	-find . -size 0 -exec rm {} \;

archive : cleanResults
	-tar -zcf ../results/$(hostname).tgz *$(hostname)*
	-rm *$(hostname)*

.phony : clean

clean :
	-rm $(addsuffix *, $(COMPILERS))
