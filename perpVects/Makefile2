# a makefile for a variety of compielrs and compiler flags

#the list of compilers to iterate over
#compiler specific flags may be set here
GCC := g++
CLANG := $(if $(shell which clang++-3.6), clang++-3.6, clang++)
PG := pgCC  #doesn't fully support c++11 (even 15.7!) so not in list
INTEL := icpc -mlong-double-80

COMPILERS := $(foreach c, GCC INTEL CLANG, $(if $(shell which $($(c))), $c,))

#gives highly detailed output (general scores aren't perfect indexes of results --
#  i.e. different results can produce identical scores
VERBOSE ?=

#CC_GEN_OPTS ?= -O0 -ggdb
CC_REQUIRED  = -std=c++14
CC_REQUIRED += -Wno-shift-count-overflow
CC_REQUIRED += -lstdc++
CC_REQUIRED += -lm
CC_REQUIRED += -lpthread
CC_REQUIRED += -pthread
CC_REQUIRED += -I../gdb/inst
CC_REQUIRED += -I../gdb/inst
CC_REQUIRED += -I.

#Eigen includes

CC_REQUIRED += -isystem eigen/build/unsupported/test
CC_REQUIRED += -isystem eigen/unsupported/test
CC_REQUIRED += -isystem eigen
CC_REQUIRED += -isystem eigen/build
CC_REQUIRED += -isystem eigen/unsupported/test/../../test
CC_REQUIRED += -isystem eigen/unsupported/test/../../unsupported
CC_REQUIRED += -isystem eigen/unsupported/test/../../Eigen
CC_REQUIRED += -isystem eigen/build/unsupported/test/../../test
CC_REQUIRED += -isystem eigen/unsupported/test/./mpreal

include ../Makefile.switches

# INCFILES    := $(wildcard *.h)
TESTS       := $(wildcard tests/*.cpp)
SOURCE      := $(wildcard *.cpp)
SOURCE      += $(TESTS)

hostname    := $(shell hostname)

TARGETS     := $(foreach c, $(COMPILERS), \
                 $(foreach s, $(SWITCHES), \
                   $c_$(hostname)_$(strip $(s))_out_$(VERBOSE)))
VERBOSE_OUTPUT := $(TARGETS:%=%_out_$(VERBOSE))

.PHONY : all
all : $(TARGETS) cleanResults archive

# very cool: recyclable target definitions! adapted from
# http://make.mad-scientist.net/the-eval-function/

define RULE
$(strip 2)_$(hostname)_$(strip $1)_out_$(VERBOSE) : $2_$(hostname)_$(strip $1)
	-./$$< $(VERBOSE) > $$@
	-sed -i 's/HOST/$(hostname)/g' $$@
	-sed -i 's/SWITCHES/$($(strip $1))/g' $$@
	-sed -i 's/COMPILER/$($(strip $2))/g' $$@
	-sed -i 's/FILENAME/$2_$(hostname)_$(strip $1)/g' $$@

$(strip $2)_$(hostname)_$(strip $1) : $(SOURCE:%.cpp=%_$(strip $2)_$(hostname)_$(strip $1).o)
	-$($(strip $2)) $($(strip $1)) $(CC_REQUIRED) $$^ -o $$@
	-rm $(SOURCE:.cpp=_$(strip $2)_$(hostname)_$(strip $1).o)

%_$(strip $2)_$(hostname)_$(strip $1).o : %.cpp
	-$($(strip $2)) -c $($(strip $1)) $(CC_REQUIRED) $$< -o $$@
endef

$(foreach c, $(COMPILERS), $(foreach s, $(SWITCHES), $(eval $(call RULE, $s, $c))))

.PHONY : cleanResults #strip excess info from Intel output (__file__) and remove emtpy outputs
cleanResults : $(TARGETS)
	$(info doing clean)
	sed -i 's/FPTests:://' *out_$(VERBOSE)
	-find . -size 0 -exec rm {} \;

.PHONY : archive
archive : cleanResults
	-tar -zcf ../results/$(hostname).tgz *$(hostname)*
	rm -f *$(hostname)*

.PHONY : clean
clean :
	rm -f $(TARGETS)
	rm -f $(VERBOSE_OUTPUT)
