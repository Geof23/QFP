#CC := clang++
TARGET ?= runTests_CUDA

#CUDA
NVCC := /usr/local/cuda-7.5/bin/nvcc
#NVCC  := nvcc
#NVCC := /usr/bin/g++-4.9
NVCC_VER := nvcc-7.5
NVCC_REQUIRED += --std=c++11
NVCC_REQUIRED += -O0
NVCC_REQUIRED += -ccbin=g++-4.9
NVCC_REQUIRED += -g
NVCC_REQUIRED += -arch=sm_20

NVCC_CFLAGS := -x cu
NVCC_CFLAGS += -dc
NVCC_CFLAGS += -D__CUDA__
NVCC_CFLAGS += -I .
NVCC_CFLAGS += -I /usr/local/cuda/samples/common/inc

HAS_CUDA      := $(shell command -v nvcc 2> /dev/null)


#DEPFLAGS += -MD -MF $*.d

TESTS    := $(wildcard tests/*.cpp)
SOURCE   := $(wildcard *.cpp)
SOURCE   += $(TESTS)

CUSOURCE += $(wildcard tests/*.cu)
CUSOURCE += $(wildcard *.cu)

CUDEPS	 += $(SOURCE:.cpp=.d)
CUDEPS	 += $(CUSOURCE:.cu=.d)

CUOBJ 	 += $(SOURCE:%.cpp=%.o)
CUOBJ	 += $(CUSOURCE:%.cu=%.o)

.PHONY : all
all :  $(TARGET)

$(TARGET) : $(CUOBJ)
	$(NVCC) $(NVCC_REQUIRED)   -o $@ $^

%.o : %.cpp
	$(NVCC) $(NVCC_REQUIRED) $(NVCC_CFLAGS) $(DEPFLAGS) -c $< -o $@

%.o : %.cu
	$(NVCC) $(NVCC_REQUIRED) $(NVCC_CFLAGS) $(DEPFLAGS) -c $< -o $@

# .PRECIOUS: %.d
# -include $(CUSOURCE:%.cpp=%.d)
# -include $(CUSOURCE:%.cu=%.d)

.PHONY : clean
clean :
	rm -f $(CUOBJ)
	rm -f $(CUDEPS)

.PHONY: veryclean distclean
veryclean : distclean
distclean : clean
	rm -f $(TARGET)

