  400b61:	62 f2 f9 08 19 44 24 	vbroadcastsd 0x20(%rsp),%zmm0  #load dividend
  400b69:	ba 01 00 00 00       	mov    $0x1,%edx
  400b6e:	62 f2 f9 08 19 4c 24 	vbroadcastsd 0x28(%rsp),%zmm1 #load divisor
  400b76:	c5 f8 92 da          	kmov   %edx,%k3               #load mask
  400b7a:	62 72 f9 0b 42 c9    	vgetexppd %zmm1,%zmm9{%k3}    #extract (unbiased) exponent of divisor
  400b80:	48 89 c7             	mov    %rax,%rdi
  400b83:	62 72 f9 0b 42 c0    	vgetexppd %zmm0,%zmm8{%k3}    #extract (unbiased) exponent of dividend
  400b89:	62 72 79 08 5a 25 fd 	vbroadcasti32x4 0x3fd(%rip),%zmm12        # 400f90 <.L_2il0floatpacket.5+0x50>
  		      	       	  	#mystery #1
  400b90:	03 00 00 
  400b93:	62 f3 f9 0b 26 f9 00 	vgetmantpd $0x0,%zmm1,%zmm7{%k3}  #extract mantissa of divisor
  400b9a:	62 51 b9 0b 5c d1    	vsubpd %zmm9,%zmm8,%zmm10{%k3}    #subtract divisor exp from dividend exp
  400ba0:	62 52 29 48 39 dc    	vpminsd %zmm12{aaaa},%zmm10,%zmm11  #Get minimum of mystery number and exp diff
  400ba6:	62 f1 f9 fb 5a e7    	vcvtpd2ps {rz-sae},%zmm7,%zmm4{%k3} # convert mantissa to float32
  400bac:	62 e2 f9 08 5b 15 8a 	vbroadcasti64x4 0x38a(%rip),%zmm18        # 400f40 <.L_2il0floatpacket.5>
  		      	       	  	#another mystery number #2
  400bb3:	03 00 00 
  400bb6:	62 52 21 58 3b ec    	vpminud %zmm12{bbbb},%zmm11,%zmm13  #get min of mystery #1 and exp diff
  400bbc:	62 f2 79 0b ca ec    	vrcp23ps %zmm4,%zmm5{%k3}           #get reciprocal of divisor mantissa 
  400bc2:	62 f1 e1 08 ef db    	vpxorq %zmm3,%zmm3,%zmm3            #lear zmm3
  400bc8:	62 f2 79 08 58 15 ce 	vpbroadcastd 0x3ce(%rip),%zmm2        # 400fa0 <.L_2il0floatpacket.5+0x60>
  		      	       	  	#load another mystery #3
  400bcf:	03 00 00 
  400bd2:	62 31 91 6b 58 ea    	vaddpd %zmm18{cccc},%zmm13,%zmm13{%k3}  #add mystery #2 and min of #1 and exp diff
  		      	       		       					     (possibly handling exponent bias)
  400bd8:	62 f2 f1 0b 55 da    	vfixupnanpd %zmm2,%zmm1,%zmm3{%k3}      #nan fixup for divisor & dividend
  400bde:	62 e1 78 0b 5a e5    	vcvtps2pd %ymm5,%zmm20{%k3}             #convert %ymm5 to 64 bit fp?  according to
  http://www.ece.lsu.edu/gp/refs/xeon-phi-isa-ref-manual.pdf, phi doesn't operate on ymm!
  400be4:	62 b1 f9 58 28 f2    	vmovapd %zmm18{bbbb},%zmm6	  	  #mov mystery #2 to zmm6
  400bea:	62 d1 01 08 72 f5 14 	vpslld $0x14,%zmm13,%zmm15		  #shift left 0x14 on prev vaddpd (bias?)
  400bf1:	62 72 f9 08 5b 35 65 	vbroadcasti64x4 0x365(%rip),%zmm14        # 400f60 <.L_2il0floatpacket.5+0x20>
  		      	       	  	#load mystery value #4
  400bf8:	03 00 00 
  400bfb:	62 f2 f9 0b 55 da    	vfixupnanpd %zmm2,%zmm0,%zmm3{%k3} #nan fixup dividend and #2?
  400c01:	62 f2 d9 c3 ac fe    	vfnmadd213pd {rn-sae},%zmm6,%zmm20,%zmm7{%k3}  #fma #2 and ymm? ymm may be bad dis
  400c07:	62 d1 49 00 72 e7 01 	vpsrad $0x1,%zmm15,%zmm22		       #shift right 1 bit arith (for sign bit?)
  400c0e:	62 f1 e1 0b c2 d3 00 	vcmpeqpd %zmm3,%zmm3,%k2{%k3}		       #vcmppd pseudo, compare nan fixup prev
  400c15:	62 f2 c1 cb b8 ff    	vfmadd231pd {rn-sae},%zmm7,%zmm7,%zmm7{%k3}    #fma prev fma
  400c1b:	62 c1 c9 43 db f6    	vpandq %zmm14{aaaa},%zmm22,%zmm22{%k3}	       #and exp result and mystery value (mask?)
  400c21:	c5 f8 90 ca          	kmov   %k2,%k1                                 #mask instruction
  400c25:	62 e2 79 08 58 2d 75 	vpbroadcastd 0x375(%rip),%zmm21        # 400fa4 <.L_2il0floatpacket.5+0x64>
  		      	       	  	#load mystery value #5
  400c2c:	03 00 00 
  400c2f:	62 a2 c1 cb b8 e4    	vfmadd231pd {rn-sae},%zmm20,%zmm7,%zmm20{%k3} #fma %ymm and prev fma
  400c35:	c5 f8 42 cb          	kandn  %k3,%k1                                #mask
  400c39:	62 e3 f9 0b 26 d8 00 	vgetmantpd $0x0,%zmm0,%zmm19{%k3}             #get mantissa of dividend
  400c40:	62 a1 01 08 fa c6    	vpsubd %zmm22,%zmm15,%zmm16                   #subtract from left shifted prev and
  400c46:	62 a1 f9 58 6f ca    	vmovdqa64 %zmm18{bbbb},%zmm17		      # move mystery 2 into zmm17
  400c4c:	62 b2 f1 0b 55 cd    	vfixupnanpd %zmm21,%zmm1,%zmm1{%k3}	      # nan fixup mystery #5 with divisor
  400c52:	62 21 e1 c2 59 cc    	vmulpd {rn-sae},%zmm20,%zmm19,%zmm25{%k2}     # multiply prev fma and dividend mant
  400c58:	62 21 79 00 fe c1    	vpaddd %zmm17,%zmm16,%zmm24		      # add mystery #2 and prev sub
  400c5e:	62 61 f9 c9 59 c9    	vmulpd {rn-sae},%zmm1,%zmm0,%zmm25{%k1}	      # mul divisor fixup and dividend
  400c64:	62 21 b9 43 db c2    	vpandq %zmm18{aaaa},%zmm24,%zmm24{%k3}        # and #2 and prev add
  400c6a:	62 a1 31 00 fe fe    	vpaddd %zmm22,%zmm25,%zmm23		      # add (exp result and mystery) (divis fixup and dividend)
  400c70:	62 01 c1 82 59 c8    	vmulpd {rn},%zmm24,%zmm23,%zmm25{%k2}  	      # multiply last two results
  400c76:	62 01 f9 0b 28 d1    	vmovapd %zmm25,%zmm26{%k3}		      # move out result
  400c7c:	62 91 f9 08 28 c2    	vmovapd %zmm26,%zmm0
