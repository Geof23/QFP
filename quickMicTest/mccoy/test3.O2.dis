
test3.O2:     file format elf64-x86-64


Disassembly of section .init:

0000000000400b20 <_init>:
  400b20:	48 83 ec 08          	sub    $0x8,%rsp
  400b24:	e8 e3 01 00 00       	callq  400d0c <call_gmon_start>
  400b29:	e8 72 02 00 00       	callq  400da0 <frame_dummy>
  400b2e:	e8 bd 12 00 00       	callq  401df0 <__do_global_ctors_aux>
  400b33:	48 83 c4 08          	add    $0x8,%rsp
  400b37:	c3                   	retq   

Disassembly of section .plt:

0000000000400b38 <std::ostream::operator<<(double)@plt-0x10>:
  400b38:	ff 35 12 2c 20 00    	pushq  0x202c12(%rip)        # 603750 <_GLOBAL_OFFSET_TABLE_+0x8>
  400b3e:	ff 25 14 2c 20 00    	jmpq   *0x202c14(%rip)        # 603758 <_GLOBAL_OFFSET_TABLE_+0x10>
  400b44:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400b48 <std::ostream::operator<<(double)@plt>:
  400b48:	ff 25 12 2c 20 00    	jmpq   *0x202c12(%rip)        # 603760 <_GLOBAL_OFFSET_TABLE_+0x18>
  400b4e:	68 00 00 00 00       	pushq  $0x0
  400b53:	e9 e0 ff ff ff       	jmpq   400b38 <_init+0x18>

0000000000400b58 <printf@plt>:
  400b58:	ff 25 0a 2c 20 00    	jmpq   *0x202c0a(%rip)        # 603768 <_GLOBAL_OFFSET_TABLE_+0x20>
  400b5e:	68 01 00 00 00       	pushq  $0x1
  400b63:	e9 d0 ff ff ff       	jmpq   400b38 <_init+0x18>

0000000000400b68 <memset@plt>:
  400b68:	ff 25 02 2c 20 00    	jmpq   *0x202c02(%rip)        # 603770 <_GLOBAL_OFFSET_TABLE_+0x28>
  400b6e:	68 02 00 00 00       	pushq  $0x2
  400b73:	e9 c0 ff ff ff       	jmpq   400b38 <_init+0x18>

0000000000400b78 <strncat@plt>:
  400b78:	ff 25 fa 2b 20 00    	jmpq   *0x202bfa(%rip)        # 603778 <_GLOBAL_OFFSET_TABLE_+0x30>
  400b7e:	68 03 00 00 00       	pushq  $0x3
  400b83:	e9 b0 ff ff ff       	jmpq   400b38 <_init+0x18>

0000000000400b88 <exit@plt>:
  400b88:	ff 25 f2 2b 20 00    	jmpq   *0x202bf2(%rip)        # 603780 <_GLOBAL_OFFSET_TABLE_+0x38>
  400b8e:	68 04 00 00 00       	pushq  $0x4
  400b93:	e9 a0 ff ff ff       	jmpq   400b38 <_init+0x18>

0000000000400b98 <std::ios_base::Init::Init()@plt>:
  400b98:	ff 25 ea 2b 20 00    	jmpq   *0x202bea(%rip)        # 603788 <_GLOBAL_OFFSET_TABLE_+0x40>
  400b9e:	68 05 00 00 00       	pushq  $0x5
  400ba3:	e9 90 ff ff ff       	jmpq   400b38 <_init+0x18>

0000000000400ba8 <__libc_start_main@plt>:
  400ba8:	ff 25 e2 2b 20 00    	jmpq   *0x202be2(%rip)        # 603790 <_GLOBAL_OFFSET_TABLE_+0x48>
  400bae:	68 06 00 00 00       	pushq  $0x6
  400bb3:	e9 80 ff ff ff       	jmpq   400b38 <_init+0x18>

0000000000400bb8 <__cxa_atexit@plt>:
  400bb8:	ff 25 da 2b 20 00    	jmpq   *0x202bda(%rip)        # 603798 <_GLOBAL_OFFSET_TABLE_+0x50>
  400bbe:	68 07 00 00 00       	pushq  $0x7
  400bc3:	e9 70 ff ff ff       	jmpq   400b38 <_init+0x18>

0000000000400bc8 <catgets@plt>:
  400bc8:	ff 25 d2 2b 20 00    	jmpq   *0x202bd2(%rip)        # 6037a0 <_GLOBAL_OFFSET_TABLE_+0x58>
  400bce:	68 08 00 00 00       	pushq  $0x8
  400bd3:	e9 60 ff ff ff       	jmpq   400b38 <_init+0x18>

0000000000400bd8 <std::ostream::operator<<(long double)@plt>:
  400bd8:	ff 25 ca 2b 20 00    	jmpq   *0x202bca(%rip)        # 6037a8 <_GLOBAL_OFFSET_TABLE_+0x60>
  400bde:	68 09 00 00 00       	pushq  $0x9
  400be3:	e9 50 ff ff ff       	jmpq   400b38 <_init+0x18>

0000000000400be8 <std::ios_base::Init::~Init()@plt>:
  400be8:	ff 25 c2 2b 20 00    	jmpq   *0x202bc2(%rip)        # 6037b0 <_GLOBAL_OFFSET_TABLE_+0x68>
  400bee:	68 0a 00 00 00       	pushq  $0xa
  400bf3:	e9 40 ff ff ff       	jmpq   400b38 <_init+0x18>

0000000000400bf8 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>:
  400bf8:	ff 25 ba 2b 20 00    	jmpq   *0x202bba(%rip)        # 6037b8 <_GLOBAL_OFFSET_TABLE_+0x70>
  400bfe:	68 0b 00 00 00       	pushq  $0xb
  400c03:	e9 30 ff ff ff       	jmpq   400b38 <_init+0x18>

0000000000400c08 <strlen@plt>:
  400c08:	ff 25 b2 2b 20 00    	jmpq   *0x202bb2(%rip)        # 6037c0 <_GLOBAL_OFFSET_TABLE_+0x78>
  400c0e:	68 0c 00 00 00       	pushq  $0xc
  400c13:	e9 20 ff ff ff       	jmpq   400b38 <_init+0x18>

0000000000400c18 <vsprintf@plt>:
  400c18:	ff 25 aa 2b 20 00    	jmpq   *0x202baa(%rip)        # 6037c8 <_GLOBAL_OFFSET_TABLE_+0x80>
  400c1e:	68 0d 00 00 00       	pushq  $0xd
  400c23:	e9 10 ff ff ff       	jmpq   400b38 <_init+0x18>

0000000000400c28 <strchr@plt>:
  400c28:	ff 25 a2 2b 20 00    	jmpq   *0x202ba2(%rip)        # 6037d0 <_GLOBAL_OFFSET_TABLE_+0x88>
  400c2e:	68 0e 00 00 00       	pushq  $0xe
  400c33:	e9 00 ff ff ff       	jmpq   400b38 <_init+0x18>

0000000000400c38 <setenv@plt>:
  400c38:	ff 25 9a 2b 20 00    	jmpq   *0x202b9a(%rip)        # 6037d8 <_GLOBAL_OFFSET_TABLE_+0x90>
  400c3e:	68 0f 00 00 00       	pushq  $0xf
  400c43:	e9 f0 fe ff ff       	jmpq   400b38 <_init+0x18>

0000000000400c48 <catopen@plt>:
  400c48:	ff 25 92 2b 20 00    	jmpq   *0x202b92(%rip)        # 6037e0 <_GLOBAL_OFFSET_TABLE_+0x98>
  400c4e:	68 10 00 00 00       	pushq  $0x10
  400c53:	e9 e0 fe ff ff       	jmpq   400b38 <_init+0x18>

0000000000400c58 <getenv@plt>:
  400c58:	ff 25 8a 2b 20 00    	jmpq   *0x202b8a(%rip)        # 6037e8 <_GLOBAL_OFFSET_TABLE_+0xa0>
  400c5e:	68 11 00 00 00       	pushq  $0x11
  400c63:	e9 d0 fe ff ff       	jmpq   400b38 <_init+0x18>

0000000000400c68 <std::ostream::operator<<(float)@plt>:
  400c68:	ff 25 82 2b 20 00    	jmpq   *0x202b82(%rip)        # 6037f0 <_GLOBAL_OFFSET_TABLE_+0xa8>
  400c6e:	68 12 00 00 00       	pushq  $0x12
  400c73:	e9 c0 fe ff ff       	jmpq   400b38 <_init+0x18>

0000000000400c78 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>:
  400c78:	ff 25 7a 2b 20 00    	jmpq   *0x202b7a(%rip)        # 6037f8 <_GLOBAL_OFFSET_TABLE_+0xb0>
  400c7e:	68 13 00 00 00       	pushq  $0x13
  400c83:	e9 b0 fe ff ff       	jmpq   400b38 <_init+0x18>

0000000000400c88 <strncpy@plt>:
  400c88:	ff 25 72 2b 20 00    	jmpq   *0x202b72(%rip)        # 603800 <_GLOBAL_OFFSET_TABLE_+0xb8>
  400c8e:	68 14 00 00 00       	pushq  $0x14
  400c93:	e9 a0 fe ff ff       	jmpq   400b38 <_init+0x18>

0000000000400c98 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>:
  400c98:	ff 25 6a 2b 20 00    	jmpq   *0x202b6a(%rip)        # 603808 <_GLOBAL_OFFSET_TABLE_+0xc0>
  400c9e:	68 15 00 00 00       	pushq  $0x15
  400ca3:	e9 90 fe ff ff       	jmpq   400b38 <_init+0x18>

0000000000400ca8 <__gxx_personality_v0@plt>:
  400ca8:	ff 25 62 2b 20 00    	jmpq   *0x202b62(%rip)        # 603810 <_GLOBAL_OFFSET_TABLE_+0xc8>
  400cae:	68 16 00 00 00       	pushq  $0x16
  400cb3:	e9 80 fe ff ff       	jmpq   400b38 <_init+0x18>

0000000000400cb8 <fprintf@plt>:
  400cb8:	ff 25 5a 2b 20 00    	jmpq   *0x202b5a(%rip)        # 603818 <_GLOBAL_OFFSET_TABLE_+0xd0>
  400cbe:	68 17 00 00 00       	pushq  $0x17
  400cc3:	e9 70 fe ff ff       	jmpq   400b38 <_init+0x18>

0000000000400cc8 <strtod@plt>:
  400cc8:	ff 25 52 2b 20 00    	jmpq   *0x202b52(%rip)        # 603820 <_GLOBAL_OFFSET_TABLE_+0xd8>
  400cce:	68 18 00 00 00       	pushq  $0x18
  400cd3:	e9 60 fe ff ff       	jmpq   400b38 <_init+0x18>

Disassembly of section .text:

0000000000400ce0 <_start>:
  400ce0:	31 ed                	xor    %ebp,%ebp
  400ce2:	49 89 d1             	mov    %rdx,%r9
  400ce5:	5e                   	pop    %rsi
  400ce6:	48 89 e2             	mov    %rsp,%rdx
  400ce9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400ced:	50                   	push   %rax
  400cee:	54                   	push   %rsp
  400cef:	49 c7 c0 50 1d 40 00 	mov    $0x401d50,%r8
  400cf6:	48 c7 c1 60 1d 40 00 	mov    $0x401d60,%rcx
  400cfd:	48 c7 c7 d0 0d 40 00 	mov    $0x400dd0,%rdi
  400d04:	e8 9f fe ff ff       	callq  400ba8 <__libc_start_main@plt>
  400d09:	f4                   	hlt    
  400d0a:	90                   	nop
  400d0b:	90                   	nop

0000000000400d0c <call_gmon_start>:
  400d0c:	48 83 ec 08          	sub    $0x8,%rsp
  400d10:	48 8b 05 19 2a 20 00 	mov    0x202a19(%rip),%rax        # 603730 <_DYNAMIC+0x1d0>
  400d17:	48 85 c0             	test   %rax,%rax
  400d1a:	74 02                	je     400d1e <call_gmon_start+0x12>
  400d1c:	ff d0                	callq  *%rax
  400d1e:	48 83 c4 08          	add    $0x8,%rsp
  400d22:	c3                   	retq   
  400d23:	90                   	nop
  400d24:	90                   	nop
  400d25:	90                   	nop
  400d26:	90                   	nop
  400d27:	90                   	nop
  400d28:	90                   	nop
  400d29:	90                   	nop
  400d2a:	90                   	nop
  400d2b:	90                   	nop
  400d2c:	90                   	nop
  400d2d:	90                   	nop
  400d2e:	90                   	nop
  400d2f:	90                   	nop

0000000000400d30 <__do_global_dtors_aux>:
  400d30:	55                   	push   %rbp
  400d31:	48 89 e5             	mov    %rsp,%rbp
  400d34:	53                   	push   %rbx
  400d35:	48 83 ec 08          	sub    $0x8,%rsp
  400d39:	80 3d b0 2d 20 00 00 	cmpb   $0x0,0x202db0(%rip)        # 603af0 <completed.6349>
  400d40:	75 4b                	jne    400d8d <__do_global_dtors_aux+0x5d>
  400d42:	bb 68 31 60 00       	mov    $0x603168,%ebx
  400d47:	48 8b 05 aa 2d 20 00 	mov    0x202daa(%rip),%rax        # 603af8 <dtor_idx.6351>
  400d4e:	48 81 eb 60 31 60 00 	sub    $0x603160,%rbx
  400d55:	48 c1 fb 03          	sar    $0x3,%rbx
  400d59:	48 83 eb 01          	sub    $0x1,%rbx
  400d5d:	48 39 d8             	cmp    %rbx,%rax
  400d60:	73 24                	jae    400d86 <__do_global_dtors_aux+0x56>
  400d62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400d68:	48 83 c0 01          	add    $0x1,%rax
  400d6c:	48 89 05 85 2d 20 00 	mov    %rax,0x202d85(%rip)        # 603af8 <dtor_idx.6351>
  400d73:	ff 14 c5 60 31 60 00 	callq  *0x603160(,%rax,8)
  400d7a:	48 8b 05 77 2d 20 00 	mov    0x202d77(%rip),%rax        # 603af8 <dtor_idx.6351>
  400d81:	48 39 d8             	cmp    %rbx,%rax
  400d84:	72 e2                	jb     400d68 <__do_global_dtors_aux+0x38>
  400d86:	c6 05 63 2d 20 00 01 	movb   $0x1,0x202d63(%rip)        # 603af0 <completed.6349>
  400d8d:	48 83 c4 08          	add    $0x8,%rsp
  400d91:	5b                   	pop    %rbx
  400d92:	c9                   	leaveq 
  400d93:	c3                   	retq   
  400d94:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  400d9b:	00 00 00 00 00 

0000000000400da0 <frame_dummy>:
  400da0:	48 83 3d c8 23 20 00 	cmpq   $0x0,0x2023c8(%rip)        # 603170 <__JCR_END__>
  400da7:	00 
  400da8:	55                   	push   %rbp
  400da9:	48 89 e5             	mov    %rsp,%rbp
  400dac:	74 12                	je     400dc0 <frame_dummy+0x20>
  400dae:	b8 00 00 00 00       	mov    $0x0,%eax
  400db3:	48 85 c0             	test   %rax,%rax
  400db6:	74 08                	je     400dc0 <frame_dummy+0x20>
  400db8:	bf 70 31 60 00       	mov    $0x603170,%edi
  400dbd:	c9                   	leaveq 
  400dbe:	ff e0                	jmpq   *%rax
  400dc0:	c9                   	leaveq 
  400dc1:	c3                   	retq   
  400dc2:	90                   	nop
  400dc3:	90                   	nop
  400dc4:	90                   	nop
  400dc5:	90                   	nop
  400dc6:	90                   	nop
  400dc7:	90                   	nop
  400dc8:	90                   	nop
  400dc9:	90                   	nop
  400dca:	90                   	nop
  400dcb:	90                   	nop
  400dcc:	90                   	nop
  400dcd:	90                   	nop
  400dce:	90                   	nop
  400dcf:	90                   	nop

0000000000400dd0 <main>:
  400dd0:	55                   	push   %rbp
  400dd1:	48 89 e5             	mov    %rsp,%rbp
  400dd4:	48 83 e4 80          	and    $0xffffffffffffff80,%rsp
  400dd8:	41 54                	push   %r12
  400dda:	48 83 ec 78          	sub    $0x78,%rsp
  400dde:	49 89 f4             	mov    %rsi,%r12
  400de1:	33 f6                	xor    %esi,%esi
  400de3:	bf 03 00 00 00       	mov    $0x3,%edi
  400de8:	e8 e3 01 00 00       	callq  400fd0 <__intel_new_feature_proc_init>
  400ded:	0f ae 1c 24          	stmxcsr (%rsp)
  400df1:	33 f6                	xor    %esi,%esi
  400df3:	81 0c 24 40 80 00 00 	orl    $0x8040,(%rsp)
  400dfa:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
  400dff:	0f ae 14 24          	ldmxcsr (%rsp)
  400e03:	e8 c0 fe ff ff       	callq  400cc8 <strtod@plt>
  400e08:	f2 0f 11 44 24 18    	movsd  %xmm0,0x18(%rsp)
  400e0e:	33 f6                	xor    %esi,%esi
  400e10:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
  400e15:	e8 ae fe ff ff       	callq  400cc8 <strtod@plt>
  400e1a:	f2 0f 11 44 24 20    	movsd  %xmm0,0x20(%rsp)
  400e20:	33 f6                	xor    %esi,%esi
  400e22:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
  400e27:	e8 9c fe ff ff       	callq  400cc8 <strtod@plt>
  400e2c:	f2 0f 11 44 24 28    	movsd  %xmm0,0x28(%rsp)
  400e32:	33 f6                	xor    %esi,%esi
  400e34:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
  400e39:	e8 8a fe ff ff       	callq  400cc8 <strtod@plt>
  400e3e:	f2 0f 11 44 24 10    	movsd  %xmm0,0x10(%rsp)
  400e44:	33 f6                	xor    %esi,%esi
  400e46:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
  400e4b:	e8 78 fe ff ff       	callq  400cc8 <strtod@plt>
  400e50:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
  400e56:	33 f6                	xor    %esi,%esi
  400e58:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
  400e5d:	e8 66 fe ff ff       	callq  400cc8 <strtod@plt>
  400e62:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
  400e67:	bf e0 39 60 00       	mov    $0x6039e0,%edi
  400e6c:	be 50 1e 40 00       	mov    $0x401e50,%esi
  400e71:	e8 82 fd ff ff       	callq  400bf8 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
  400e76:	48 89 c7             	mov    %rax,%rdi
  400e79:	be 98 0c 40 00       	mov    $0x400c98,%esi
  400e7e:	e8 f5 fd ff ff       	callq  400c78 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>
  400e83:	48 8b 05 56 2b 20 00 	mov    0x202b56(%rip),%rax        # 6039e0 <std::cout@@GLIBCXX_3.4>
  400e8a:	bf e0 39 60 00       	mov    $0x6039e0,%edi
  400e8f:	be 74 1e 40 00       	mov    $0x401e74,%esi
  400e94:	48 8b 50 e8          	mov    -0x18(%rax),%rdx
  400e98:	48 c7 82 e8 39 60 00 	movq   $0xc8,0x6039e8(%rdx)
  400e9f:	c8 00 00 00 
  400ea3:	e8 50 fd ff ff       	callq  400bf8 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
  400ea8:	f2 0f 10 44 24 18    	movsd  0x18(%rsp),%xmm0
  400eae:	48 89 c7             	mov    %rax,%rdi
  400eb1:	f2 0f 10 4c 24 20    	movsd  0x20(%rsp),%xmm1
  400eb7:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
  400ebb:	f2 0f 5a c9          	cvtsd2ss %xmm1,%xmm1
  400ebf:	f3 0f 5e c1          	divss  %xmm1,%xmm0
  400ec3:	e8 a0 fd ff ff       	callq  400c68 <std::ostream::operator<<(float)@plt>
  400ec8:	48 89 c7             	mov    %rax,%rdi
  400ecb:	be 98 0c 40 00       	mov    $0x400c98,%esi
  400ed0:	e8 a3 fd ff ff       	callq  400c78 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>
  400ed5:	bf e0 39 60 00       	mov    $0x6039e0,%edi
  400eda:	be 88 1e 40 00       	mov    $0x401e88,%esi
  400edf:	e8 14 fd ff ff       	callq  400bf8 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
  400ee4:	f2 0f 10 44 24 28    	movsd  0x28(%rsp),%xmm0
  400eea:	48 89 c7             	mov    %rax,%rdi
  400eed:	f2 0f 5e 44 24 10    	divsd  0x10(%rsp),%xmm0
  400ef3:	e8 50 fc ff ff       	callq  400b48 <std::ostream::operator<<(double)@plt>
  400ef8:	48 89 c7             	mov    %rax,%rdi
  400efb:	be 98 0c 40 00       	mov    $0x400c98,%esi
  400f00:	e8 73 fd ff ff       	callq  400c78 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>
  400f05:	bf e0 39 60 00       	mov    $0x6039e0,%edi
  400f0a:	be 9c 1e 40 00       	mov    $0x401e9c,%esi
  400f0f:	e8 e4 fc ff ff       	callq  400bf8 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
  400f14:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
  400f18:	48 89 c7             	mov    %rax,%rdi
  400f1b:	f2 0f 10 44 24 18    	movsd  0x18(%rsp),%xmm0
  400f21:	f2 0f 11 44 24 20    	movsd  %xmm0,0x20(%rsp)
  400f27:	dd 44 24 20          	fldl   0x20(%rsp)
  400f2b:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
  400f31:	f2 0f 11 4c 24 20    	movsd  %xmm1,0x20(%rsp)
  400f37:	dc 74 24 20          	fdivl  0x20(%rsp)
  400f3b:	db 3c 24             	fstpt  (%rsp)
  400f3e:	e8 95 fc ff ff       	callq  400bd8 <std::ostream::operator<<(long double)@plt>
  400f43:	48 83 c4 10          	add    $0x10,%rsp
  400f47:	48 89 c7             	mov    %rax,%rdi
  400f4a:	be 98 0c 40 00       	mov    $0x400c98,%esi
  400f4f:	e8 24 fd ff ff       	callq  400c78 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>
  400f54:	33 c0                	xor    %eax,%eax
  400f56:	48 83 c4 78          	add    $0x78,%rsp
  400f5a:	41 5c                	pop    %r12
  400f5c:	48 89 ec             	mov    %rbp,%rsp
  400f5f:	5d                   	pop    %rbp
  400f60:	c3                   	retq   
  400f61:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400f68:	00 
  400f69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400f70 <__sti__$E>:
  400f70:	56                   	push   %rsi
  400f71:	bf 00 3b 60 00       	mov    $0x603b00,%edi
  400f76:	e8 1d fc ff ff       	callq  400b98 <std::ios_base::Init::Init()@plt>
  400f7b:	bf e8 0b 40 00       	mov    $0x400be8,%edi
  400f80:	be 00 3b 60 00       	mov    $0x603b00,%esi
  400f85:	ba 48 1e 40 00       	mov    $0x401e48,%edx
  400f8a:	48 83 c4 08          	add    $0x8,%rsp
  400f8e:	e9 25 fc ff ff       	jmpq   400bb8 <__cxa_atexit@plt>
  400f93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400f98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400f9f:	00 

0000000000400fa0 <std::char_traits<char>::length(char const*)>:
  400fa0:	56                   	push   %rsi
  400fa1:	48 89 fa             	mov    %rdi,%rdx
  400fa4:	48 89 d1             	mov    %rdx,%rcx
  400fa7:	48 83 e2 f0          	and    $0xfffffffffffffff0,%rdx
  400fab:	66 0f ef c0          	pxor   %xmm0,%xmm0
  400faf:	66 0f 74 02          	pcmpeqb (%rdx),%xmm0
  400fb3:	66 0f d7 c0          	pmovmskb %xmm0,%eax
  400fb7:	83 e1 0f             	and    $0xf,%ecx
  400fba:	d3 e8                	shr    %cl,%eax
  400fbc:	0f bc c0             	bsf    %eax,%eax
  400fbf:	75 0b                	jne    400fcc <std::char_traits<char>::length(char const*)+0x2c>
  400fc1:	48 89 d0             	mov    %rdx,%rax
  400fc4:	48 03 d1             	add    %rcx,%rdx
  400fc7:	e8 64 03 00 00       	callq  401330 <__intel_sse2_strlen>
  400fcc:	59                   	pop    %rcx
  400fcd:	c3                   	retq   
  400fce:	66 90                	xchg   %ax,%ax

0000000000400fd0 <__intel_new_feature_proc_init>:
  400fd0:	41 54                	push   %r12
  400fd2:	41 55                	push   %r13
  400fd4:	41 56                	push   %r14
  400fd6:	48 81 ec 30 04 00 00 	sub    $0x430,%rsp
  400fdd:	49 89 f6             	mov    %rsi,%r14
  400fe0:	48 8b 05 51 27 20 00 	mov    0x202751(%rip),%rax        # 603738 <_DYNAMIC+0x1d8>
  400fe7:	41 89 fd             	mov    %edi,%r13d
  400fea:	4c 8b 20             	mov    (%rax),%r12
  400fed:	4d 85 e4             	test   %r12,%r12
  400ff0:	0f 84 f6 02 00 00    	je     4012ec <__intel_new_feature_proc_init+0x31c>
  400ff6:	4c 89 e0             	mov    %r12,%rax
  400ff9:	49 23 c6             	and    %r14,%rax
  400ffc:	4c 3b f0             	cmp    %rax,%r14
  400fff:	0f 84 74 02 00 00    	je     401279 <__intel_new_feature_proc_init+0x2a9>
  401005:	49 f7 c6 01 00 00 00 	test   $0x1,%r14
  40100c:	0f 85 b9 02 00 00    	jne    4012cb <__intel_new_feature_proc_init+0x2fb>
  401012:	49 f7 d4             	not    %r12
  401015:	bf 39 00 00 00       	mov    $0x39,%edi
  40101a:	4d 23 e6             	and    %r14,%r12
  40101d:	45 33 f6             	xor    %r14d,%r14d
  401020:	33 f6                	xor    %esi,%esi
  401022:	33 c0                	xor    %eax,%eax
  401024:	45 33 ed             	xor    %r13d,%r13d
  401027:	e8 34 03 00 00       	callq  401360 <__libirc_get_msg>
  40102c:	48 89 c6             	mov    %rax,%rsi
  40102f:	b8 01 00 00 00       	mov    $0x1,%eax
  401034:	4c 89 ea             	mov    %r13,%rdx
  401037:	c6 04 24 00          	movb   $0x0,(%rsp)
  40103b:	48 89 b4 24 28 04 00 	mov    %rsi,0x428(%rsp)
  401042:	00 
  401043:	4c 89 bc 24 20 04 00 	mov    %r15,0x420(%rsp)
  40104a:	00 
  40104b:	4d 89 ef             	mov    %r13,%r15
  40104e:	48 89 9c 24 18 04 00 	mov    %rbx,0x418(%rsp)
  401055:	00 
  401056:	48 89 ac 24 10 04 00 	mov    %rbp,0x410(%rsp)
  40105d:	00 
  40105e:	89 c5                	mov    %eax,%ebp
  401060:	bb 01 00 00 00       	mov    $0x1,%ebx
  401065:	8d 4d 3f             	lea    0x3f(%rbp),%ecx
  401068:	48 d3 e3             	shl    %cl,%rbx
  40106b:	83 fd 28             	cmp    $0x28,%ebp
  40106e:	49 0f 47 df          	cmova  %r15,%rbx
  401072:	4c 85 e3             	test   %r12,%rbx
  401075:	0f 84 00 01 00 00    	je     40117b <__intel_new_feature_proc_init+0x1ab>
  40107b:	83 fd 29             	cmp    $0x29,%ebp
  40107e:	0f 83 cb 01 00 00    	jae    40124f <__intel_new_feature_proc_init+0x27f>
  401084:	48 8d 0d d5 27 20 00 	lea    0x2027d5(%rip),%rcx        # 603860 <c_feature_names>
  40108b:	48 8b 1c e9          	mov    (%rcx,%rbp,8),%rbx
  40108f:	48 85 db             	test   %rbx,%rbx
  401092:	0f 84 b7 01 00 00    	je     40124f <__intel_new_feature_proc_init+0x27f>
  401098:	80 3b 00             	cmpb   $0x0,(%rbx)
  40109b:	0f 84 ae 01 00 00    	je     40124f <__intel_new_feature_proc_init+0x27f>
  4010a1:	80 3c 24 00          	cmpb   $0x0,(%rsp)
  4010a5:	0f 84 ab 00 00 00    	je     401156 <__intel_new_feature_proc_init+0x186>
  4010ab:	4d 85 f6             	test   %r14,%r14
  4010ae:	0f 84 9d 00 00 00    	je     401151 <__intel_new_feature_proc_init+0x181>
  4010b4:	4c 89 f7             	mov    %r14,%rdi
  4010b7:	e8 4c fb ff ff       	callq  400c08 <strlen@plt>
  4010bc:	48 8b bc 24 28 04 00 	mov    0x428(%rsp),%rdi
  4010c3:	00 
  4010c4:	48 89 84 24 08 04 00 	mov    %rax,0x408(%rsp)
  4010cb:	00 
  4010cc:	e8 37 fb ff ff       	callq  400c08 <strlen@plt>
  4010d1:	48 89 df             	mov    %rbx,%rdi
  4010d4:	48 89 84 24 00 04 00 	mov    %rax,0x400(%rsp)
  4010db:	00 
  4010dc:	e8 27 fb ff ff       	callq  400c08 <strlen@plt>
  4010e1:	48 8b 8c 24 08 04 00 	mov    0x408(%rsp),%rcx
  4010e8:	00 
  4010e9:	49 03 cd             	add    %r13,%rcx
  4010ec:	48 03 8c 24 00 04 00 	add    0x400(%rsp),%rcx
  4010f3:	00 
  4010f4:	4c 8d 44 01 02       	lea    0x2(%rcx,%rax,1),%r8
  4010f9:	49 81 f8 00 04 00 00 	cmp    $0x400,%r8
  401100:	0f 83 8a 01 00 00    	jae    401290 <__intel_new_feature_proc_init+0x2c0>
  401106:	49 f7 dd             	neg    %r13
  401109:	48 8d 3c 24          	lea    (%rsp),%rdi
  40110d:	49 81 c5 ff 03 00 00 	add    $0x3ff,%r13
  401114:	48 8d 35 e1 0e 00 00 	lea    0xee1(%rip),%rsi        # 401ffc <__dso_handle+0x1b4>
  40111b:	4c 89 ea             	mov    %r13,%rdx
  40111e:	e8 55 fa ff ff       	callq  400b78 <strncat@plt>
  401123:	48 8d 3c 24          	lea    (%rsp),%rdi
  401127:	e8 dc fa ff ff       	callq  400c08 <strlen@plt>
  40112c:	48 63 d0             	movslq %eax,%rdx
  40112f:	48 8d 3c 24          	lea    (%rsp),%rdi
  401133:	48 f7 da             	neg    %rdx
  401136:	4c 89 f6             	mov    %r14,%rsi
  401139:	48 81 c2 ff 03 00 00 	add    $0x3ff,%rdx
  401140:	e8 33 fa ff ff       	callq  400b78 <strncat@plt>
  401145:	48 8d 3c 24          	lea    (%rsp),%rdi
  401149:	e8 ba fa ff ff       	callq  400c08 <strlen@plt>
  40114e:	4c 63 e8             	movslq %eax,%r13
  401151:	49 89 de             	mov    %rbx,%r14
  401154:	eb 25                	jmp    40117b <__intel_new_feature_proc_init+0x1ab>
  401156:	49 f7 dd             	neg    %r13
  401159:	48 8d 3c 24          	lea    (%rsp),%rdi
  40115d:	49 81 c5 ff 03 00 00 	add    $0x3ff,%r13
  401164:	48 89 de             	mov    %rbx,%rsi
  401167:	4c 89 ea             	mov    %r13,%rdx
  40116a:	e8 09 fa ff ff       	callq  400b78 <strncat@plt>
  40116f:	48 8d 3c 24          	lea    (%rsp),%rdi
  401173:	e8 90 fa ff ff       	callq  400c08 <strlen@plt>
  401178:	4c 63 e8             	movslq %eax,%r13
  40117b:	ff c5                	inc    %ebp
  40117d:	83 fd 28             	cmp    $0x28,%ebp
  401180:	0f 8e da fe ff ff    	jle    401060 <__intel_new_feature_proc_init+0x90>
  401186:	48 8b b4 24 28 04 00 	mov    0x428(%rsp),%rsi
  40118d:	00 
  40118e:	4c 89 ea             	mov    %r13,%rdx
  401191:	4c 8b bc 24 20 04 00 	mov    0x420(%rsp),%r15
  401198:	00 
  401199:	4d 85 f6             	test   %r14,%r14
  40119c:	48 8b 9c 24 18 04 00 	mov    0x418(%rsp),%rbx
  4011a3:	00 
  4011a4:	48 8b ac 24 10 04 00 	mov    0x410(%rsp),%rbp
  4011ab:	00 
  4011ac:	74 35                	je     4011e3 <__intel_new_feature_proc_init+0x213>
  4011ae:	48 f7 da             	neg    %rdx
  4011b1:	48 8d 3c 24          	lea    (%rsp),%rdi
  4011b5:	48 81 c2 ff 03 00 00 	add    $0x3ff,%rdx
  4011bc:	e8 b7 f9 ff ff       	callq  400b78 <strncat@plt>
  4011c1:	48 8d 3c 24          	lea    (%rsp),%rdi
  4011c5:	e8 3e fa ff ff       	callq  400c08 <strlen@plt>
  4011ca:	48 63 d0             	movslq %eax,%rdx
  4011cd:	48 8d 3c 24          	lea    (%rsp),%rdi
  4011d1:	48 f7 da             	neg    %rdx
  4011d4:	4c 89 f6             	mov    %r14,%rsi
  4011d7:	48 81 c2 ff 03 00 00 	add    $0x3ff,%rdx
  4011de:	e8 95 f9 ff ff       	callq  400b78 <strncat@plt>
  4011e3:	80 3c 24 00          	cmpb   $0x0,(%rsp)
  4011e7:	75 3d                	jne    401226 <__intel_new_feature_proc_init+0x256>
  4011e9:	33 f6                	xor    %esi,%esi
  4011eb:	bf 01 00 00 00       	mov    $0x1,%edi
  4011f0:	33 d2                	xor    %edx,%edx
  4011f2:	33 c0                	xor    %eax,%eax
  4011f4:	e8 97 03 00 00       	callq  401590 <__libirc_print>
  4011f9:	bf 01 00 00 00       	mov    $0x1,%edi
  4011fe:	be 3a 00 00 00       	mov    $0x3a,%esi
  401203:	33 d2                	xor    %edx,%edx
  401205:	33 c0                	xor    %eax,%eax
  401207:	e8 84 03 00 00       	callq  401590 <__libirc_print>
  40120c:	33 f6                	xor    %esi,%esi
  40120e:	bf 01 00 00 00       	mov    $0x1,%edi
  401213:	33 d2                	xor    %edx,%edx
  401215:	33 c0                	xor    %eax,%eax
  401217:	e8 74 03 00 00       	callq  401590 <__libirc_print>
  40121c:	bf 01 00 00 00       	mov    $0x1,%edi
  401221:	e8 62 f9 ff ff       	callq  400b88 <exit@plt>
  401226:	33 f6                	xor    %esi,%esi
  401228:	bf 01 00 00 00       	mov    $0x1,%edi
  40122d:	33 d2                	xor    %edx,%edx
  40122f:	33 c0                	xor    %eax,%eax
  401231:	e8 5a 03 00 00       	callq  401590 <__libirc_print>
  401236:	bf 01 00 00 00       	mov    $0x1,%edi
  40123b:	be 38 00 00 00       	mov    $0x38,%esi
  401240:	89 fa                	mov    %edi,%edx
  401242:	48 8d 0c 24          	lea    (%rsp),%rcx
  401246:	33 c0                	xor    %eax,%eax
  401248:	e8 43 03 00 00       	callq  401590 <__libirc_print>
  40124d:	eb bd                	jmp    40120c <__intel_new_feature_proc_init+0x23c>
  40124f:	4c 8b bc 24 20 04 00 	mov    0x420(%rsp),%r15
  401256:	00 
  401257:	48 8b 9c 24 18 04 00 	mov    0x418(%rsp),%rbx
  40125e:	00 
  40125f:	48 8b ac 24 10 04 00 	mov    0x410(%rsp),%rbp
  401266:	00 
  401267:	33 f6                	xor    %esi,%esi
  401269:	bf 01 00 00 00       	mov    $0x1,%edi
  40126e:	33 d2                	xor    %edx,%edx
  401270:	33 c0                	xor    %eax,%eax
  401272:	e8 19 03 00 00       	callq  401590 <__libirc_print>
  401277:	eb 80                	jmp    4011f9 <__intel_new_feature_proc_init+0x229>
  401279:	49 f7 c4 20 00 00 00 	test   $0x20,%r12
  401280:	75 5e                	jne    4012e0 <__intel_new_feature_proc_init+0x310>
  401282:	48 81 c4 30 04 00 00 	add    $0x430,%rsp
  401289:	41 5e                	pop    %r14
  40128b:	41 5d                	pop    %r13
  40128d:	41 5c                	pop    %r12
  40128f:	c3                   	retq   
  401290:	4c 89 ea             	mov    %r13,%rdx
  401293:	48 8d 3c 24          	lea    (%rsp),%rdi
  401297:	48 f7 da             	neg    %rdx
  40129a:	48 81 c2 ff 03 00 00 	add    $0x3ff,%rdx
  4012a1:	48 8b b4 24 28 04 00 	mov    0x428(%rsp),%rsi
  4012a8:	00 
  4012a9:	4c 8b bc 24 20 04 00 	mov    0x420(%rsp),%r15
  4012b0:	00 
  4012b1:	48 8b 9c 24 18 04 00 	mov    0x418(%rsp),%rbx
  4012b8:	00 
  4012b9:	48 8b ac 24 10 04 00 	mov    0x410(%rsp),%rbp
  4012c0:	00 
  4012c1:	e8 b2 f8 ff ff       	callq  400b78 <strncat@plt>
  4012c6:	e9 f6 fe ff ff       	jmpq   4011c1 <__intel_new_feature_proc_init+0x1f1>
  4012cb:	33 f6                	xor    %esi,%esi
  4012cd:	bf 01 00 00 00       	mov    $0x1,%edi
  4012d2:	33 d2                	xor    %edx,%edx
  4012d4:	33 c0                	xor    %eax,%eax
  4012d6:	e8 b5 02 00 00       	callq  401590 <__libirc_print>
  4012db:	e9 19 ff ff ff       	jmpq   4011f9 <__intel_new_feature_proc_init+0x229>
  4012e0:	33 ff                	xor    %edi,%edi
  4012e2:	44 89 ee             	mov    %r13d,%esi
  4012e5:	e8 b6 09 00 00       	callq  401ca0 <__intel_proc_init_ftzdazule>
  4012ea:	eb 96                	jmp    401282 <__intel_new_feature_proc_init+0x2b2>
  4012ec:	33 c0                	xor    %eax,%eax
  4012ee:	e8 6d 05 00 00       	callq  401860 <__intel_cpu_features_init>
  4012f3:	48 8b 05 3e 24 20 00 	mov    0x20243e(%rip),%rax        # 603738 <_DYNAMIC+0x1d8>
  4012fa:	4c 8b 20             	mov    (%rax),%r12
  4012fd:	4d 85 e4             	test   %r12,%r12
  401300:	0f 85 f0 fc ff ff    	jne    400ff6 <__intel_new_feature_proc_init+0x26>
  401306:	33 f6                	xor    %esi,%esi
  401308:	bf 01 00 00 00       	mov    $0x1,%edi
  40130d:	33 d2                	xor    %edx,%edx
  40130f:	33 c0                	xor    %eax,%eax
  401311:	e8 7a 02 00 00       	callq  401590 <__libirc_print>
  401316:	bf 01 00 00 00       	mov    $0x1,%edi
  40131b:	be 3b 00 00 00       	mov    $0x3b,%esi
  401320:	33 d2                	xor    %edx,%edx
  401322:	33 c0                	xor    %eax,%eax
  401324:	e8 67 02 00 00       	callq  401590 <__libirc_print>
  401329:	e9 de fe ff ff       	jmpq   40120c <__intel_new_feature_proc_init+0x23c>
  40132e:	66 90                	xchg   %ax,%ax

0000000000401330 <__intel_sse2_strlen>:
  401330:	66 0f ef c0          	pxor   %xmm0,%xmm0
  401334:	48 83 c0 10          	add    $0x10,%rax
  401338:	66 0f 6f 08          	movdqa (%rax),%xmm1
  40133c:	66 0f 74 c8          	pcmpeqb %xmm0,%xmm1
  401340:	66 0f d7 c9          	pmovmskb %xmm1,%ecx
  401344:	85 c9                	test   %ecx,%ecx
  401346:	74 ec                	je     401334 <__intel_sse2_strlen+0x4>
  401348:	0f bc c9             	bsf    %ecx,%ecx
  40134b:	48 2b ca             	sub    %rdx,%rcx
  40134e:	48 03 c1             	add    %rcx,%rax
  401351:	c3                   	retq   
  401352:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401359:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401360 <__libirc_get_msg>:
  401360:	41 54                	push   %r12
  401362:	41 55                	push   %r13
  401364:	41 56                	push   %r14
  401366:	48 81 ec 50 01 00 00 	sub    $0x150,%rsp
  40136d:	48 89 94 24 90 00 00 	mov    %rdx,0x90(%rsp)
  401374:	00 
  401375:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
  40137c:	00 
  40137d:	4c 89 84 24 a0 00 00 	mov    %r8,0xa0(%rsp)
  401384:	00 
  401385:	4c 89 8c 24 a8 00 00 	mov    %r9,0xa8(%rsp)
  40138c:	00 
  40138d:	44 0f b6 d8          	movzbl %al,%r11d
  401391:	4a 8d 04 9d 00 00 00 	lea    0x0(,%r11,4),%rax
  401398:	00 
  401399:	4c 8d 1d 2e 00 00 00 	lea    0x2e(%rip),%r11        # 4013ce <__libirc_get_msg+0x6e>
  4013a0:	4c 2b d8             	sub    %rax,%r11
  4013a3:	48 8d 84 24 2f 01 00 	lea    0x12f(%rsp),%rax
  4013aa:	00 
  4013ab:	41 ff e3             	jmpq   *%r11
  4013ae:	0f 29 78 f1          	movaps %xmm7,-0xf(%rax)
  4013b2:	0f 29 70 e1          	movaps %xmm6,-0x1f(%rax)
  4013b6:	0f 29 68 d1          	movaps %xmm5,-0x2f(%rax)
  4013ba:	0f 29 60 c1          	movaps %xmm4,-0x3f(%rax)
  4013be:	0f 29 58 b1          	movaps %xmm3,-0x4f(%rax)
  4013c2:	0f 29 50 a1          	movaps %xmm2,-0x5f(%rax)
  4013c6:	0f 29 48 91          	movaps %xmm1,-0x6f(%rax)
  4013ca:	0f 29 40 81          	movaps %xmm0,-0x7f(%rax)
  4013ce:	41 89 fd             	mov    %edi,%r13d
  4013d1:	41 89 f6             	mov    %esi,%r14d
  4013d4:	45 85 ed             	test   %r13d,%r13d
  4013d7:	0f 84 8a 00 00 00    	je     401467 <__libirc_get_msg+0x107>
  4013dd:	83 3d dc 25 20 00 00 	cmpl   $0x0,0x2025dc(%rip)        # 6039c0 <first_msg>
  4013e4:	74 4e                	je     401434 <__libirc_get_msg+0xd4>
  4013e6:	48 8d 3d 13 0c 00 00 	lea    0xc13(%rip),%rdi        # 402000 <__dso_handle+0x1b8>
  4013ed:	33 f6                	xor    %esi,%esi
  4013ef:	c7 05 c7 25 20 00 00 	movl   $0x0,0x2025c7(%rip)        # 6039c0 <first_msg>
  4013f6:	00 00 00 
  4013f9:	e8 4a f8 ff ff       	callq  400c48 <catopen@plt>
  4013fe:	48 89 05 1b 2b 20 00 	mov    %rax,0x202b1b(%rip)        # 603f20 <message_catalog>
  401405:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  401409:	0f 84 d7 00 00 00    	je     4014e6 <__libirc_get_msg+0x186>
  40140f:	48 8b 3d 0a 2b 20 00 	mov    0x202b0a(%rip),%rdi        # 603f20 <message_catalog>
  401416:	49 63 c5             	movslq %r13d,%rax
  401419:	48 8d 0d 68 1d 20 00 	lea    0x201d68(%rip),%rcx        # 603188 <irc_msgtab+0x8>
  401420:	48 c1 e0 04          	shl    $0x4,%rax
  401424:	c7 05 96 25 20 00 00 	movl   $0x0,0x202596(%rip)        # 6039c4 <use_internal_msg>
  40142b:	00 00 00 
  40142e:	48 8b 0c 08          	mov    (%rax,%rcx,1),%rcx
  401432:	eb 21                	jmp    401455 <__libirc_get_msg+0xf5>
  401434:	8b 3d 8a 25 20 00    	mov    0x20258a(%rip),%edi        # 6039c4 <use_internal_msg>
  40143a:	49 63 c5             	movslq %r13d,%rax
  40143d:	48 8d 0d 44 1d 20 00 	lea    0x201d44(%rip),%rcx        # 603188 <irc_msgtab+0x8>
  401444:	48 c1 e0 04          	shl    $0x4,%rax
  401448:	85 ff                	test   %edi,%edi
  40144a:	48 8b 0c 08          	mov    (%rax,%rcx,1),%rcx
  40144e:	75 1e                	jne    40146e <__libirc_get_msg+0x10e>
  401450:	e9 28 01 00 00       	jmpq   40157d <__libirc_get_msg+0x21d>
  401455:	be 01 00 00 00       	mov    $0x1,%esi
  40145a:	44 89 ea             	mov    %r13d,%edx
  40145d:	e8 66 f7 ff ff       	callq  400bc8 <catgets@plt>
  401462:	48 89 c1             	mov    %rax,%rcx
  401465:	eb 07                	jmp    40146e <__libirc_get_msg+0x10e>
  401467:	48 8d 0d 16 0a 00 00 	lea    0xa16(%rip),%rcx        # 401e84 <__dso_handle+0x3c>
  40146e:	45 85 f6             	test   %r14d,%r14d
  401471:	7e 62                	jle    4014d5 <__libirc_get_msg+0x175>
  401473:	c7 84 24 30 01 00 00 	movl   $0x10,0x130(%rsp)
  40147a:	10 00 00 00 
  40147e:	48 8d 94 24 70 01 00 	lea    0x170(%rsp),%rdx
  401485:	00 
  401486:	c7 84 24 34 01 00 00 	movl   $0x30,0x134(%rsp)
  40148d:	30 00 00 00 
  401491:	48 8d bc 24 80 00 00 	lea    0x80(%rsp),%rdi
  401498:	00 
  401499:	48 89 94 24 38 01 00 	mov    %rdx,0x138(%rsp)
  4014a0:	00 
  4014a1:	48 89 bc 24 40 01 00 	mov    %rdi,0x140(%rsp)
  4014a8:	00 
  4014a9:	48 8d 3d 70 26 20 00 	lea    0x202670(%rip),%rdi        # 603b20 <get_msg_buf>
  4014b0:	48 89 ce             	mov    %rcx,%rsi
  4014b3:	48 8d 94 24 30 01 00 	lea    0x130(%rsp),%rdx
  4014ba:	00 
  4014bb:	e8 58 f7 ff ff       	callq  400c18 <vsprintf@plt>
  4014c0:	48 8d 05 59 26 20 00 	lea    0x202659(%rip),%rax        # 603b20 <get_msg_buf>
  4014c7:	48 81 c4 50 01 00 00 	add    $0x150,%rsp
  4014ce:	41 5e                	pop    %r14
  4014d0:	41 5d                	pop    %r13
  4014d2:	41 5c                	pop    %r12
  4014d4:	c3                   	retq   
  4014d5:	48 89 c8             	mov    %rcx,%rax
  4014d8:	48 81 c4 50 01 00 00 	add    $0x150,%rsp
  4014df:	41 5e                	pop    %r14
  4014e1:	41 5d                	pop    %r13
  4014e3:	41 5c                	pop    %r12
  4014e5:	c3                   	retq   
  4014e6:	48 8d 3d b7 10 00 00 	lea    0x10b7(%rip),%rdi        # 4025a4 <__dso_handle+0x75c>
  4014ed:	e8 66 f7 ff ff       	callq  400c58 <getenv@plt>
  4014f2:	48 85 c0             	test   %rax,%rax
  4014f5:	74 70                	je     401567 <__libirc_get_msg+0x207>
  4014f7:	48 89 c6             	mov    %rax,%rsi
  4014fa:	48 8d 3c 24          	lea    (%rsp),%rdi
  4014fe:	ba 80 00 00 00       	mov    $0x80,%edx
  401503:	e8 80 f7 ff ff       	callq  400c88 <strncpy@plt>
  401508:	be 2e 00 00 00       	mov    $0x2e,%esi
  40150d:	48 8d 3c 24          	lea    (%rsp),%rdi
  401511:	e8 12 f7 ff ff       	callq  400c28 <strchr@plt>
  401516:	49 89 c4             	mov    %rax,%r12
  401519:	4d 85 e4             	test   %r12,%r12
  40151c:	74 49                	je     401567 <__libirc_get_msg+0x207>
  40151e:	48 8d 3d 7f 10 00 00 	lea    0x107f(%rip),%rdi        # 4025a4 <__dso_handle+0x75c>
  401525:	48 8d 34 24          	lea    (%rsp),%rsi
  401529:	ba 01 00 00 00       	mov    $0x1,%edx
  40152e:	41 c6 04 24 00       	movb   $0x0,(%r12)
  401533:	e8 00 f7 ff ff       	callq  400c38 <setenv@plt>
  401538:	48 8d 3d c1 0a 00 00 	lea    0xac1(%rip),%rdi        # 402000 <__dso_handle+0x1b8>
  40153f:	33 f6                	xor    %esi,%esi
  401541:	e8 02 f7 ff ff       	callq  400c48 <catopen@plt>
  401546:	48 8d 3d 57 10 00 00 	lea    0x1057(%rip),%rdi        # 4025a4 <__dso_handle+0x75c>
  40154d:	48 8d 34 24          	lea    (%rsp),%rsi
  401551:	ba 01 00 00 00       	mov    $0x1,%edx
  401556:	48 89 05 c3 29 20 00 	mov    %rax,0x2029c3(%rip)        # 603f20 <message_catalog>
  40155d:	41 c6 04 24 2e       	movb   $0x2e,(%r12)
  401562:	e8 d1 f6 ff ff       	callq  400c38 <setenv@plt>
  401567:	48 8b 3d b2 29 20 00 	mov    0x2029b2(%rip),%rdi        # 603f20 <message_catalog>
  40156e:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
  401572:	0f 85 9e fe ff ff    	jne    401416 <__libirc_get_msg+0xb6>
  401578:	e9 b7 fe ff ff       	jmpq   401434 <__libirc_get_msg+0xd4>
  40157d:	48 8b 3d 9c 29 20 00 	mov    0x20299c(%rip),%rdi        # 603f20 <message_catalog>
  401584:	e9 cc fe ff ff       	jmpq   401455 <__libirc_get_msg+0xf5>
  401589:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401590 <__libirc_print>:
  401590:	41 55                	push   %r13
  401592:	41 56                	push   %r14
  401594:	41 57                	push   %r15
  401596:	53                   	push   %rbx
  401597:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
  40159e:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
  4015a5:	00 
  4015a6:	4c 89 84 24 a0 00 00 	mov    %r8,0xa0(%rsp)
  4015ad:	00 
  4015ae:	4c 89 8c 24 a8 00 00 	mov    %r9,0xa8(%rsp)
  4015b5:	00 
  4015b6:	44 0f b6 d8          	movzbl %al,%r11d
  4015ba:	4a 8d 04 9d 00 00 00 	lea    0x0(,%r11,4),%rax
  4015c1:	00 
  4015c2:	4c 8d 1d 2e 00 00 00 	lea    0x2e(%rip),%r11        # 4015f7 <__libirc_print+0x67>
  4015c9:	4c 2b d8             	sub    %rax,%r11
  4015cc:	48 8d 84 24 2f 01 00 	lea    0x12f(%rsp),%rax
  4015d3:	00 
  4015d4:	41 ff e3             	jmpq   *%r11
  4015d7:	0f 29 78 f1          	movaps %xmm7,-0xf(%rax)
  4015db:	0f 29 70 e1          	movaps %xmm6,-0x1f(%rax)
  4015df:	0f 29 68 d1          	movaps %xmm5,-0x2f(%rax)
  4015e3:	0f 29 60 c1          	movaps %xmm4,-0x3f(%rax)
  4015e7:	0f 29 58 b1          	movaps %xmm3,-0x4f(%rax)
  4015eb:	0f 29 50 a1          	movaps %xmm2,-0x5f(%rax)
  4015ef:	0f 29 48 91          	movaps %xmm1,-0x6f(%rax)
  4015f3:	0f 29 40 81          	movaps %xmm0,-0x7f(%rax)
  4015f7:	41 89 f6             	mov    %esi,%r14d
  4015fa:	41 89 d7             	mov    %edx,%r15d
  4015fd:	41 89 fd             	mov    %edi,%r13d
  401600:	45 85 f6             	test   %r14d,%r14d
  401603:	75 27                	jne    40162c <__libirc_print+0x9c>
  401605:	41 83 fd 01          	cmp    $0x1,%r13d
  401609:	0f 84 2f 01 00 00    	je     40173e <__libirc_print+0x1ae>
  40160f:	48 8d 3d f6 09 00 00 	lea    0x9f6(%rip),%rdi        # 40200c <__dso_handle+0x1c4>
  401616:	33 c0                	xor    %eax,%eax
  401618:	e8 3b f5 ff ff       	callq  400b58 <printf@plt>
  40161d:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
  401624:	5b                   	pop    %rbx
  401625:	41 5f                	pop    %r15
  401627:	41 5e                	pop    %r14
  401629:	41 5d                	pop    %r13
  40162b:	c3                   	retq   
  40162c:	83 3d 8d 23 20 00 00 	cmpl   $0x0,0x20238d(%rip)        # 6039c0 <first_msg>
  401633:	74 4e                	je     401683 <__libirc_print+0xf3>
  401635:	48 8d 3d c4 09 00 00 	lea    0x9c4(%rip),%rdi        # 402000 <__dso_handle+0x1b8>
  40163c:	33 f6                	xor    %esi,%esi
  40163e:	c7 05 78 23 20 00 00 	movl   $0x0,0x202378(%rip)        # 6039c0 <first_msg>
  401645:	00 00 00 
  401648:	e8 fb f5 ff ff       	callq  400c48 <catopen@plt>
  40164d:	48 89 05 cc 28 20 00 	mov    %rax,0x2028cc(%rip)        # 603f20 <message_catalog>
  401654:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  401658:	0f 84 07 01 00 00    	je     401765 <__libirc_print+0x1d5>
  40165e:	48 8b 3d bb 28 20 00 	mov    0x2028bb(%rip),%rdi        # 603f20 <message_catalog>
  401665:	49 63 c6             	movslq %r14d,%rax
  401668:	48 8d 0d 19 1b 20 00 	lea    0x201b19(%rip),%rcx        # 603188 <irc_msgtab+0x8>
  40166f:	48 c1 e0 04          	shl    $0x4,%rax
  401673:	c7 05 47 23 20 00 00 	movl   $0x0,0x202347(%rip)        # 6039c4 <use_internal_msg>
  40167a:	00 00 00 
  40167d:	48 8b 0c 08          	mov    (%rax,%rcx,1),%rcx
  401681:	eb 21                	jmp    4016a4 <__libirc_print+0x114>
  401683:	8b 1d 3b 23 20 00    	mov    0x20233b(%rip),%ebx        # 6039c4 <use_internal_msg>
  401689:	49 63 c6             	movslq %r14d,%rax
  40168c:	48 8d 0d f5 1a 20 00 	lea    0x201af5(%rip),%rcx        # 603188 <irc_msgtab+0x8>
  401693:	48 c1 e0 04          	shl    $0x4,%rax
  401697:	85 db                	test   %ebx,%ebx
  401699:	48 8b 0c 08          	mov    (%rax,%rcx,1),%rcx
  40169d:	75 15                	jne    4016b4 <__libirc_print+0x124>
  40169f:	e9 8f 01 00 00       	jmpq   401833 <__libirc_print+0x2a3>
  4016a4:	be 01 00 00 00       	mov    $0x1,%esi
  4016a9:	44 89 f2             	mov    %r14d,%edx
  4016ac:	e8 17 f5 ff ff       	callq  400bc8 <catgets@plt>
  4016b1:	48 89 c1             	mov    %rax,%rcx
  4016b4:	45 85 ff             	test   %r15d,%r15d
  4016b7:	7e 54                	jle    40170d <__libirc_print+0x17d>
  4016b9:	c7 84 24 30 01 00 00 	movl   $0x18,0x130(%rsp)
  4016c0:	18 00 00 00 
  4016c4:	48 8d 84 24 70 01 00 	lea    0x170(%rsp),%rax
  4016cb:	00 
  4016cc:	c7 84 24 34 01 00 00 	movl   $0x30,0x134(%rsp)
  4016d3:	30 00 00 00 
  4016d7:	48 8d 94 24 80 00 00 	lea    0x80(%rsp),%rdx
  4016de:	00 
  4016df:	48 89 84 24 38 01 00 	mov    %rax,0x138(%rsp)
  4016e6:	00 
  4016e7:	48 89 94 24 40 01 00 	mov    %rdx,0x140(%rsp)
  4016ee:	00 
  4016ef:	48 8d 3d 2a 26 20 00 	lea    0x20262a(%rip),%rdi        # 603d20 <print_buf>
  4016f6:	48 89 ce             	mov    %rcx,%rsi
  4016f9:	48 8d 94 24 30 01 00 	lea    0x130(%rsp),%rdx
  401700:	00 
  401701:	e8 12 f5 ff ff       	callq  400c18 <vsprintf@plt>
  401706:	48 8d 0d 13 26 20 00 	lea    0x202613(%rip),%rcx        # 603d20 <print_buf>
  40170d:	41 83 fd 01          	cmp    $0x1,%r13d
  401711:	0f 84 e1 00 00 00    	je     4017f8 <__libirc_print+0x268>
  401717:	48 89 cf             	mov    %rcx,%rdi
  40171a:	33 c0                	xor    %eax,%eax
  40171c:	e8 37 f4 ff ff       	callq  400b58 <printf@plt>
  401721:	48 8d 3d e4 08 00 00 	lea    0x8e4(%rip),%rdi        # 40200c <__dso_handle+0x1c4>
  401728:	33 c0                	xor    %eax,%eax
  40172a:	e8 29 f4 ff ff       	callq  400b58 <printf@plt>
  40172f:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
  401736:	5b                   	pop    %rbx
  401737:	41 5f                	pop    %r15
  401739:	41 5e                	pop    %r14
  40173b:	41 5d                	pop    %r13
  40173d:	c3                   	retq   
  40173e:	48 8b 05 fb 1f 20 00 	mov    0x201ffb(%rip),%rax        # 603740 <_DYNAMIC+0x1e0>
  401745:	48 8d 35 c0 08 00 00 	lea    0x8c0(%rip),%rsi        # 40200c <__dso_handle+0x1c4>
  40174c:	48 8b 38             	mov    (%rax),%rdi
  40174f:	33 c0                	xor    %eax,%eax
  401751:	e8 62 f5 ff ff       	callq  400cb8 <fprintf@plt>
  401756:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
  40175d:	5b                   	pop    %rbx
  40175e:	41 5f                	pop    %r15
  401760:	41 5e                	pop    %r14
  401762:	41 5d                	pop    %r13
  401764:	c3                   	retq   
  401765:	48 8d 3d 38 0e 00 00 	lea    0xe38(%rip),%rdi        # 4025a4 <__dso_handle+0x75c>
  40176c:	e8 e7 f4 ff ff       	callq  400c58 <getenv@plt>
  401771:	48 85 c0             	test   %rax,%rax
  401774:	74 6c                	je     4017e2 <__libirc_print+0x252>
  401776:	48 89 c6             	mov    %rax,%rsi
  401779:	48 8d 3c 24          	lea    (%rsp),%rdi
  40177d:	ba 80 00 00 00       	mov    $0x80,%edx
  401782:	e8 01 f5 ff ff       	callq  400c88 <strncpy@plt>
  401787:	be 2e 00 00 00       	mov    $0x2e,%esi
  40178c:	48 8d 3c 24          	lea    (%rsp),%rdi
  401790:	e8 93 f4 ff ff       	callq  400c28 <strchr@plt>
  401795:	48 89 c3             	mov    %rax,%rbx
  401798:	48 85 db             	test   %rbx,%rbx
  40179b:	74 45                	je     4017e2 <__libirc_print+0x252>
  40179d:	48 8d 3d 00 0e 00 00 	lea    0xe00(%rip),%rdi        # 4025a4 <__dso_handle+0x75c>
  4017a4:	48 8d 34 24          	lea    (%rsp),%rsi
  4017a8:	ba 01 00 00 00       	mov    $0x1,%edx
  4017ad:	c6 03 00             	movb   $0x0,(%rbx)
  4017b0:	e8 83 f4 ff ff       	callq  400c38 <setenv@plt>
  4017b5:	48 8d 3d 44 08 00 00 	lea    0x844(%rip),%rdi        # 402000 <__dso_handle+0x1b8>
  4017bc:	33 f6                	xor    %esi,%esi
  4017be:	e8 85 f4 ff ff       	callq  400c48 <catopen@plt>
  4017c3:	48 8d 3d da 0d 00 00 	lea    0xdda(%rip),%rdi        # 4025a4 <__dso_handle+0x75c>
  4017ca:	48 8d 34 24          	lea    (%rsp),%rsi
  4017ce:	ba 01 00 00 00       	mov    $0x1,%edx
  4017d3:	48 89 05 46 27 20 00 	mov    %rax,0x202746(%rip)        # 603f20 <message_catalog>
  4017da:	c6 03 2e             	movb   $0x2e,(%rbx)
  4017dd:	e8 56 f4 ff ff       	callq  400c38 <setenv@plt>
  4017e2:	48 8b 3d 37 27 20 00 	mov    0x202737(%rip),%rdi        # 603f20 <message_catalog>
  4017e9:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
  4017ed:	0f 85 72 fe ff ff    	jne    401665 <__libirc_print+0xd5>
  4017f3:	e9 8b fe ff ff       	jmpq   401683 <__libirc_print+0xf3>
  4017f8:	48 8b 05 41 1f 20 00 	mov    0x201f41(%rip),%rax        # 603740 <_DYNAMIC+0x1e0>
  4017ff:	48 89 ce             	mov    %rcx,%rsi
  401802:	48 8b 38             	mov    (%rax),%rdi
  401805:	33 c0                	xor    %eax,%eax
  401807:	e8 ac f4 ff ff       	callq  400cb8 <fprintf@plt>
  40180c:	48 8b 05 2d 1f 20 00 	mov    0x201f2d(%rip),%rax        # 603740 <_DYNAMIC+0x1e0>
  401813:	48 8d 35 f2 07 00 00 	lea    0x7f2(%rip),%rsi        # 40200c <__dso_handle+0x1c4>
  40181a:	48 8b 38             	mov    (%rax),%rdi
  40181d:	33 c0                	xor    %eax,%eax
  40181f:	e8 94 f4 ff ff       	callq  400cb8 <fprintf@plt>
  401824:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
  40182b:	5b                   	pop    %rbx
  40182c:	41 5f                	pop    %r15
  40182e:	41 5e                	pop    %r14
  401830:	41 5d                	pop    %r13
  401832:	c3                   	retq   
  401833:	48 8b 3d e6 26 20 00 	mov    0x2026e6(%rip),%rdi        # 603f20 <message_catalog>
  40183a:	e9 65 fe ff ff       	jmpq   4016a4 <__libirc_print+0x114>
  40183f:	90                   	nop

0000000000401840 <__intel_cpu_features_init_x>:
  401840:	50                   	push   %rax
  401841:	52                   	push   %rdx
  401842:	51                   	push   %rcx
  401843:	56                   	push   %rsi
  401844:	57                   	push   %rdi
  401845:	41 50                	push   %r8
  401847:	41 51                	push   %r9
  401849:	33 ff                	xor    %edi,%edi
  40184b:	e8 30 00 00 00       	callq  401880 <__intel_cpu_features_init_body>
  401850:	41 59                	pop    %r9
  401852:	41 58                	pop    %r8
  401854:	5f                   	pop    %rdi
  401855:	5e                   	pop    %rsi
  401856:	59                   	pop    %rcx
  401857:	5a                   	pop    %rdx
  401858:	58                   	pop    %rax
  401859:	c3                   	retq   
  40185a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000401860 <__intel_cpu_features_init>:
  401860:	50                   	push   %rax
  401861:	52                   	push   %rdx
  401862:	51                   	push   %rcx
  401863:	56                   	push   %rsi
  401864:	57                   	push   %rdi
  401865:	41 50                	push   %r8
  401867:	41 51                	push   %r9
  401869:	bf 01 00 00 00       	mov    $0x1,%edi
  40186e:	e8 0d 00 00 00       	callq  401880 <__intel_cpu_features_init_body>
  401873:	41 59                	pop    %r9
  401875:	41 58                	pop    %r8
  401877:	5f                   	pop    %rdi
  401878:	5e                   	pop    %rsi
  401879:	59                   	pop    %rcx
  40187a:	5a                   	pop    %rdx
  40187b:	58                   	pop    %rax
  40187c:	c3                   	retq   
  40187d:	0f 1f 00             	nopl   (%rax)

0000000000401880 <__intel_cpu_features_init_body>:
  401880:	53                   	push   %rbx
  401881:	41 54                	push   %r12
  401883:	41 89 fc             	mov    %edi,%r12d
  401886:	33 c0                	xor    %eax,%eax
  401888:	0f a2                	cpuid  
  40188a:	89 44 24 e8          	mov    %eax,-0x18(%rsp)
  40188e:	89 5c 24 ec          	mov    %ebx,-0x14(%rsp)
  401892:	89 4c 24 f0          	mov    %ecx,-0x10(%rsp)
  401896:	89 54 24 f4          	mov    %edx,-0xc(%rsp)
  40189a:	40 32 f6             	xor    %sil,%sil
  40189d:	83 7c 24 e8 00       	cmpl   $0x0,-0x18(%rsp)
  4018a2:	0f 84 c0 03 00 00    	je     401c68 <__intel_cpu_features_init_body+0x3e8>
  4018a8:	41 83 fc 01          	cmp    $0x1,%r12d
  4018ac:	0f 84 c5 03 00 00    	je     401c77 <__intel_cpu_features_init_body+0x3f7>
  4018b2:	b8 01 00 00 00       	mov    $0x1,%eax
  4018b7:	0f a2                	cpuid  
  4018b9:	41 89 d0             	mov    %edx,%r8d
  4018bc:	41 89 c1             	mov    %eax,%r9d
  4018bf:	41 83 e0 01          	and    $0x1,%r8d
  4018c3:	89 cf                	mov    %ecx,%edi
  4018c5:	4e 8d 04 45 01 00 00 	lea    0x1(,%r8,2),%r8
  4018cc:	00 
  4018cd:	4c 89 c0             	mov    %r8,%rax
  4018d0:	48 83 c8 04          	or     $0x4,%rax
  4018d4:	f7 c2 00 80 00 00    	test   $0x8000,%edx
  4018da:	4c 0f 45 c0          	cmovne %rax,%r8
  4018de:	4c 89 c1             	mov    %r8,%rcx
  4018e1:	48 83 c9 08          	or     $0x8,%rcx
  4018e5:	f7 c2 00 00 80 00    	test   $0x800000,%edx
  4018eb:	4c 0f 45 c1          	cmovne %rcx,%r8
  4018ef:	f7 c2 00 00 00 01    	test   $0x1000000,%edx
  4018f5:	0f 84 ef 00 00 00    	je     4019ea <__intel_cpu_features_init_body+0x16a>
  4018fb:	49 83 c8 10          	or     $0x10,%r8
  4018ff:	4d 89 c2             	mov    %r8,%r10
  401902:	49 83 ca 20          	or     $0x20,%r10
  401906:	f7 c2 00 00 00 02    	test   $0x2000000,%edx
  40190c:	4d 0f 45 c2          	cmovne %r10,%r8
  401910:	4d 89 c3             	mov    %r8,%r11
  401913:	49 83 cb 40          	or     $0x40,%r11
  401917:	f7 c2 00 00 00 04    	test   $0x4000000,%edx
  40191d:	4d 0f 45 c3          	cmovne %r11,%r8
  401921:	4c 89 c6             	mov    %r8,%rsi
  401924:	48 81 ce 80 00 00 00 	or     $0x80,%rsi
  40192b:	f7 c7 01 00 00 00    	test   $0x1,%edi
  401931:	4c 0f 45 c6          	cmovne %rsi,%r8
  401935:	40 b6 01             	mov    $0x1,%sil
  401938:	4d 89 c2             	mov    %r8,%r10
  40193b:	49 81 ca 00 01 00 00 	or     $0x100,%r10
  401942:	f7 c7 00 02 00 00    	test   $0x200,%edi
  401948:	4d 0f 45 c2          	cmovne %r10,%r8
  40194c:	4d 89 c3             	mov    %r8,%r11
  40194f:	49 81 cb 00 08 00 00 	or     $0x800,%r11
  401956:	f7 c7 00 00 40 00    	test   $0x400000,%edi
  40195c:	4d 0f 45 c3          	cmovne %r11,%r8
  401960:	4c 89 c0             	mov    %r8,%rax
  401963:	48 0d 00 02 00 00    	or     $0x200,%rax
  401969:	f7 c7 00 00 08 00    	test   $0x80000,%edi
  40196f:	4c 0f 45 c0          	cmovne %rax,%r8
  401973:	4c 89 c1             	mov    %r8,%rcx
  401976:	48 81 c9 00 04 00 00 	or     $0x400,%rcx
  40197d:	f7 c7 00 00 10 00    	test   $0x100000,%edi
  401983:	4c 0f 45 c1          	cmovne %rcx,%r8
  401987:	4c 89 c3             	mov    %r8,%rbx
  40198a:	48 81 cb 00 10 00 00 	or     $0x1000,%rbx
  401991:	f7 c7 00 00 80 00    	test   $0x800000,%edi
  401997:	4c 0f 45 c3          	cmovne %rbx,%r8
  40199b:	4c 89 c2             	mov    %r8,%rdx
  40199e:	48 81 ca 00 20 00 00 	or     $0x2000,%rdx
  4019a5:	f7 c7 02 00 00 00    	test   $0x2,%edi
  4019ab:	4c 0f 45 c2          	cmovne %rdx,%r8
  4019af:	4d 89 c2             	mov    %r8,%r10
  4019b2:	49 81 ca 00 40 00 00 	or     $0x4000,%r10
  4019b9:	f7 c7 00 00 00 02    	test   $0x2000000,%edi
  4019bf:	4d 0f 45 c2          	cmovne %r10,%r8
  4019c3:	b8 07 00 00 00       	mov    $0x7,%eax
  4019c8:	33 c9                	xor    %ecx,%ecx
  4019ca:	0f a2                	cpuid  
  4019cc:	41 89 ca             	mov    %ecx,%r10d
  4019cf:	41 89 db             	mov    %ebx,%r11d
  4019d2:	48 b9 00 00 00 00 08 	mov    $0x800000000,%rcx
  4019d9:	00 00 00 
  4019dc:	49 0b c8             	or     %r8,%rcx
  4019df:	41 f7 c3 00 00 00 20 	test   $0x20000000,%r11d
  4019e6:	4c 0f 45 c1          	cmovne %rcx,%r8
  4019ea:	4c 89 c0             	mov    %r8,%rax
  4019ed:	48 0d 00 00 02 00    	or     $0x20000,%rax
  4019f3:	f7 c7 00 00 00 40    	test   $0x40000000,%edi
  4019f9:	4c 0f 45 c0          	cmovne %rax,%r8
  4019fd:	40 84 f6             	test   %sil,%sil
  401a00:	75 0f                	jne    401a11 <__intel_cpu_features_init_body+0x191>
  401a02:	b8 07 00 00 00       	mov    $0x7,%eax
  401a07:	33 c9                	xor    %ecx,%ecx
  401a09:	0f a2                	cpuid  
  401a0b:	41 89 ca             	mov    %ecx,%r10d
  401a0e:	41 89 db             	mov    %ebx,%r11d
  401a11:	44 89 de             	mov    %r11d,%esi
  401a14:	4c 89 c1             	mov    %r8,%rcx
  401a17:	81 e6 08 01 00 00    	and    $0x108,%esi
  401a1d:	48 81 c9 00 00 08 00 	or     $0x80000,%rcx
  401a24:	81 fe 08 01 00 00    	cmp    $0x108,%esi
  401a2a:	4c 0f 44 c1          	cmove  %rcx,%r8
  401a2e:	b8 01 00 00 80       	mov    $0x80000001,%eax
  401a33:	0f a2                	cpuid  
  401a35:	4c 89 c2             	mov    %r8,%rdx
  401a38:	48 81 ca 00 00 10 00 	or     $0x100000,%rdx
  401a3f:	f6 c1 20             	test   $0x20,%cl
  401a42:	4c 0f 45 c2          	cmovne %rdx,%r8
  401a46:	4c 89 c1             	mov    %r8,%rcx
  401a49:	48 81 c9 00 00 20 00 	or     $0x200000,%rcx
  401a50:	41 f7 c3 10 00 00 00 	test   $0x10,%r11d
  401a57:	4c 0f 45 c1          	cmovne %rcx,%r8
  401a5b:	4c 89 c3             	mov    %r8,%rbx
  401a5e:	48 81 cb 00 00 40 00 	or     $0x400000,%rbx
  401a65:	41 f7 c3 00 08 00 00 	test   $0x800,%r11d
  401a6c:	4c 0f 45 c3          	cmovne %rbx,%r8
  401a70:	4c 89 c6             	mov    %r8,%rsi
  401a73:	48 81 ce 00 00 00 10 	or     $0x10000000,%rsi
  401a7a:	41 f7 c3 00 00 08 00 	test   $0x80000,%r11d
  401a81:	4c 0f 45 c6          	cmovne %rsi,%r8
  401a85:	4c 89 c0             	mov    %r8,%rax
  401a88:	48 0d 00 00 00 20    	or     $0x20000000,%rax
  401a8e:	41 f7 c3 00 00 04 00 	test   $0x40000,%r11d
  401a95:	4c 0f 45 c0          	cmovne %rax,%r8
  401a99:	f7 c7 00 00 00 08    	test   $0x8000000,%edi
  401a9f:	0f 84 76 01 00 00    	je     401c1b <__intel_cpu_features_init_body+0x39b>
  401aa5:	33 c9                	xor    %ecx,%ecx
  401aa7:	0f 01 d0             	xgetbv 
  401aaa:	49 83 c8 01          	or     $0x1,%r8
  401aae:	89 c2                	mov    %eax,%edx
  401ab0:	83 e2 06             	and    $0x6,%edx
  401ab3:	83 fa 06             	cmp    $0x6,%edx
  401ab6:	0f 85 5f 01 00 00    	jne    401c1b <__intel_cpu_features_init_body+0x39b>
  401abc:	4c 89 c2             	mov    %r8,%rdx
  401abf:	48 81 ca 00 00 01 00 	or     $0x10000,%rdx
  401ac6:	f7 c7 00 00 00 10    	test   $0x10000000,%edi
  401acc:	4c 0f 45 c2          	cmovne %rdx,%r8
  401ad0:	4c 89 c1             	mov    %r8,%rcx
  401ad3:	48 81 c9 00 80 00 00 	or     $0x8000,%rcx
  401ada:	f7 c7 00 00 00 20    	test   $0x20000000,%edi
  401ae0:	4c 0f 45 c1          	cmovne %rcx,%r8
  401ae4:	4c 89 c3             	mov    %r8,%rbx
  401ae7:	48 81 cb 00 00 80 00 	or     $0x800000,%rbx
  401aee:	41 f7 c3 20 00 00 00 	test   $0x20,%r11d
  401af5:	4c 0f 45 c3          	cmovne %rbx,%r8
  401af9:	4c 89 c6             	mov    %r8,%rsi
  401afc:	48 81 ce 00 00 04 00 	or     $0x40000,%rsi
  401b03:	f7 c7 00 10 00 00    	test   $0x1000,%edi
  401b09:	89 c7                	mov    %eax,%edi
  401b0b:	4c 0f 45 c6          	cmovne %rsi,%r8
  401b0f:	83 e7 18             	and    $0x18,%edi
  401b12:	83 ff 18             	cmp    $0x18,%edi
  401b15:	75 1c                	jne    401b33 <__intel_cpu_features_init_body+0x2b3>
  401b17:	49 83 c8 01          	or     $0x1,%r8
  401b1b:	48 ba 00 00 00 00 10 	mov    $0x1000000000,%rdx
  401b22:	00 00 00 
  401b25:	49 0b d0             	or     %r8,%rdx
  401b28:	41 f7 c3 00 40 00 00 	test   $0x4000,%r11d
  401b2f:	4c 0f 45 c2          	cmovne %rdx,%r8
  401b33:	25 e0 00 00 00       	and    $0xe0,%eax
  401b38:	3d e0 00 00 00       	cmp    $0xe0,%eax
  401b3d:	0f 85 d8 00 00 00    	jne    401c1b <__intel_cpu_features_init_body+0x39b>
  401b43:	49 83 c8 01          	or     $0x1,%r8
  401b47:	48 ba 00 00 00 00 04 	mov    $0x400000000,%rdx
  401b4e:	00 00 00 
  401b51:	4c 89 c0             	mov    %r8,%rax
  401b54:	48 b9 00 00 00 00 01 	mov    $0x100000000,%rcx
  401b5b:	00 00 00 
  401b5e:	48 0d 00 00 00 08    	or     $0x8000000,%rax
  401b64:	41 f7 c3 00 00 01 00 	test   $0x10000,%r11d
  401b6b:	48 bb 00 00 00 00 02 	mov    $0x200000000,%rbx
  401b72:	00 00 00 
  401b75:	48 bf 00 00 00 00 20 	mov    $0x2000000000,%rdi
  401b7c:	00 00 00 
  401b7f:	4c 0f 45 c0          	cmovne %rax,%r8
  401b83:	44 89 d8             	mov    %r11d,%eax
  401b86:	49 0b d0             	or     %r8,%rdx
  401b89:	41 f7 c3 00 00 00 10 	test   $0x10000000,%r11d
  401b90:	4c 0f 45 c2          	cmovne %rdx,%r8
  401b94:	48 ba 00 00 00 00 40 	mov    $0x4000000000,%rdx
  401b9b:	00 00 00 
  401b9e:	49 0b c8             	or     %r8,%rcx
  401ba1:	41 f7 c3 00 00 00 08 	test   $0x8000000,%r11d
  401ba8:	4c 0f 45 c1          	cmovne %rcx,%r8
  401bac:	25 00 00 00 80       	and    $0x80000000,%eax
  401bb1:	49 0b d8             	or     %r8,%rbx
  401bb4:	41 f7 c3 00 00 00 04 	test   $0x4000000,%r11d
  401bbb:	4c 0f 45 c3          	cmovne %rbx,%r8
  401bbf:	4c 89 c6             	mov    %r8,%rsi
  401bc2:	48 81 ce 00 00 00 01 	or     $0x1000000,%rsi
  401bc9:	41 f7 c3 00 00 02 00 	test   $0x20000,%r11d
  401bd0:	4c 0f 45 c6          	cmovne %rsi,%r8
  401bd4:	49 0b f8             	or     %r8,%rdi
  401bd7:	41 f7 c3 00 00 00 40 	test   $0x40000000,%r11d
  401bde:	4c 0f 45 c7          	cmovne %rdi,%r8
  401be2:	49 0b d0             	or     %r8,%rdx
  401be5:	3d 00 00 00 80       	cmp    $0x80000000,%eax
  401bea:	4c 0f 44 c2          	cmove  %rdx,%r8
  401bee:	4c 89 c1             	mov    %r8,%rcx
  401bf1:	48 81 c9 00 00 00 40 	or     $0x40000000,%rcx
  401bf8:	41 f7 c3 00 00 20 00 	test   $0x200000,%r11d
  401bff:	49 bb 00 00 00 00 80 	mov    $0x8000000000,%r11
  401c06:	00 00 00 
  401c09:	4c 0f 45 c1          	cmovne %rcx,%r8
  401c0d:	4d 0b d8             	or     %r8,%r11
  401c10:	41 f7 c2 02 00 00 00 	test   $0x2,%r10d
  401c17:	4d 0f 45 c3          	cmovne %r11,%r8
  401c1b:	44 89 c8             	mov    %r9d,%eax
  401c1e:	c1 e8 0c             	shr    $0xc,%eax
  401c21:	41 c1 e9 04          	shr    $0x4,%r9d
  401c25:	25 f0 00 00 00       	and    $0xf0,%eax
  401c2a:	41 83 e1 0f          	and    $0xf,%r9d
  401c2e:	41 03 c1             	add    %r9d,%eax
  401c31:	83 f8 1c             	cmp    $0x1c,%eax
  401c34:	74 0a                	je     401c40 <__intel_cpu_features_init_body+0x3c0>
  401c36:	83 f8 26             	cmp    $0x26,%eax
  401c39:	74 05                	je     401c40 <__intel_cpu_features_init_body+0x3c0>
  401c3b:	83 f8 27             	cmp    $0x27,%eax
  401c3e:	75 05                	jne    401c45 <__intel_cpu_features_init_body+0x3c5>
  401c40:	49 0f ba e8 1f       	bts    $0x1f,%r8
  401c45:	41 83 fc 01          	cmp    $0x1,%r12d
  401c49:	74 0b                	je     401c56 <__intel_cpu_features_init_body+0x3d6>
  401c4b:	4c 89 05 f6 22 20 00 	mov    %r8,0x2022f6(%rip)        # 603f48 <__intel_cpu_feature_indicator_x>
  401c52:	41 5c                	pop    %r12
  401c54:	5b                   	pop    %rbx
  401c55:	c3                   	retq   
  401c56:	4c 89 05 e3 22 20 00 	mov    %r8,0x2022e3(%rip)        # 603f40 <__intel_cpu_feature_indicator>
  401c5d:	4c 89 05 e4 22 20 00 	mov    %r8,0x2022e4(%rip)        # 603f48 <__intel_cpu_feature_indicator_x>
  401c64:	41 5c                	pop    %r12
  401c66:	5b                   	pop    %rbx
  401c67:	c3                   	retq   
  401c68:	48 c7 05 cd 22 20 00 	movq   $0x1,0x2022cd(%rip)        # 603f40 <__intel_cpu_feature_indicator>
  401c6f:	01 00 00 00 
  401c73:	41 5c                	pop    %r12
  401c75:	5b                   	pop    %rbx
  401c76:	c3                   	retq   
  401c77:	81 7c 24 ec 47 65 6e 	cmpl   $0x756e6547,-0x14(%rsp)
  401c7e:	75 
  401c7f:	75 e7                	jne    401c68 <__intel_cpu_features_init_body+0x3e8>
  401c81:	81 7c 24 f4 69 6e 65 	cmpl   $0x49656e69,-0xc(%rsp)
  401c88:	49 
  401c89:	75 dd                	jne    401c68 <__intel_cpu_features_init_body+0x3e8>
  401c8b:	81 7c 24 f0 6e 74 65 	cmpl   $0x6c65746e,-0x10(%rsp)
  401c92:	6c 
  401c93:	75 d3                	jne    401c68 <__intel_cpu_features_init_body+0x3e8>
  401c95:	e9 18 fc ff ff       	jmpq   4018b2 <__intel_cpu_features_init_body+0x32>
  401c9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000401ca0 <__intel_proc_init_ftzdazule>:
  401ca0:	41 57                	push   %r15
  401ca2:	53                   	push   %rbx
  401ca3:	55                   	push   %rbp
  401ca4:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
  401cab:	89 f3                	mov    %esi,%ebx
  401cad:	89 dd                	mov    %ebx,%ebp
  401caf:	41 89 df             	mov    %ebx,%r15d
  401cb2:	83 e5 04             	and    $0x4,%ebp
  401cb5:	41 83 e7 02          	and    $0x2,%r15d
  401cb9:	74 08                	je     401cc3 <__intel_proc_init_ftzdazule+0x23>
  401cbb:	f7 c7 02 00 00 00    	test   $0x2,%edi
  401cc1:	74 0c                	je     401ccf <__intel_proc_init_ftzdazule+0x2f>
  401cc3:	85 ed                	test   %ebp,%ebp
  401cc5:	74 30                	je     401cf7 <__intel_proc_init_ftzdazule+0x57>
  401cc7:	f7 c7 04 00 00 00    	test   $0x4,%edi
  401ccd:	75 28                	jne    401cf7 <__intel_proc_init_ftzdazule+0x57>
  401ccf:	33 f6                	xor    %esi,%esi
  401cd1:	48 8d 3c 24          	lea    (%rsp),%rdi
  401cd5:	ba 00 02 00 00       	mov    $0x200,%edx
  401cda:	e8 89 ee ff ff       	callq  400b68 <memset@plt>
  401cdf:	0f ae 04 24          	fxsave (%rsp)
  401ce3:	33 d2                	xor    %edx,%edx
  401ce5:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
  401ce9:	a8 40                	test   $0x40,%al
  401ceb:	44 0f 44 fa          	cmove  %edx,%r15d
  401cef:	a9 00 00 02 00       	test   $0x20000,%eax
  401cf4:	0f 44 ea             	cmove  %edx,%ebp
  401cf7:	f6 c3 01             	test   $0x1,%bl
  401cfa:	75 39                	jne    401d35 <__intel_proc_init_ftzdazule+0x95>
  401cfc:	45 85 ff             	test   %r15d,%r15d
  401cff:	74 11                	je     401d12 <__intel_proc_init_ftzdazule+0x72>
  401d01:	0f ae 1c 24          	stmxcsr (%rsp)
  401d05:	8b 04 24             	mov    (%rsp),%eax
  401d08:	83 c8 40             	or     $0x40,%eax
  401d0b:	89 04 24             	mov    %eax,(%rsp)
  401d0e:	0f ae 14 24          	ldmxcsr (%rsp)
  401d12:	85 ed                	test   %ebp,%ebp
  401d14:	74 13                	je     401d29 <__intel_proc_init_ftzdazule+0x89>
  401d16:	0f ae 1c 24          	stmxcsr (%rsp)
  401d1a:	8b 04 24             	mov    (%rsp),%eax
  401d1d:	0d 00 00 02 00       	or     $0x20000,%eax
  401d22:	89 04 24             	mov    %eax,(%rsp)
  401d25:	0f ae 14 24          	ldmxcsr (%rsp)
  401d29:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
  401d30:	5d                   	pop    %rbp
  401d31:	5b                   	pop    %rbx
  401d32:	41 5f                	pop    %r15
  401d34:	c3                   	retq   
  401d35:	0f ae 1c 24          	stmxcsr (%rsp)
  401d39:	8b 04 24             	mov    (%rsp),%eax
  401d3c:	0d 00 80 00 00       	or     $0x8000,%eax
  401d41:	89 04 24             	mov    %eax,(%rsp)
  401d44:	0f ae 14 24          	ldmxcsr (%rsp)
  401d48:	eb b2                	jmp    401cfc <__intel_proc_init_ftzdazule+0x5c>
  401d4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000401d50 <__libc_csu_fini>:
  401d50:	f3 c3                	repz retq 
  401d52:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  401d59:	1f 84 00 00 00 00 00 

0000000000401d60 <__libc_csu_init>:
  401d60:	48 89 6c 24 d8       	mov    %rbp,-0x28(%rsp)
  401d65:	4c 89 64 24 e0       	mov    %r12,-0x20(%rsp)
  401d6a:	48 8d 2d d3 13 20 00 	lea    0x2013d3(%rip),%rbp        # 603144 <__init_array_end>
  401d71:	4c 8d 25 cc 13 20 00 	lea    0x2013cc(%rip),%r12        # 603144 <__init_array_end>
  401d78:	4c 89 6c 24 e8       	mov    %r13,-0x18(%rsp)
  401d7d:	4c 89 74 24 f0       	mov    %r14,-0x10(%rsp)
  401d82:	4c 89 7c 24 f8       	mov    %r15,-0x8(%rsp)
  401d87:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
  401d8c:	48 83 ec 38          	sub    $0x38,%rsp
  401d90:	4c 29 e5             	sub    %r12,%rbp
  401d93:	41 89 fd             	mov    %edi,%r13d
  401d96:	49 89 f6             	mov    %rsi,%r14
  401d99:	48 c1 fd 03          	sar    $0x3,%rbp
  401d9d:	49 89 d7             	mov    %rdx,%r15
  401da0:	e8 7b ed ff ff       	callq  400b20 <_init>
  401da5:	48 85 ed             	test   %rbp,%rbp
  401da8:	74 1c                	je     401dc6 <__libc_csu_init+0x66>
  401daa:	31 db                	xor    %ebx,%ebx
  401dac:	0f 1f 40 00          	nopl   0x0(%rax)
  401db0:	4c 89 fa             	mov    %r15,%rdx
  401db3:	4c 89 f6             	mov    %r14,%rsi
  401db6:	44 89 ef             	mov    %r13d,%edi
  401db9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  401dbd:	48 83 c3 01          	add    $0x1,%rbx
  401dc1:	48 39 eb             	cmp    %rbp,%rbx
  401dc4:	72 ea                	jb     401db0 <__libc_csu_init+0x50>
  401dc6:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  401dcb:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  401dd0:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
  401dd5:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  401dda:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
  401ddf:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
  401de4:	48 83 c4 38          	add    $0x38,%rsp
  401de8:	c3                   	retq   
  401de9:	90                   	nop
  401dea:	90                   	nop
  401deb:	90                   	nop
  401dec:	90                   	nop
  401ded:	90                   	nop
  401dee:	90                   	nop
  401def:	90                   	nop

0000000000401df0 <__do_global_ctors_aux>:
  401df0:	55                   	push   %rbp
  401df1:	48 89 e5             	mov    %rsp,%rbp
  401df4:	53                   	push   %rbx
  401df5:	48 83 ec 08          	sub    $0x8,%rsp
  401df9:	48 8b 05 50 13 20 00 	mov    0x201350(%rip),%rax        # 603150 <__CTOR_LIST__+0x8>
  401e00:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  401e04:	74 19                	je     401e1f <__do_global_ctors_aux+0x2f>
  401e06:	bb 50 31 60 00       	mov    $0x603150,%ebx
  401e0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401e10:	48 83 eb 08          	sub    $0x8,%rbx
  401e14:	ff d0                	callq  *%rax
  401e16:	48 8b 03             	mov    (%rbx),%rax
  401e19:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  401e1d:	75 f1                	jne    401e10 <__do_global_ctors_aux+0x20>
  401e1f:	48 83 c4 08          	add    $0x8,%rsp
  401e23:	5b                   	pop    %rbx
  401e24:	c9                   	leaveq 
  401e25:	c3                   	retq   
  401e26:	90                   	nop
  401e27:	90                   	nop

Disassembly of section .fini:

0000000000401e28 <_fini>:
  401e28:	48 83 ec 08          	sub    $0x8,%rsp
  401e2c:	e8 ff ee ff ff       	callq  400d30 <__do_global_dtors_aux>
  401e31:	48 83 c4 08          	add    $0x8,%rsp
  401e35:	c3                   	retq   
