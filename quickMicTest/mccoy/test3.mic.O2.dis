
test3.mic.O2:     file format elf64-k1om


Disassembly of section .init:

00000000004007b0 <_init>:
  4007b0:	48 83 ec 08          	sub    $0x8,%rsp
  4007b4:	e8 23 01 00 00       	callq  4008dc <call_gmon_start>
  4007b9:	e8 82 01 00 00       	callq  400940 <frame_dummy>
  4007be:	e8 c1 06 00 00       	callq  400e84 <__do_global_ctors_aux>
  4007c3:	48 83 c4 08          	add    $0x8,%rsp
  4007c7:	c3                   	retq   

Disassembly of section .plt:

00000000004007d0 <std::ostream::operator<<(double)@plt-0x10>:
  4007d0:	ff 35 12 0c 20 00    	pushq  0x200c12(%rip)        # 6013e8 <_GLOBAL_OFFSET_TABLE_+0x8>
  4007d6:	ff 25 14 0c 20 00    	jmpq   *0x200c14(%rip)        # 6013f0 <_GLOBAL_OFFSET_TABLE_+0x10>
  4007dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004007e0 <std::ostream::operator<<(double)@plt>:
  4007e0:	ff 25 12 0c 20 00    	jmpq   *0x200c12(%rip)        # 6013f8 <_GLOBAL_OFFSET_TABLE_+0x18>
  4007e6:	68 00 00 00 00       	pushq  $0x0
  4007eb:	e9 e0 ff ff ff       	jmpq   4007d0 <_init+0x20>

00000000004007f0 <std::ios_base::Init::Init()@plt>:
  4007f0:	ff 25 0a 0c 20 00    	jmpq   *0x200c0a(%rip)        # 601400 <_GLOBAL_OFFSET_TABLE_+0x20>
  4007f6:	68 01 00 00 00       	pushq  $0x1
  4007fb:	e9 d0 ff ff ff       	jmpq   4007d0 <_init+0x20>

0000000000400800 <std::ostream::operator<<(long double)@plt>:
  400800:	ff 25 02 0c 20 00    	jmpq   *0x200c02(%rip)        # 601408 <_GLOBAL_OFFSET_TABLE_+0x28>
  400806:	68 02 00 00 00       	pushq  $0x2
  40080b:	e9 c0 ff ff ff       	jmpq   4007d0 <_init+0x20>

0000000000400810 <__libc_start_main@plt>:
  400810:	ff 25 fa 0b 20 00    	jmpq   *0x200bfa(%rip)        # 601410 <_GLOBAL_OFFSET_TABLE_+0x30>
  400816:	68 03 00 00 00       	pushq  $0x3
  40081b:	e9 b0 ff ff ff       	jmpq   4007d0 <_init+0x20>

0000000000400820 <std::ios_base::Init::~Init()@plt>:
  400820:	ff 25 f2 0b 20 00    	jmpq   *0x200bf2(%rip)        # 601418 <_GLOBAL_OFFSET_TABLE_+0x38>
  400826:	68 04 00 00 00       	pushq  $0x4
  40082b:	e9 a0 ff ff ff       	jmpq   4007d0 <_init+0x20>

0000000000400830 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>:
  400830:	ff 25 ea 0b 20 00    	jmpq   *0x200bea(%rip)        # 601420 <_GLOBAL_OFFSET_TABLE_+0x40>
  400836:	68 05 00 00 00       	pushq  $0x5
  40083b:	e9 90 ff ff ff       	jmpq   4007d0 <_init+0x20>

0000000000400840 <strtod@plt>:
  400840:	ff 25 e2 0b 20 00    	jmpq   *0x200be2(%rip)        # 601428 <_GLOBAL_OFFSET_TABLE_+0x48>
  400846:	68 06 00 00 00       	pushq  $0x6
  40084b:	e9 80 ff ff ff       	jmpq   4007d0 <_init+0x20>

0000000000400850 <__cxa_atexit@plt>:
  400850:	ff 25 da 0b 20 00    	jmpq   *0x200bda(%rip)        # 601430 <_GLOBAL_OFFSET_TABLE_+0x50>
  400856:	68 07 00 00 00       	pushq  $0x7
  40085b:	e9 70 ff ff ff       	jmpq   4007d0 <_init+0x20>

0000000000400860 <memset@plt>:
  400860:	ff 25 d2 0b 20 00    	jmpq   *0x200bd2(%rip)        # 601438 <_GLOBAL_OFFSET_TABLE_+0x58>
  400866:	68 08 00 00 00       	pushq  $0x8
  40086b:	e9 60 ff ff ff       	jmpq   4007d0 <_init+0x20>

0000000000400870 <std::ostream::operator<<(float)@plt>:
  400870:	ff 25 ca 0b 20 00    	jmpq   *0x200bca(%rip)        # 601440 <_GLOBAL_OFFSET_TABLE_+0x60>
  400876:	68 09 00 00 00       	pushq  $0x9
  40087b:	e9 50 ff ff ff       	jmpq   4007d0 <_init+0x20>

0000000000400880 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>:
  400880:	ff 25 c2 0b 20 00    	jmpq   *0x200bc2(%rip)        # 601448 <_GLOBAL_OFFSET_TABLE_+0x68>
  400886:	68 0a 00 00 00       	pushq  $0xa
  40088b:	e9 40 ff ff ff       	jmpq   4007d0 <_init+0x20>

0000000000400890 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>:
  400890:	ff 25 ba 0b 20 00    	jmpq   *0x200bba(%rip)        # 601450 <_GLOBAL_OFFSET_TABLE_+0x70>
  400896:	68 0b 00 00 00       	pushq  $0xb
  40089b:	e9 30 ff ff ff       	jmpq   4007d0 <_init+0x20>

00000000004008a0 <__gxx_personality_v0@plt>:
  4008a0:	ff 25 b2 0b 20 00    	jmpq   *0x200bb2(%rip)        # 601458 <_GLOBAL_OFFSET_TABLE_+0x78>
  4008a6:	68 0c 00 00 00       	pushq  $0xc
  4008ab:	e9 20 ff ff ff       	jmpq   4007d0 <_init+0x20>

Disassembly of section .text:

00000000004008b0 <_start>:
  4008b0:	31 ed                	xor    %ebp,%ebp
  4008b2:	49 89 d1             	mov    %rdx,%r9
  4008b5:	5e                   	pop    %rsi
  4008b6:	48 89 e2             	mov    %rsp,%rdx
  4008b9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4008bd:	50                   	push   %rax
  4008be:	54                   	push   %rsp
  4008bf:	49 c7 c0 80 0e 40 00 	mov    $0x400e80,%r8
  4008c6:	48 c7 c1 20 0e 40 00 	mov    $0x400e20,%rcx
  4008cd:	48 c7 c7 70 09 40 00 	mov    $0x400970,%rdi
  4008d4:	e8 37 ff ff ff       	callq  400810 <__libc_start_main@plt>
  4008d9:	f4                   	hlt    
  4008da:	66 90                	xchg   %ax,%ax

00000000004008dc <call_gmon_start>:
  4008dc:	48 83 ec 08          	sub    $0x8,%rsp
  4008e0:	48 8b 05 f1 0a 20 00 	mov    0x200af1(%rip),%rax        # 6013d8 <_DYNAMIC+0x1d0>
  4008e7:	48 85 c0             	test   %rax,%rax
  4008ea:	74 02                	je     4008ee <call_gmon_start+0x12>
  4008ec:	ff d0                	callq  *%rax
  4008ee:	48 83 c4 08          	add    $0x8,%rsp
  4008f2:	c3                   	retq   
  4008f3:	90                   	nop

00000000004008f4 <__do_global_dtors_aux>:
  4008f4:	55                   	push   %rbp
  4008f5:	48 89 e5             	mov    %rsp,%rbp
  4008f8:	53                   	push   %rbx
  4008f9:	52                   	push   %rdx
  4008fa:	80 3d 8f 0c 20 00 00 	cmpb   $0x0,0x200c8f(%rip)        # 601590 <completed.5565>
  400901:	75 39                	jne    40093c <__do_global_dtors_aux+0x48>
  400903:	b8 f8 11 60 00       	mov    $0x6011f8,%eax
  400908:	48 2d f0 11 60 00    	sub    $0x6011f0,%rax
  40090e:	48 c1 f8 03          	sar    $0x3,%rax
  400912:	48 8d 58 ff          	lea    -0x1(%rax),%rbx
  400916:	eb 11                	jmp    400929 <__do_global_dtors_aux+0x35>
  400918:	48 ff c2             	inc    %rdx
  40091b:	48 89 15 76 0c 20 00 	mov    %rdx,0x200c76(%rip)        # 601598 <dtor_idx.5567>
  400922:	ff 14 d5 f0 11 60 00 	callq  *0x6011f0(,%rdx,8)
  400929:	48 8b 15 68 0c 20 00 	mov    0x200c68(%rip),%rdx        # 601598 <dtor_idx.5567>
  400930:	48 39 da             	cmp    %rbx,%rdx
  400933:	72 e3                	jb     400918 <__do_global_dtors_aux+0x24>
  400935:	c6 05 54 0c 20 00 01 	movb   $0x1,0x200c54(%rip)        # 601590 <completed.5565>
  40093c:	58                   	pop    %rax
  40093d:	5b                   	pop    %rbx
  40093e:	5d                   	pop    %rbp
  40093f:	c3                   	retq   

0000000000400940 <frame_dummy>:
  400940:	55                   	push   %rbp
  400941:	48 83 3d b7 08 20 00 	cmpq   $0x0,0x2008b7(%rip)        # 601200 <__JCR_END__>
  400948:	00 
  400949:	48 89 e5             	mov    %rsp,%rbp
  40094c:	74 12                	je     400960 <frame_dummy+0x20>
  40094e:	b8 00 00 00 00       	mov    $0x0,%eax
  400953:	48 85 c0             	test   %rax,%rax
  400956:	74 08                	je     400960 <frame_dummy+0x20>
  400958:	5d                   	pop    %rbp
  400959:	bf 00 12 60 00       	mov    $0x601200,%edi
  40095e:	ff e0                	jmpq   *%rax
  400960:	5d                   	pop    %rbp
  400961:	c3                   	retq   
  400962:	66 90                	xchg   %ax,%ax
  400964:	66 90                	xchg   %ax,%ax
  400966:	66 90                	xchg   %ax,%ax
  400968:	66 90                	xchg   %ax,%ax
  40096a:	66 90                	xchg   %ax,%ax
  40096c:	66 90                	xchg   %ax,%ax
  40096e:	66 90                	xchg   %ax,%ax

0000000000400970 <main>:
  400970:	55                   	push   %rbp
  400971:	48 89 e5             	mov    %rsp,%rbp
  400974:	48 83 e4 80          	and    $0xffffffffffffff80,%rsp
  400978:	41 54                	push   %r12
  40097a:	48 83 ec 78          	sub    $0x78,%rsp
  40097e:	49 89 f4             	mov    %rsi,%r12
  400981:	33 f6                	xor    %esi,%esi
  400983:	bf 03 00 00 00       	mov    $0x3,%edi
  400988:	e8 d3 03 00 00       	callq  400d60 <__intel_new_feature_proc_init>
  40098d:	0f ae 1c 24          	stmxcsr (%rsp)
  400991:	33 f6                	xor    %esi,%esi
  400993:	81 0c 24 40 80 00 00 	orl    $0x8040,(%rsp)
  40099a:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
  40099f:	0f ae 14 24          	ldmxcsr (%rsp)
  4009a3:	e8 98 fe ff ff       	callq  400840 <strtod@plt>
  4009a8:	b8 01 00 00 00       	mov    $0x1,%eax
  4009ad:	c5 f8 92 c8          	kmov   %eax,%k1
  4009b1:	62 f2 f9 09 d1 44 24 	vpackstorelpd %zmm0,0x18(%rsp){%k1}
  4009b8:	03 
  4009b9:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
  4009be:	33 f6                	xor    %esi,%esi
  4009c0:	e8 7b fe ff ff       	callq  400840 <strtod@plt>
  4009c5:	b8 01 00 00 00       	mov    $0x1,%eax
  4009ca:	c5 f8 92 c8          	kmov   %eax,%k1
  4009ce:	62 f2 f9 09 d1 44 24 	vpackstorelpd %zmm0,0x10(%rsp){%k1}
  4009d5:	02 
  4009d6:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
  4009db:	33 f6                	xor    %esi,%esi
  4009dd:	e8 5e fe ff ff       	callq  400840 <strtod@plt>
  4009e2:	b8 01 00 00 00       	mov    $0x1,%eax
  4009e7:	c5 f8 92 c8          	kmov   %eax,%k1
  4009eb:	62 f2 f9 09 d1 44 24 	vpackstorelpd %zmm0,0x20(%rsp){%k1}
  4009f2:	04 
  4009f3:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
  4009f8:	33 f6                	xor    %esi,%esi
  4009fa:	e8 41 fe ff ff       	callq  400840 <strtod@plt>
  4009ff:	b8 01 00 00 00       	mov    $0x1,%eax
  400a04:	c5 f8 92 c8          	kmov   %eax,%k1
  400a08:	62 f2 f9 09 d1 44 24 	vpackstorelpd %zmm0,0x28(%rsp){%k1}
  400a0f:	05 
  400a10:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
  400a15:	33 f6                	xor    %esi,%esi
  400a17:	e8 24 fe ff ff       	callq  400840 <strtod@plt>
  400a1c:	b8 01 00 00 00       	mov    $0x1,%eax
  400a21:	c5 f8 92 c8          	kmov   %eax,%k1
  400a25:	62 f2 f9 09 d1 44 24 	vpackstorelpd %zmm0,0x8(%rsp){%k1}
  400a2c:	01 
  400a2d:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
  400a32:	33 f6                	xor    %esi,%esi
  400a34:	e8 07 fe ff ff       	callq  400840 <strtod@plt>
  400a39:	b8 01 00 00 00       	mov    $0x1,%eax
  400a3e:	c5 f8 92 c8          	kmov   %eax,%k1
  400a42:	62 f2 f9 09 d1 04 24 	vpackstorelpd %zmm0,(%rsp){%k1}
  400a49:	bf 80 14 60 00       	mov    $0x601480,%edi
  400a4e:	be c4 0e 40 00       	mov    $0x400ec4,%esi
  400a53:	e8 d8 fd ff ff       	callq  400830 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
  400a58:	48 89 c7             	mov    %rax,%rdi
  400a5b:	be 90 08 40 00       	mov    $0x400890,%esi
  400a60:	e8 1b fe ff ff       	callq  400880 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>
  400a65:	48 8b 05 14 0a 20 00 	mov    0x200a14(%rip),%rax        # 601480 <std::cout@@GLIBCXX_3.4>
  400a6c:	bf 80 14 60 00       	mov    $0x601480,%edi
  400a71:	48 8b 50 e8          	mov    -0x18(%rax),%rdx
  400a75:	be e8 0e 40 00       	mov    $0x400ee8,%esi
  400a7a:	48 c7 82 88 14 60 00 	movq   $0xc8,0x601488(%rdx)
  400a81:	c8 00 00 00 
  400a85:	e8 a6 fd ff ff       	callq  400830 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
  400a8a:	62 f1 69 08 ef d2    	vpxord %zmm2,%zmm2,%zmm2
  400a90:	ba 01 00 00 00       	mov    $0x1,%edx
  400a95:	62 f2 79 08 5a 1d e1 	vbroadcasti32x4 0x4e1(%rip),%zmm3        # 400f80 <.L_2il0floatpacket.5+0x40>
  400a9c:	04 00 00 
  400a9f:	c5 f8 92 da          	kmov   %edx,%k3
  400aa3:	48 89 c7             	mov    %rax,%rdi
  400aa6:	62 f1 f9 1b 5a 4c 24 	vcvtpd2ps 0x10(%rsp){1to8},%zmm1{%k3}
  400aad:	02 
  400aae:	62 f1 f9 1b 5a 44 24 	vcvtpd2ps 0x18(%rsp){1to8},%zmm0{%k3}
  400ab5:	03 
  400ab6:	62 f2 71 1b 55 15 e0 	vfixupnanps 0x4e0(%rip){1to16},%zmm1,%zmm2{%k3}        # 400fa0 <.L_2il0floatpacket.5+0x60>
  400abd:	04 00 00 
  400ac0:	62 f3 79 0b 26 e9 00 	vgetmantps $0x0,%zmm1,%zmm5{%k3}
  400ac7:	62 f2 79 1b 55 15 cf 	vfixupnanps 0x4cf(%rip){1to16},%zmm0,%zmm2{%k3}        # 400fa0 <.L_2il0floatpacket.5+0x60>
  400ace:	04 00 00 
  400ad1:	62 72 79 0b ca d5    	vrcp23ps %zmm5,%zmm10{%k3}
  400ad7:	62 f1 78 48 28 e3    	vmovaps %zmm3{aaaa},%zmm4
  400add:	62 f1 68 0b c2 d2 00 	vcmpeqps %zmm2,%zmm2,%k2{%k3}
  400ae4:	62 f2 29 cb ac ec    	vfnmadd213ps {rn-sae},%zmm4,%zmm10,%zmm5{%k3}
  400aea:	62 f2 79 0b 42 f9    	vgetexpps %zmm1,%zmm7{%k3}
  400af0:	c5 f8 90 ca          	kmov   %k2,%k1
  400af4:	62 f2 79 0b 42 f0    	vgetexpps %zmm0,%zmm6{%k3}
  400afa:	c5 f8 42 cb          	kandn  %k3,%k1
  400afe:	62 52 51 cb a8 d2    	vfmadd213ps {rn-sae},%zmm10,%zmm5,%zmm10{%k3}
  400b04:	62 73 79 0b 26 c8 00 	vgetmantps $0x0,%zmm0,%zmm9{%k3}
  400b0b:	62 71 48 0b 5c c7    	vsubps %zmm7,%zmm6,%zmm8{%k3}
  400b11:	62 f2 71 1b 55 0d 89 	vfixupnanps 0x489(%rip){1to16},%zmm1,%zmm1{%k3}        # 400fa4 <.L_2il0floatpacket.5+0x64>
  400b18:	04 00 00 
  400b1b:	62 51 30 ca 59 e2    	vmulps {rn-sae},%zmm10,%zmm9,%zmm12{%k2}
  400b21:	62 53 79 0b cb d8 00 	vcvtfxpntps2dq $0x0,%zmm8,%zmm11{%k3}
  400b28:	62 71 78 c9 59 e1    	vmulps {rn-sae},%zmm1,%zmm0,%zmm12{%k1}
  400b2e:	62 52 19 8a 84 e3    	vscaleps {rn},%zmm11,%zmm12,%zmm12{%k2}
  400b34:	62 51 78 0b 28 ec    	vmovaps %zmm12,%zmm13{%k3}
  400b3a:	62 d1 78 08 28 c5    	vmovaps %zmm13,%zmm0
  400b40:	e8 2b fd ff ff       	callq  400870 <std::ostream::operator<<(float)@plt>
  400b45:	48 89 c7             	mov    %rax,%rdi
  400b48:	be 90 08 40 00       	mov    $0x400890,%esi
  400b4d:	e8 2e fd ff ff       	callq  400880 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>
  400b52:	bf 80 14 60 00       	mov    $0x601480,%edi
  400b57:	be fc 0e 40 00       	mov    $0x400efc,%esi
  400b5c:	e8 cf fc ff ff       	callq  400830 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
  400b61:	62 f2 f9 08 19 44 24 	vbroadcastsd 0x20(%rsp),%zmm0
  400b68:	04 
  400b69:	ba 01 00 00 00       	mov    $0x1,%edx
  400b6e:	62 f2 f9 08 19 4c 24 	vbroadcastsd 0x28(%rsp),%zmm1
  400b75:	05 
  400b76:	c5 f8 92 da          	kmov   %edx,%k3
  400b7a:	62 72 f9 0b 42 c9    	vgetexppd %zmm1,%zmm9{%k3}
  400b80:	48 89 c7             	mov    %rax,%rdi
  400b83:	62 72 f9 0b 42 c0    	vgetexppd %zmm0,%zmm8{%k3}
  400b89:	62 72 79 08 5a 25 fd 	vbroadcasti32x4 0x3fd(%rip),%zmm12        # 400f90 <.L_2il0floatpacket.5+0x50>
  400b90:	03 00 00 
  400b93:	62 f3 f9 0b 26 f9 00 	vgetmantpd $0x0,%zmm1,%zmm7{%k3}
  400b9a:	62 51 b9 0b 5c d1    	vsubpd %zmm9,%zmm8,%zmm10{%k3}
  400ba0:	62 52 29 48 39 dc    	vpminsd %zmm12{aaaa},%zmm10,%zmm11
  400ba6:	62 f1 f9 fb 5a e7    	vcvtpd2ps {rz-sae},%zmm7,%zmm4{%k3}
  400bac:	62 e2 f9 08 5b 15 8a 	vbroadcasti64x4 0x38a(%rip),%zmm18        # 400f40 <.L_2il0floatpacket.5>
  400bb3:	03 00 00 
  400bb6:	62 52 21 58 3b ec    	vpminud %zmm12{bbbb},%zmm11,%zmm13
  400bbc:	62 f2 79 0b ca ec    	vrcp23ps %zmm4,%zmm5{%k3}
  400bc2:	62 f1 e1 08 ef db    	vpxorq %zmm3,%zmm3,%zmm3
  400bc8:	62 f2 79 08 58 15 ce 	vpbroadcastd 0x3ce(%rip),%zmm2        # 400fa0 <.L_2il0floatpacket.5+0x60>
  400bcf:	03 00 00 
  400bd2:	62 31 91 6b 58 ea    	vaddpd %zmm18{cccc},%zmm13,%zmm13{%k3}
  400bd8:	62 f2 f1 0b 55 da    	vfixupnanpd %zmm2,%zmm1,%zmm3{%k3}
  400bde:	62 e1 78 0b 5a e5    	vcvtps2pd %ymm5,%zmm20{%k3}
  400be4:	62 b1 f9 58 28 f2    	vmovapd %zmm18{bbbb},%zmm6
  400bea:	62 d1 01 08 72 f5 14 	vpslld $0x14,%zmm13,%zmm15
  400bf1:	62 72 f9 08 5b 35 65 	vbroadcasti64x4 0x365(%rip),%zmm14        # 400f60 <.L_2il0floatpacket.5+0x20>
  400bf8:	03 00 00 
  400bfb:	62 f2 f9 0b 55 da    	vfixupnanpd %zmm2,%zmm0,%zmm3{%k3}
  400c01:	62 f2 d9 c3 ac fe    	vfnmadd213pd {rn-sae},%zmm6,%zmm20,%zmm7{%k3}
  400c07:	62 d1 49 00 72 e7 01 	vpsrad $0x1,%zmm15,%zmm22
  400c0e:	62 f1 e1 0b c2 d3 00 	vcmpeqpd %zmm3,%zmm3,%k2{%k3}
  400c15:	62 f2 c1 cb b8 ff    	vfmadd231pd {rn-sae},%zmm7,%zmm7,%zmm7{%k3}
  400c1b:	62 c1 c9 43 db f6    	vpandq %zmm14{aaaa},%zmm22,%zmm22{%k3}
  400c21:	c5 f8 90 ca          	kmov   %k2,%k1
  400c25:	62 e2 79 08 58 2d 75 	vpbroadcastd 0x375(%rip),%zmm21        # 400fa4 <.L_2il0floatpacket.5+0x64>
  400c2c:	03 00 00 
  400c2f:	62 a2 c1 cb b8 e4    	vfmadd231pd {rn-sae},%zmm20,%zmm7,%zmm20{%k3}
  400c35:	c5 f8 42 cb          	kandn  %k3,%k1
  400c39:	62 e3 f9 0b 26 d8 00 	vgetmantpd $0x0,%zmm0,%zmm19{%k3}
  400c40:	62 a1 01 08 fa c6    	vpsubd %zmm22,%zmm15,%zmm16
  400c46:	62 a1 f9 58 6f ca    	vmovdqa64 %zmm18{bbbb},%zmm17
  400c4c:	62 b2 f1 0b 55 cd    	vfixupnanpd %zmm21,%zmm1,%zmm1{%k3}
  400c52:	62 21 e1 c2 59 cc    	vmulpd {rn-sae},%zmm20,%zmm19,%zmm25{%k2}
  400c58:	62 21 79 00 fe c1    	vpaddd %zmm17,%zmm16,%zmm24
  400c5e:	62 61 f9 c9 59 c9    	vmulpd {rn-sae},%zmm1,%zmm0,%zmm25{%k1}
  400c64:	62 21 b9 43 db c2    	vpandq %zmm18{aaaa},%zmm24,%zmm24{%k3}
  400c6a:	62 a1 31 00 fe fe    	vpaddd %zmm22,%zmm25,%zmm23
  400c70:	62 01 c1 82 59 c8    	vmulpd {rn},%zmm24,%zmm23,%zmm25{%k2}
  400c76:	62 01 f9 0b 28 d1    	vmovapd %zmm25,%zmm26{%k3}
  400c7c:	62 91 f9 08 28 c2    	vmovapd %zmm26,%zmm0
  400c82:	e8 59 fb ff ff       	callq  4007e0 <std::ostream::operator<<(double)@plt>
  400c87:	48 89 c7             	mov    %rax,%rdi
  400c8a:	be 90 08 40 00       	mov    $0x400890,%esi
  400c8f:	e8 ec fb ff ff       	callq  400880 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>
  400c94:	bf 80 14 60 00       	mov    $0x601480,%edi
  400c99:	be 10 0f 40 00       	mov    $0x400f10,%esi
  400c9e:	e8 8d fb ff ff       	callq  400830 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
  400ca3:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
  400ca7:	ba 01 00 00 00       	mov    $0x1,%edx
  400cac:	62 f2 f9 08 19 44 24 	vbroadcastsd 0x18(%rsp),%zmm0
  400cb3:	03 
  400cb4:	c5 f8 92 ca          	kmov   %edx,%k1
  400cb8:	62 f2 f9 08 19 4c 24 	vbroadcastsd 0x10(%rsp),%zmm1
  400cbf:	02 
  400cc0:	48 89 c7             	mov    %rax,%rdi
  400cc3:	62 f2 f9 09 d1 44 24 	vpackstorelpd %zmm0,0x20(%rsp){%k1}
  400cca:	04 
  400ccb:	dd 44 24 20          	fldl   0x20(%rsp)
  400ccf:	62 f2 f9 09 d1 4c 24 	vpackstorelpd %zmm1,0x20(%rsp){%k1}
  400cd6:	04 
  400cd7:	dd 44 24 20          	fldl   0x20(%rsp)
  400cdb:	de f9                	fdivrp %st,%st(1)
  400cdd:	db 3c 24             	fstpt  (%rsp)
  400ce0:	e8 1b fb ff ff       	callq  400800 <std::ostream::operator<<(long double)@plt>
  400ce5:	48 83 c4 10          	add    $0x10,%rsp
  400ce9:	48 89 c7             	mov    %rax,%rdi
  400cec:	be 90 08 40 00       	mov    $0x400890,%esi
  400cf1:	e8 8a fb ff ff       	callq  400880 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>
  400cf6:	33 c0                	xor    %eax,%eax
  400cf8:	48 83 c4 78          	add    $0x78,%rsp
  400cfc:	41 5c                	pop    %r12
  400cfe:	48 89 ec             	mov    %rbp,%rsp
  400d01:	5d                   	pop    %rbp
  400d02:	c3                   	retq   
  400d03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400d08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400d0f:	00 

0000000000400d10 <__sti__$E>:
  400d10:	56                   	push   %rsi
  400d11:	bf a0 15 60 00       	mov    $0x6015a0,%edi
  400d16:	e8 d5 fa ff ff       	callq  4007f0 <std::ios_base::Init::Init()@plt>
  400d1b:	bf 20 08 40 00       	mov    $0x400820,%edi
  400d20:	be a0 15 60 00       	mov    $0x6015a0,%esi
  400d25:	ba 68 14 60 00       	mov    $0x601468,%edx
  400d2a:	48 83 c4 08          	add    $0x8,%rsp
  400d2e:	e9 1d fb ff ff       	jmpq   400850 <__cxa_atexit@plt>
  400d33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400d38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400d3f:	00 

0000000000400d40 <std::char_traits<char>::length(char const*)>:
  400d40:	48 89 f9             	mov    %rdi,%rcx
  400d43:	33 c0                	xor    %eax,%eax
  400d45:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
  400d49:	85 d2                	test   %edx,%edx
  400d4b:	74 10                	je     400d5d <std::char_traits<char>::length(char const*)+0x1d>
  400d4d:	0f b6 54 01 01       	movzbl 0x1(%rcx,%rax,1),%edx
  400d52:	48 83 c0 02          	add    $0x2,%rax
  400d56:	85 d2                	test   %edx,%edx
  400d58:	75 eb                	jne    400d45 <std::char_traits<char>::length(char const*)+0x5>
  400d5a:	48 ff c8             	dec    %rax
  400d5d:	c3                   	retq   
  400d5e:	66 90                	xchg   %ax,%ax

0000000000400d60 <__intel_new_feature_proc_init>:
  400d60:	56                   	push   %rsi
  400d61:	89 fe                	mov    %edi,%esi
  400d63:	33 ff                	xor    %edi,%edi
  400d65:	48 83 c4 08          	add    $0x8,%rsp
  400d69:	e9 02 00 00 00       	jmpq   400d70 <__intel_proc_init_ftzdazule>
  400d6e:	66 90                	xchg   %ax,%ax

0000000000400d70 <__intel_proc_init_ftzdazule>:
  400d70:	41 54                	push   %r12
  400d72:	53                   	push   %rbx
  400d73:	55                   	push   %rbp
  400d74:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
  400d7b:	89 f3                	mov    %esi,%ebx
  400d7d:	89 dd                	mov    %ebx,%ebp
  400d7f:	41 89 dc             	mov    %ebx,%r12d
  400d82:	83 e5 04             	and    $0x4,%ebp
  400d85:	41 83 e4 02          	and    $0x2,%r12d
  400d89:	74 09                	je     400d94 <__intel_proc_init_ftzdazule+0x24>
  400d8b:	b8 02 00 00 00       	mov    $0x2,%eax
  400d90:	85 f8                	test   %edi,%eax
  400d92:	74 09                	je     400d9d <__intel_proc_init_ftzdazule+0x2d>
  400d94:	85 ed                	test   %ebp,%ebp
  400d96:	74 35                	je     400dcd <__intel_proc_init_ftzdazule+0x5d>
  400d98:	83 e7 04             	and    $0x4,%edi
  400d9b:	75 30                	jne    400dcd <__intel_proc_init_ftzdazule+0x5d>
  400d9d:	48 8d 3c 24          	lea    (%rsp),%rdi
  400da1:	33 f6                	xor    %esi,%esi
  400da3:	ba 00 02 00 00       	mov    $0x200,%edx
  400da8:	e8 b3 fa ff ff       	callq  400860 <memset@plt>
  400dad:	0f ae 04 24          	fxsave (%rsp)
  400db1:	f6 44 24 1c 40       	testb  $0x40,0x1c(%rsp)
  400db6:	75 06                	jne    400dbe <__intel_proc_init_ftzdazule+0x4e>
  400db8:	41 bc 00 00 00 00    	mov    $0x0,%r12d
  400dbe:	f7 44 24 1c 00 00 02 	testl  $0x20000,0x1c(%rsp)
  400dc5:	00 
  400dc6:	75 05                	jne    400dcd <__intel_proc_init_ftzdazule+0x5d>
  400dc8:	bd 00 00 00 00       	mov    $0x0,%ebp
  400dcd:	83 e3 01             	and    $0x1,%ebx
  400dd0:	75 39                	jne    400e0b <__intel_proc_init_ftzdazule+0x9b>
  400dd2:	45 85 e4             	test   %r12d,%r12d
  400dd5:	74 11                	je     400de8 <__intel_proc_init_ftzdazule+0x78>
  400dd7:	0f ae 1c 24          	stmxcsr (%rsp)
  400ddb:	8b 04 24             	mov    (%rsp),%eax
  400dde:	83 c8 40             	or     $0x40,%eax
  400de1:	89 04 24             	mov    %eax,(%rsp)
  400de4:	0f ae 14 24          	ldmxcsr (%rsp)
  400de8:	85 ed                	test   %ebp,%ebp
  400dea:	74 13                	je     400dff <__intel_proc_init_ftzdazule+0x8f>
  400dec:	0f ae 1c 24          	stmxcsr (%rsp)
  400df0:	8b 04 24             	mov    (%rsp),%eax
  400df3:	0d 00 00 02 00       	or     $0x20000,%eax
  400df8:	89 04 24             	mov    %eax,(%rsp)
  400dfb:	0f ae 14 24          	ldmxcsr (%rsp)
  400dff:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
  400e06:	5d                   	pop    %rbp
  400e07:	5b                   	pop    %rbx
  400e08:	41 5c                	pop    %r12
  400e0a:	c3                   	retq   
  400e0b:	0f ae 1c 24          	stmxcsr (%rsp)
  400e0f:	8b 04 24             	mov    (%rsp),%eax
  400e12:	0d 00 80 00 00       	or     $0x8000,%eax
  400e17:	89 04 24             	mov    %eax,(%rsp)
  400e1a:	0f ae 14 24          	ldmxcsr (%rsp)
  400e1e:	eb b2                	jmp    400dd2 <__intel_proc_init_ftzdazule+0x62>

0000000000400e20 <__libc_csu_init>:
  400e20:	41 57                	push   %r15
  400e22:	4c 8d 3d ab 03 20 00 	lea    0x2003ab(%rip),%r15        # 6011d4 <__init_array_end>
  400e29:	41 56                	push   %r14
  400e2b:	49 89 d6             	mov    %rdx,%r14
  400e2e:	41 55                	push   %r13
  400e30:	49 89 f5             	mov    %rsi,%r13
  400e33:	41 54                	push   %r12
  400e35:	41 89 fc             	mov    %edi,%r12d
  400e38:	55                   	push   %rbp
  400e39:	48 8d 2d 94 03 20 00 	lea    0x200394(%rip),%rbp        # 6011d4 <__init_array_end>
  400e40:	53                   	push   %rbx
  400e41:	49 29 ef             	sub    %rbp,%r15
  400e44:	51                   	push   %rcx
  400e45:	e8 66 f9 ff ff       	callq  4007b0 <_init>
  400e4a:	49 c1 ff 03          	sar    $0x3,%r15
  400e4e:	74 1d                	je     400e6d <__libc_csu_init+0x4d>
  400e50:	31 db                	xor    %ebx,%ebx
  400e52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400e58:	4c 89 f2             	mov    %r14,%rdx
  400e5b:	4c 89 ee             	mov    %r13,%rsi
  400e5e:	44 89 e7             	mov    %r12d,%edi
  400e61:	ff 54 dd 00          	callq  *0x0(%rbp,%rbx,8)
  400e65:	48 ff c3             	inc    %rbx
  400e68:	4c 39 fb             	cmp    %r15,%rbx
  400e6b:	75 eb                	jne    400e58 <__libc_csu_init+0x38>
  400e6d:	58                   	pop    %rax
  400e6e:	5b                   	pop    %rbx
  400e6f:	5d                   	pop    %rbp
  400e70:	41 5c                	pop    %r12
  400e72:	41 5d                	pop    %r13
  400e74:	41 5e                	pop    %r14
  400e76:	41 5f                	pop    %r15
  400e78:	c3                   	retq   
  400e79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400e80 <__libc_csu_fini>:
  400e80:	c3                   	retq   
  400e81:	66 90                	xchg   %ax,%ax
  400e83:	90                   	nop

0000000000400e84 <__do_global_ctors_aux>:
  400e84:	55                   	push   %rbp
  400e85:	48 89 e5             	mov    %rsp,%rbp
  400e88:	53                   	push   %rbx
  400e89:	bb e0 11 60 00       	mov    $0x6011e0,%ebx
  400e8e:	52                   	push   %rdx
  400e8f:	eb 06                	jmp    400e97 <__do_global_ctors_aux+0x13>
  400e91:	48 83 eb 08          	sub    $0x8,%rbx
  400e95:	ff d0                	callq  *%rax
  400e97:	48 8b 03             	mov    (%rbx),%rax
  400e9a:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  400e9e:	75 f1                	jne    400e91 <__do_global_ctors_aux+0xd>
  400ea0:	58                   	pop    %rax
  400ea1:	5b                   	pop    %rbx
  400ea2:	5d                   	pop    %rbp
  400ea3:	c3                   	retq   

Disassembly of section .fini:

0000000000400ea4 <_fini>:
  400ea4:	48 83 ec 08          	sub    $0x8,%rsp
  400ea8:	e8 47 fa ff ff       	callq  4008f4 <__do_global_dtors_aux>
  400ead:	48 83 c4 08          	add    $0x8,%rsp
  400eb1:	c3                   	retq   
