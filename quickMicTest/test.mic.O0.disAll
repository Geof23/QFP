
test.mic.O0:     file format elf64-k1om


Disassembly of section .interp:

0000000000400200 <.interp>:
  400200:	2f                   	(bad)  
  400201:	6c                   	insb   (%dx),%es:(%rdi)
  400202:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400209:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  40020e:	78 2d                	js     40023d <_init-0x61b>
  400210:	6b 31 6f             	imul   $0x6f,(%rcx),%esi
  400213:	6d                   	insl   (%dx),%es:(%rdi)
  400214:	2e 73 6f             	jae,pn 400286 <_init-0x5d2>
  400217:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

000000000040021c <.note.ABI-tag>:
  40021c:	04 00                	add    $0x0,%al
  40021e:	00 00                	add    %al,(%rax)
  400220:	10 00                	adc    %al,(%rax)
  400222:	00 00                	add    %al,(%rax)
  400224:	01 00                	add    %eax,(%rax)
  400226:	00 00                	add    %al,(%rax)
  400228:	47                   	rex.RXB
  400229:	4e 55                	rex.WRX push %rbp
  40022b:	00 00                	add    %al,(%rax)
  40022d:	00 00                	add    %al,(%rax)
  40022f:	00 02                	add    %al,(%rdx)
  400231:	00 00                	add    %al,(%rax)
  400233:	00 06                	add    %al,(%rsi)
  400235:	00 00                	add    %al,(%rax)
  400237:	00 10                	add    %dl,(%rax)
  400239:	00 00                	add    %al,(%rax)
	...

Disassembly of section .hash:

0000000000400240 <.hash>:
  400240:	11 00                	adc    %eax,(%rax)
  400242:	00 00                	add    %al,(%rax)
  400244:	12 00                	adc    (%rax),%al
  400246:	00 00                	add    %al,(%rax)
  400248:	0c 00                	or     $0x0,%al
  40024a:	00 00                	add    %al,(%rax)
  40024c:	00 00                	add    %al,(%rax)
  40024e:	00 00                	add    %al,(%rax)
  400250:	0b 00                	or     (%rax),%eax
  400252:	00 00                	add    %al,(%rax)
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	11 00                	adc    %eax,(%rax)
	...
  400262:	00 00                	add    %al,(%rax)
  400264:	09 00                	or     %eax,(%rax)
  400266:	00 00                	add    %al,(%rax)
  400268:	05 00 00 00 00       	add    $0x0,%eax
	...
  400275:	00 00                	add    %al,(%rax)
  400277:	00 07                	add    %al,(%rdi)
  400279:	00 00                	add    %al,(%rax)
  40027b:	00 0a                	add    %cl,(%rdx)
  40027d:	00 00                	add    %al,(%rax)
  40027f:	00 0d 00 00 00 08    	add    %cl,0x8000000(%rip)        # 8400285 <_end+0x7dfebbd>
  400285:	00 00                	add    %al,(%rax)
  400287:	00 10                	add    %dl,(%rax)
	...
  4002a9:	00 00                	add    %al,(%rax)
  4002ab:	00 03                	add    %al,(%rbx)
	...
  4002bd:	00 00                	add    %al,(%rax)
  4002bf:	00 01                	add    %al,(%rcx)
  4002c1:	00 00                	add    %al,(%rax)
  4002c3:	00 02                	add    %al,(%rdx)
  4002c5:	00 00                	add    %al,(%rax)
  4002c7:	00 06                	add    %al,(%rsi)
  4002c9:	00 00                	add    %al,(%rax)
  4002cb:	00 0e                	add    %cl,(%rsi)
  4002cd:	00 00                	add    %al,(%rax)
  4002cf:	00 0f                	add    %cl,(%rdi)
  4002d1:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynsym:

00000000004002d8 <.dynsym>:
	...
  4002f0:	ad                   	lods   %ds:(%rsi),%eax
  4002f1:	00 00                	add    %al,(%rax)
  4002f3:	00 12                	add    %dl,(%rdx)
	...
  400305:	00 00                	add    %al,(%rax)
  400307:	00 5e 00             	add    %bl,0x0(%rsi)
  40030a:	00 00                	add    %al,(%rax)
  40030c:	12 00                	adc    (%rax),%al
	...
  40031e:	00 00                	add    %al,(%rax)
  400320:	0b 00                	or     (%rax),%eax
  400322:	00 00                	add    %al,(%rax)
  400324:	20 00                	and    %al,(%rax)
	...
  400336:	00 00                	add    %al,(%rax)
  400338:	1a 00                	sbb    (%rax),%al
  40033a:	00 00                	add    %al,(%rax)
  40033c:	20 00                	and    %al,(%rax)
	...
  40034e:	00 00                	add    %al,(%rax)
  400350:	3d 00 00 00 12       	cmp    $0x12000000,%eax
	...
  400365:	00 00                	add    %al,(%rax)
  400367:	00 7f 01             	add    %bh,0x1(%rdi)
  40036a:	00 00                	add    %al,(%rax)
  40036c:	12 00                	adc    (%rax),%al
	...
  40037e:	00 00                	add    %al,(%rax)
  400380:	4f 01 00             	rex.WRXB add %r8,(%r8)
  400383:	00 12                	add    %dl,(%rdx)
	...
  400395:	00 00                	add    %al,(%rax)
  400397:	00 b7 00 00 00 12    	add    %dh,0x12000000(%rdi)
	...
  4003ad:	00 00                	add    %al,(%rax)
  4003af:	00 93 01 00 00 12    	add    %dl,0x12000001(%rbx)
	...
  4003c5:	00 00                	add    %al,(%rax)
  4003c7:	00 76 00             	add    %dh,0x0(%rsi)
  4003ca:	00 00                	add    %al,(%rax)
  4003cc:	12 00                	adc    (%rax),%al
  4003ce:	00 00                	add    %al,(%rax)
  4003d0:	e0 08                	loopne 4003da <_init-0x47e>
  4003d2:	40 00 00             	add    %al,(%rax)
	...
  4003dd:	00 00                	add    %al,(%rax)
  4003df:	00 cb                	add    %cl,%bl
  4003e1:	00 00                	add    %al,(%rax)
  4003e3:	00 12                	add    %dl,(%rdx)
	...
  4003f5:	00 00                	add    %al,(%rax)
  4003f7:	00 a3 00 00 00 11    	add    %ah,0x11000000(%rbx)
  4003fd:	00 18                	add    %bl,(%rax)
  4003ff:	00 a0 15 60 00 00    	add    %ah,0x6015(%rax)
  400405:	00 00                	add    %al,(%rax)
  400407:	00 10                	add    %dl,(%rax)
  400409:	01 00                	add    %eax,(%rax)
  40040b:	00 00                	add    %al,(%rax)
  40040d:	00 00                	add    %al,(%rax)
  40040f:	00 86 01 00 00 12    	add    %al,0x12000001(%rsi)
	...
  400425:	00 00                	add    %al,(%rax)
  400427:	00 c1                	add    %al,%cl
  400429:	00 00                	add    %al,(%rax)
  40042b:	00 12                	add    %dl,(%rdx)
	...
  40043d:	00 00                	add    %al,(%rax)
  40043f:	00 3e                	add    %bh,(%rsi)
  400441:	01 00                	add    %eax,(%rax)
  400443:	00 12                	add    %dl,(%rdx)
	...
  400455:	00 00                	add    %al,(%rax)
  400457:	00 03                	add    %al,(%rbx)
  400459:	01 00                	add    %eax,(%rax)
  40045b:	00 12                	add    %dl,(%rdx)
  40045d:	00 00                	add    %al,(%rax)
  40045f:	00 30                	add    %dh,(%rax)
  400461:	09 40 00             	or     %eax,0x0(%rax)
	...
  400470:	8e 00                	mov    (%rax),%es
  400472:	00 00                	add    %al,(%rax)
  400474:	12 00                	adc    (%rax),%al
  400476:	00 00                	add    %al,(%rax)
  400478:	40 09 40 00          	rex or %eax,0x0(%rax)
	...

Disassembly of section .dynstr:

0000000000400488 <.dynstr>:
  400488:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  40048c:	6d                   	insl   (%dx),%es:(%rdi)
  40048d:	2e 73 6f             	jae,pn 4004ff <_init-0x359>
  400490:	2e 36 00 5f 5f       	cs add %bl,%cs:%ss:0x5f(%rdi)
  400495:	67 6d                	insl   (%dx),%es:(%edi)
  400497:	6f                   	outsl  %ds:(%rsi),(%dx)
  400498:	6e                   	outsb  %ds:(%rsi),(%dx)
  400499:	5f                   	pop    %rdi
  40049a:	73 74                	jae    400510 <_init-0x348>
  40049c:	61                   	(bad)  
  40049d:	72 74                	jb     400513 <_init-0x345>
  40049f:	5f                   	pop    %rdi
  4004a0:	5f                   	pop    %rdi
  4004a1:	00 5f 4a             	add    %bl,0x4a(%rdi)
  4004a4:	76 5f                	jbe    400505 <_init-0x353>
  4004a6:	52                   	push   %rdx
  4004a7:	65 67 69 73 74 65 72 	imul   $0x6c437265,%gs:0x74(%ebx),%esi
  4004ae:	43 6c 
  4004b0:	61                   	(bad)  
  4004b1:	73 73                	jae    400526 <_init-0x332>
  4004b3:	65                   	gs
  4004b4:	73 00                	jae    4004b6 <_init-0x3a2>
  4004b6:	6c                   	insb   (%dx),%es:(%rdi)
  4004b7:	69 62 73 74 64 63 2b 	imul   $0x2b636474,0x73(%rdx),%esp
  4004be:	2b 2e                	sub    (%rsi),%ebp
  4004c0:	73 6f                	jae    400531 <_init-0x327>
  4004c2:	2e 36 00 5f 5a       	cs add %bl,%cs:%ss:0x5a(%rdi)
  4004c7:	4e                   	rex.WRX
  4004c8:	4b 53                	rex.WXB push %r11
  4004ca:	74 35                	je     400501 <_init-0x357>
  4004cc:	63 74 79 70          	movslq 0x70(%rcx,%rdi,2),%esi
  4004d0:	65 49 63 45 31       	movslq %gs:0x31(%r13),%rax
  4004d5:	33 5f 4d             	xor    0x4d(%rdi),%ebx
  4004d8:	5f                   	pop    %rdi
  4004d9:	77 69                	ja     400544 <_init-0x314>
  4004db:	64 65 6e             	fs outsb %fs:%gs:(%rsi),(%dx)
  4004de:	5f                   	pop    %rdi
  4004df:	69 6e 69 74 45 76 00 	imul   $0x764574,0x69(%rsi),%ebp
  4004e6:	5f                   	pop    %rdi
  4004e7:	5a                   	pop    %rdx
  4004e8:	53                   	push   %rbx
  4004e9:	74 31                	je     40051c <_init-0x33c>
  4004eb:	36                   	ss
  4004ec:	5f                   	pop    %rdi
  4004ed:	5f                   	pop    %rdi
  4004ee:	74 68                	je     400558 <_init-0x300>
  4004f0:	72 6f                	jb     400561 <_init-0x2f7>
  4004f2:	77 5f                	ja     400553 <_init-0x305>
  4004f4:	62 61                	(bad)  
  4004f6:	64                   	fs
  4004f7:	5f                   	pop    %rdi
  4004f8:	63 61 73             	movslq 0x73(%rcx),%esp
  4004fb:	74 76                	je     400573 <_init-0x2e5>
  4004fd:	00 5f 5a             	add    %bl,0x5a(%rdi)
  400500:	4e 53                	rex.WRX push %rbx
  400502:	74 38                	je     40053c <_init-0x31c>
  400504:	69 6f 73 5f 62 61 73 	imul   $0x7361625f,0x73(%rdi),%ebp
  40050b:	65                   	gs
  40050c:	34 49                	xor    $0x49,%al
  40050e:	6e                   	outsb  %ds:(%rsi),(%dx)
  40050f:	69 74 44 31 45 76 00 	imul   $0x5f007645,0x31(%rsp,%rax,2),%esi
  400516:	5f 
  400517:	5f                   	pop    %rdi
  400518:	67 78 78             	addr32 js 400593 <_init-0x2c5>
  40051b:	5f                   	pop    %rdi
  40051c:	70 65                	jo     400583 <_init-0x2d5>
  40051e:	72 73                	jb     400593 <_init-0x2c5>
  400520:	6f                   	outsl  %ds:(%rsi),(%dx)
  400521:	6e                   	outsb  %ds:(%rsi),(%dx)
  400522:	61                   	(bad)  
  400523:	6c                   	insb   (%dx),%es:(%rdi)
  400524:	69 74 79 5f 76 30 00 	imul   $0x5f003076,0x5f(%rcx,%rdi,2),%esi
  40052b:	5f 
  40052c:	5a                   	pop    %rdx
  40052d:	53                   	push   %rbx
  40052e:	74 34                	je     400564 <_init-0x2f4>
  400530:	63 6f 75             	movslq 0x75(%rdi),%ebp
  400533:	74 00                	je     400535 <_init-0x323>
  400535:	5f                   	pop    %rdi
  400536:	5a                   	pop    %rdx
  400537:	4e 53                	rex.WRX push %rbx
  400539:	6f                   	outsl  %ds:(%rsi),(%dx)
  40053a:	6c                   	insb   (%dx),%es:(%rdi)
  40053b:	73 45                	jae    400582 <_init-0x2d6>
  40053d:	64 00 5f 5a          	add    %bl,%fs:0x5a(%rdi)
  400541:	4e 53                	rex.WRX push %rbx
  400543:	6f                   	outsl  %ds:(%rsi),(%dx)
  400544:	6c                   	insb   (%dx),%es:(%rdi)
  400545:	73 45                	jae    40058c <_init-0x2cc>
  400547:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
  40054b:	4e 53                	rex.WRX push %rbx
  40054d:	6f                   	outsl  %ds:(%rsi),(%dx)
  40054e:	6c                   	insb   (%dx),%es:(%rdi)
  40054f:	73 45                	jae    400596 <_init-0x2c2>
  400551:	66                   	data16
  400552:	00 5f 5a             	add    %bl,0x5a(%rdi)
  400555:	53                   	push   %rbx
  400556:	74 6c                	je     4005c4 <_init-0x294>
  400558:	73 49                	jae    4005a3 <_init-0x2b5>
  40055a:	53                   	push   %rbx
  40055b:	74 31                	je     40058e <_init-0x2ca>
  40055d:	31 63 68             	xor    %esp,0x68(%rbx)
  400560:	61                   	(bad)  
  400561:	72 5f                	jb     4005c2 <_init-0x296>
  400563:	74 72                	je     4005d7 <_init-0x281>
  400565:	61                   	(bad)  
  400566:	69 74 73 49 63 45 45 	imul   $0x52454563,0x49(%rbx,%rsi,2),%esi
  40056d:	52 
  40056e:	53                   	push   %rbx
  40056f:	74 31                	je     4005a2 <_init-0x2b6>
  400571:	33 62 61             	xor    0x61(%rdx),%esp
  400574:	73 69                	jae    4005df <_init-0x279>
  400576:	63 5f 6f             	movslq 0x6f(%rdi),%ebx
  400579:	73 74                	jae    4005ef <_init-0x269>
  40057b:	72 65                	jb     4005e2 <_init-0x276>
  40057d:	61                   	(bad)  
  40057e:	6d                   	insl   (%dx),%es:(%rdi)
  40057f:	49 63 54 5f 45       	movslq 0x45(%r15,%rbx,2),%rdx
  400584:	53                   	push   %rbx
  400585:	35 5f 50 4b 63       	xor    $0x634b505f,%eax
  40058a:	00 5f 5a             	add    %bl,0x5a(%rdi)
  40058d:	53                   	push   %rbx
  40058e:	74 34                	je     4005c4 <_init-0x294>
  400590:	65 6e                	outsb  %gs:(%rsi),(%dx)
  400592:	64                   	fs
  400593:	6c                   	insb   (%dx),%es:(%rdi)
  400594:	49 63 53 74          	movslq 0x74(%r11),%rdx
  400598:	31 31                	xor    %esi,(%rcx)
  40059a:	63 68 61             	movslq 0x61(%rax),%ebp
  40059d:	72 5f                	jb     4005fe <_init-0x25a>
  40059f:	74 72                	je     400613 <_init-0x245>
  4005a1:	61                   	(bad)  
  4005a2:	69 74 73 49 63 45 45 	imul   $0x52454563,0x49(%rbx,%rsi,2),%esi
  4005a9:	52 
  4005aa:	53                   	push   %rbx
  4005ab:	74 31                	je     4005de <_init-0x27a>
  4005ad:	33 62 61             	xor    0x61(%rdx),%esp
  4005b0:	73 69                	jae    40061b <_init-0x23d>
  4005b2:	63 5f 6f             	movslq 0x6f(%rdi),%ebx
  4005b5:	73 74                	jae    40062b <_init-0x22d>
  4005b7:	72 65                	jb     40061e <_init-0x23a>
  4005b9:	61                   	(bad)  
  4005ba:	6d                   	insl   (%dx),%es:(%rdi)
  4005bb:	49 54                	rex.WB push %r12
  4005bd:	5f                   	pop    %rdi
  4005be:	54                   	push   %rsp
  4005bf:	30 5f 45             	xor    %bl,0x45(%rdi)
  4005c2:	53                   	push   %rbx
  4005c3:	36                   	ss
  4005c4:	5f                   	pop    %rdi
  4005c5:	00 5f 5a             	add    %bl,0x5a(%rdi)
  4005c8:	4e 53                	rex.WRX push %rbx
  4005ca:	6f                   	outsl  %ds:(%rsi),(%dx)
  4005cb:	6c                   	insb   (%dx),%es:(%rdi)
  4005cc:	73 45                	jae    400613 <_init-0x245>
  4005ce:	50                   	push   %rax
  4005cf:	46 52                	rex.RX push %rdx
  4005d1:	53                   	push   %rbx
  4005d2:	6f                   	outsl  %ds:(%rsi),(%dx)
  4005d3:	53                   	push   %rbx
  4005d4:	5f                   	pop    %rdi
  4005d5:	45 00 5f 5a          	add    %r11b,0x5a(%r15)
  4005d9:	4e 53                	rex.WRX push %rbx
  4005db:	74 38                	je     400615 <_init-0x243>
  4005dd:	69 6f 73 5f 62 61 73 	imul   $0x7361625f,0x73(%rdi),%ebp
  4005e4:	65                   	gs
  4005e5:	34 49                	xor    $0x49,%al
  4005e7:	6e                   	outsb  %ds:(%rsi),(%dx)
  4005e8:	69 74 43 31 45 76 00 	imul   $0x6c007645,0x31(%rbx,%rax,2),%esi
  4005ef:	6c 
  4005f0:	69 62 67 63 63 5f 73 	imul   $0x735f6363,0x67(%rdx),%esp
  4005f7:	2e 73 6f             	jae,pn 400669 <_init-0x1ef>
  4005fa:	2e 31 00             	xor    %eax,%cs:(%rax)
  4005fd:	6c                   	insb   (%dx),%es:(%rdi)
  4005fe:	69 62 63 2e 73 6f 2e 	imul   $0x2e6f732e,0x63(%rdx),%esp
  400605:	36 00 73 74          	add    %dh,%ss:0x74(%rbx)
  400609:	72 6c                	jb     400677 <_init-0x1e1>
  40060b:	65 6e                	outsb  %gs:(%rsi),(%dx)
  40060d:	00 5f 5f             	add    %bl,0x5f(%rdi)
  400610:	63 78 61             	movslq 0x61(%rax),%edi
  400613:	5f                   	pop    %rdi
  400614:	61                   	(bad)  
  400615:	74 65                	je     40067c <_init-0x1dc>
  400617:	78 69                	js     400682 <_init-0x1d6>
  400619:	74 00                	je     40061b <_init-0x23d>
  40061b:	5f                   	pop    %rdi
  40061c:	5f                   	pop    %rdi
  40061d:	6c                   	insb   (%dx),%es:(%rdi)
  40061e:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  400625:	72 74                	jb     40069b <_init-0x1bd>
  400627:	5f                   	pop    %rdi
  400628:	6d                   	insl   (%dx),%es:(%rdi)
  400629:	61                   	(bad)  
  40062a:	69 6e 00 6c 69 62 64 	imul   $0x6462696c,0x0(%rsi),%ebp
  400631:	6c                   	insb   (%dx),%es:(%rdi)
  400632:	2e 73 6f             	jae,pn 4006a4 <_init-0x1b4>
  400635:	2e 32 00             	xor    %cs:(%rax),%al
  400638:	47                   	rex.RXB
  400639:	4c                   	rex.WR
  40063a:	49                   	rex.WB
  40063b:	42                   	rex.X
  40063c:	43 5f                	rex.XB pop %r15
  40063e:	32 2e                	xor    (%rsi),%ch
  400640:	31 34 00             	xor    %esi,(%rax,%rax,1)
  400643:	43 58                	rex.XB pop %r8
  400645:	58                   	pop    %rax
  400646:	41                   	rex.B
  400647:	42                   	rex.X
  400648:	49 5f                	rex.WB pop %r15
  40064a:	31 2e                	xor    %ebp,(%rsi)
  40064c:	33 00                	xor    (%rax),%eax
  40064e:	47                   	rex.RXB
  40064f:	4c                   	rex.WR
  400650:	49                   	rex.WB
  400651:	42                   	rex.X
  400652:	43 58                	rex.XB pop %r8
  400654:	58                   	pop    %rax
  400655:	5f                   	pop    %rdi
  400656:	33 2e                	xor    (%rsi),%ebp
  400658:	34 2e                	xor    $0x2e,%al
  40065a:	31 31                	xor    %esi,(%rcx)
  40065c:	00 47 4c             	add    %al,0x4c(%rdi)
  40065f:	49                   	rex.WB
  400660:	42                   	rex.X
  400661:	43 58                	rex.XB pop %r8
  400663:	58                   	pop    %rax
  400664:	5f                   	pop    %rdi
  400665:	33 2e                	xor    (%rsi),%ebp
  400667:	34 00                	xor    $0x0,%al

Disassembly of section .gnu.version:

000000000040066a <.gnu.version>:
  40066a:	00 00                	add    %al,(%rax)
  40066c:	02 00                	add    (%rax),%al
  40066e:	02 00                	add    (%rax),%al
  400670:	00 00                	add    %al,(%rax)
  400672:	00 00                	add    %al,(%rax)
  400674:	03 00                	add    (%rax),%eax
  400676:	04 00                	add    $0x0,%al
  400678:	02 00                	add    (%rax),%al
  40067a:	02 00                	add    (%rax),%al
  40067c:	04 00                	add    $0x0,%al
  40067e:	02 00                	add    (%rax),%al
  400680:	02 00                	add    (%rax),%al
  400682:	02 00                	add    (%rax),%al
  400684:	04 00                	add    $0x0,%al
  400686:	02 00                	add    (%rax),%al
  400688:	02 00                	add    (%rax),%al
  40068a:	02 00                	add    (%rax),%al
  40068c:	05                   	.byte 0x5
	...

Disassembly of section .gnu.version_r:

0000000000400690 <.gnu.version_r>:
  400690:	01 00                	add    %eax,(%rax)
  400692:	01 00                	add    %eax,(%rax)
  400694:	75 01                	jne    400697 <_init-0x1c1>
  400696:	00 00                	add    %al,(%rax)
  400698:	10 00                	adc    %al,(%rax)
  40069a:	00 00                	add    %al,(%rax)
  40069c:	20 00                	and    %al,(%rax)
  40069e:	00 00                	add    %al,(%rax)
  4006a0:	94                   	xchg   %eax,%esp
  4006a1:	91                   	xchg   %eax,%ecx
  4006a2:	96                   	xchg   %eax,%esi
  4006a3:	06                   	(bad)  
  4006a4:	00 00                	add    %al,(%rax)
  4006a6:	04 00                	add    $0x0,%al
  4006a8:	b0 01                	mov    $0x1,%al
  4006aa:	00 00                	add    %al,(%rax)
  4006ac:	00 00                	add    %al,(%rax)
  4006ae:	00 00                	add    %al,(%rax)
  4006b0:	01 00                	add    %eax,(%rax)
  4006b2:	03 00                	add    (%rax),%eax
  4006b4:	2e 00 00             	add    %al,%cs:(%rax)
  4006b7:	00 10                	add    %dl,(%rax)
  4006b9:	00 00                	add    %al,(%rax)
  4006bb:	00 00                	add    %al,(%rax)
  4006bd:	00 00                	add    %al,(%rax)
  4006bf:	00 d3                	add    %dl,%bl
  4006c1:	af                   	scas   %es:(%rdi),%eax
  4006c2:	6b 05 00 00 05 00 bb 	imul   $0xffffffbb,0x50000(%rip),%eax        # 4506c9 <_IO_stdin_used+0x4f709>
  4006c9:	01 00                	add    %eax,(%rax)
  4006cb:	00 10                	add    %dl,(%rax)
  4006cd:	00 00                	add    %al,(%rax)
  4006cf:	00 61 f8             	add    %ah,-0x8(%rcx)
  4006d2:	97                   	xchg   %eax,%edi
  4006d3:	02 00                	add    (%rax),%al
  4006d5:	00 03                	add    %al,(%rbx)
  4006d7:	00 c6                	add    %al,%dh
  4006d9:	01 00                	add    %eax,(%rax)
  4006db:	00 10                	add    %dl,(%rax)
  4006dd:	00 00                	add    %al,(%rax)
  4006df:	00 74 29 92          	add    %dh,-0x6e(%rcx,%rbp,1)
  4006e3:	08 00                	or     %al,(%rax)
  4006e5:	00 02                	add    %al,(%rdx)
  4006e7:	00 d5                	add    %dl,%ch
  4006e9:	01 00                	add    %eax,(%rax)
  4006eb:	00 00                	add    %al,(%rax)
  4006ed:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000004006f0 <.rela.dyn>:
  4006f0:	08 15 60 00 00 00    	or     %dl,0x60(%rip)        # 400756 <_init-0x102>
  4006f6:	00 00                	add    %al,(%rax)
  4006f8:	06                   	(bad)  
  4006f9:	00 00                	add    %al,(%rax)
  4006fb:	00 03                	add    %al,(%rbx)
	...
  400705:	00 00                	add    %al,(%rax)
  400707:	00 a0 15 60 00 00    	add    %ah,0x6015(%rax)
  40070d:	00 00                	add    %al,(%rax)
  40070f:	00 05 00 00 00 0c    	add    %al,0xc000000(%rip)        # c400715 <_end+0xbdff04d>
	...

Disassembly of section .rela.plt:

0000000000400720 <.rela.plt>:
  400720:	28 15 60 00 00 00    	sub    %dl,0x60(%rip)        # 400786 <_init-0xd2>
  400726:	00 00                	add    %al,(%rax)
  400728:	07                   	(bad)  
  400729:	00 00                	add    %al,(%rax)
  40072b:	00 01                	add    %al,(%rcx)
	...
  400735:	00 00                	add    %al,(%rax)
  400737:	00 30                	add    %dh,(%rax)
  400739:	15 60 00 00 00       	adc    $0x60,%eax
  40073e:	00 00                	add    %al,(%rax)
  400740:	07                   	(bad)  
  400741:	00 00                	add    %al,(%rax)
  400743:	00 02                	add    %al,(%rdx)
	...
  40074d:	00 00                	add    %al,(%rax)
  40074f:	00 38                	add    %bh,(%rax)
  400751:	15 60 00 00 00       	adc    $0x60,%eax
  400756:	00 00                	add    %al,(%rax)
  400758:	07                   	(bad)  
  400759:	00 00                	add    %al,(%rax)
  40075b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 400761 <_init-0xf7>
  400761:	00 00                	add    %al,(%rax)
  400763:	00 00                	add    %al,(%rax)
  400765:	00 00                	add    %al,(%rax)
  400767:	00 40 15             	add    %al,0x15(%rax)
  40076a:	60                   	(bad)  
  40076b:	00 00                	add    %al,(%rax)
  40076d:	00 00                	add    %al,(%rax)
  40076f:	00 07                	add    %al,(%rdi)
  400771:	00 00                	add    %al,(%rax)
  400773:	00 07                	add    %al,(%rdi)
	...
  40077d:	00 00                	add    %al,(%rax)
  40077f:	00 48 15             	add    %cl,0x15(%rax)
  400782:	60                   	(bad)  
  400783:	00 00                	add    %al,(%rax)
  400785:	00 00                	add    %al,(%rax)
  400787:	00 07                	add    %al,(%rdi)
  400789:	00 00                	add    %al,(%rax)
  40078b:	00 08                	add    %cl,(%rax)
	...
  400795:	00 00                	add    %al,(%rax)
  400797:	00 50 15             	add    %dl,0x15(%rax)
  40079a:	60                   	(bad)  
  40079b:	00 00                	add    %al,(%rax)
  40079d:	00 00                	add    %al,(%rax)
  40079f:	00 07                	add    %al,(%rdi)
  4007a1:	00 00                	add    %al,(%rax)
  4007a3:	00 09                	add    %cl,(%rcx)
	...
  4007ad:	00 00                	add    %al,(%rax)
  4007af:	00 58 15             	add    %bl,0x15(%rax)
  4007b2:	60                   	(bad)  
  4007b3:	00 00                	add    %al,(%rax)
  4007b5:	00 00                	add    %al,(%rax)
  4007b7:	00 07                	add    %al,(%rdi)
  4007b9:	00 00                	add    %al,(%rax)
  4007bb:	00 0a                	add    %cl,(%rdx)
	...
  4007c5:	00 00                	add    %al,(%rax)
  4007c7:	00 60 15             	add    %ah,0x15(%rax)
  4007ca:	60                   	(bad)  
  4007cb:	00 00                	add    %al,(%rax)
  4007cd:	00 00                	add    %al,(%rax)
  4007cf:	00 07                	add    %al,(%rdi)
  4007d1:	00 00                	add    %al,(%rax)
  4007d3:	00 0b                	add    %cl,(%rbx)
	...
  4007dd:	00 00                	add    %al,(%rax)
  4007df:	00 68 15             	add    %ch,0x15(%rax)
  4007e2:	60                   	(bad)  
  4007e3:	00 00                	add    %al,(%rax)
  4007e5:	00 00                	add    %al,(%rax)
  4007e7:	00 07                	add    %al,(%rdi)
  4007e9:	00 00                	add    %al,(%rax)
  4007eb:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 4007f1 <_init-0x67>
  4007f1:	00 00                	add    %al,(%rax)
  4007f3:	00 00                	add    %al,(%rax)
  4007f5:	00 00                	add    %al,(%rax)
  4007f7:	00 70 15             	add    %dh,0x15(%rax)
  4007fa:	60                   	(bad)  
  4007fb:	00 00                	add    %al,(%rax)
  4007fd:	00 00                	add    %al,(%rax)
  4007ff:	00 07                	add    %al,(%rdi)
  400801:	00 00                	add    %al,(%rax)
  400803:	00 0e                	add    %cl,(%rsi)
	...
  40080d:	00 00                	add    %al,(%rax)
  40080f:	00 78 15             	add    %bh,0x15(%rax)
  400812:	60                   	(bad)  
  400813:	00 00                	add    %al,(%rax)
  400815:	00 00                	add    %al,(%rax)
  400817:	00 07                	add    %al,(%rdi)
  400819:	00 00                	add    %al,(%rax)
  40081b:	00 0f                	add    %cl,(%rdi)
	...
  400825:	00 00                	add    %al,(%rax)
  400827:	00 80 15 60 00 00    	add    %al,0x6015(%rax)
  40082d:	00 00                	add    %al,(%rax)
  40082f:	00 07                	add    %al,(%rdi)
  400831:	00 00                	add    %al,(%rax)
  400833:	00 10                	add    %dl,(%rax)
	...
  40083d:	00 00                	add    %al,(%rax)
  40083f:	00 88 15 60 00 00    	add    %cl,0x6015(%rax)
  400845:	00 00                	add    %al,(%rax)
  400847:	00 07                	add    %al,(%rdi)
  400849:	00 00                	add    %al,(%rax)
  40084b:	00 11                	add    %dl,(%rcx)
	...

Disassembly of section .init:

0000000000400858 <_init>:
  400858:	48 83 ec 08          	sub    $0x8,%rsp
  40085c:	e8 1b 01 00 00       	callq  40097c <call_gmon_start>
  400861:	e8 7a 01 00 00       	callq  4009e0 <frame_dummy>
  400866:	e8 19 07 00 00       	callq  400f84 <__do_global_ctors_aux>
  40086b:	48 83 c4 08          	add    $0x8,%rsp
  40086f:	c3                   	retq   

Disassembly of section .plt:

0000000000400870 <std::ostream::operator<<(double)@plt-0x10>:
  400870:	ff 35 a2 0c 20 00    	pushq  0x200ca2(%rip)        # 601518 <_GLOBAL_OFFSET_TABLE_+0x8>
  400876:	ff 25 a4 0c 20 00    	jmpq   *0x200ca4(%rip)        # 601520 <_GLOBAL_OFFSET_TABLE_+0x10>
  40087c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400880 <std::ostream::operator<<(double)@plt>:
  400880:	ff 25 a2 0c 20 00    	jmpq   *0x200ca2(%rip)        # 601528 <_GLOBAL_OFFSET_TABLE_+0x18>
  400886:	68 00 00 00 00       	pushq  $0x0
  40088b:	e9 e0 ff ff ff       	jmpq   400870 <_init+0x18>

0000000000400890 <std::__throw_bad_cast()@plt>:
  400890:	ff 25 9a 0c 20 00    	jmpq   *0x200c9a(%rip)        # 601530 <_GLOBAL_OFFSET_TABLE_+0x20>
  400896:	68 01 00 00 00       	pushq  $0x1
  40089b:	e9 d0 ff ff ff       	jmpq   400870 <_init+0x18>

00000000004008a0 <std::ctype<char>::_M_widen_init() const@plt>:
  4008a0:	ff 25 92 0c 20 00    	jmpq   *0x200c92(%rip)        # 601538 <_GLOBAL_OFFSET_TABLE_+0x28>
  4008a6:	68 02 00 00 00       	pushq  $0x2
  4008ab:	e9 c0 ff ff ff       	jmpq   400870 <_init+0x18>

00000000004008b0 <std::ios_base::Init::Init()@plt>:
  4008b0:	ff 25 8a 0c 20 00    	jmpq   *0x200c8a(%rip)        # 601540 <_GLOBAL_OFFSET_TABLE_+0x30>
  4008b6:	68 03 00 00 00       	pushq  $0x3
  4008bb:	e9 b0 ff ff ff       	jmpq   400870 <_init+0x18>

00000000004008c0 <std::ostream::operator<<(long double)@plt>:
  4008c0:	ff 25 82 0c 20 00    	jmpq   *0x200c82(%rip)        # 601548 <_GLOBAL_OFFSET_TABLE_+0x38>
  4008c6:	68 04 00 00 00       	pushq  $0x4
  4008cb:	e9 a0 ff ff ff       	jmpq   400870 <_init+0x18>

00000000004008d0 <__libc_start_main@plt>:
  4008d0:	ff 25 7a 0c 20 00    	jmpq   *0x200c7a(%rip)        # 601550 <_GLOBAL_OFFSET_TABLE_+0x40>
  4008d6:	68 05 00 00 00       	pushq  $0x5
  4008db:	e9 90 ff ff ff       	jmpq   400870 <_init+0x18>

00000000004008e0 <std::ios_base::Init::~Init()@plt>:
  4008e0:	ff 25 72 0c 20 00    	jmpq   *0x200c72(%rip)        # 601558 <_GLOBAL_OFFSET_TABLE_+0x48>
  4008e6:	68 06 00 00 00       	pushq  $0x6
  4008eb:	e9 80 ff ff ff       	jmpq   400870 <_init+0x18>

00000000004008f0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>:
  4008f0:	ff 25 6a 0c 20 00    	jmpq   *0x200c6a(%rip)        # 601560 <_GLOBAL_OFFSET_TABLE_+0x50>
  4008f6:	68 07 00 00 00       	pushq  $0x7
  4008fb:	e9 70 ff ff ff       	jmpq   400870 <_init+0x18>

0000000000400900 <__cxa_atexit@plt>:
  400900:	ff 25 62 0c 20 00    	jmpq   *0x200c62(%rip)        # 601568 <_GLOBAL_OFFSET_TABLE_+0x58>
  400906:	68 08 00 00 00       	pushq  $0x8
  40090b:	e9 60 ff ff ff       	jmpq   400870 <_init+0x18>

0000000000400910 <std::ostream::operator<<(float)@plt>:
  400910:	ff 25 5a 0c 20 00    	jmpq   *0x200c5a(%rip)        # 601570 <_GLOBAL_OFFSET_TABLE_+0x60>
  400916:	68 09 00 00 00       	pushq  $0x9
  40091b:	e9 50 ff ff ff       	jmpq   400870 <_init+0x18>

0000000000400920 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>:
  400920:	ff 25 52 0c 20 00    	jmpq   *0x200c52(%rip)        # 601578 <_GLOBAL_OFFSET_TABLE_+0x68>
  400926:	68 0a 00 00 00       	pushq  $0xa
  40092b:	e9 40 ff ff ff       	jmpq   400870 <_init+0x18>

0000000000400930 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>:
  400930:	ff 25 4a 0c 20 00    	jmpq   *0x200c4a(%rip)        # 601580 <_GLOBAL_OFFSET_TABLE_+0x70>
  400936:	68 0b 00 00 00       	pushq  $0xb
  40093b:	e9 30 ff ff ff       	jmpq   400870 <_init+0x18>

0000000000400940 <__gxx_personality_v0@plt>:
  400940:	ff 25 42 0c 20 00    	jmpq   *0x200c42(%rip)        # 601588 <_GLOBAL_OFFSET_TABLE_+0x78>
  400946:	68 0c 00 00 00       	pushq  $0xc
  40094b:	e9 20 ff ff ff       	jmpq   400870 <_init+0x18>

Disassembly of section .text:

0000000000400950 <_start>:
  400950:	31 ed                	xor    %ebp,%ebp
  400952:	49 89 d1             	mov    %rdx,%r9
  400955:	5e                   	pop    %rsi
  400956:	48 89 e2             	mov    %rsp,%rdx
  400959:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40095d:	50                   	push   %rax
  40095e:	54                   	push   %rsp
  40095f:	49 c7 c0 80 0f 40 00 	mov    $0x400f80,%r8
  400966:	48 c7 c1 20 0f 40 00 	mov    $0x400f20,%rcx
  40096d:	48 c7 c7 04 0a 40 00 	mov    $0x400a04,%rdi
  400974:	e8 57 ff ff ff       	callq  4008d0 <__libc_start_main@plt>
  400979:	f4                   	hlt    
  40097a:	66 90                	xchg   %ax,%ax

000000000040097c <call_gmon_start>:
  40097c:	48 83 ec 08          	sub    $0x8,%rsp
  400980:	48 8b 05 81 0b 20 00 	mov    0x200b81(%rip),%rax        # 601508 <_DYNAMIC+0x1d0>
  400987:	48 85 c0             	test   %rax,%rax
  40098a:	74 02                	je     40098e <call_gmon_start+0x12>
  40098c:	ff d0                	callq  *%rax
  40098e:	48 83 c4 08          	add    $0x8,%rsp
  400992:	c3                   	retq   
  400993:	90                   	nop

0000000000400994 <__do_global_dtors_aux>:
  400994:	55                   	push   %rbp
  400995:	48 89 e5             	mov    %rsp,%rbp
  400998:	53                   	push   %rbx
  400999:	52                   	push   %rdx
  40099a:	80 3d 0f 0d 20 00 00 	cmpb   $0x0,0x200d0f(%rip)        # 6016b0 <completed.5565>
  4009a1:	75 39                	jne    4009dc <__do_global_dtors_aux+0x48>
  4009a3:	b8 28 13 60 00       	mov    $0x601328,%eax
  4009a8:	48 2d 20 13 60 00    	sub    $0x601320,%rax
  4009ae:	48 c1 f8 03          	sar    $0x3,%rax
  4009b2:	48 8d 58 ff          	lea    -0x1(%rax),%rbx
  4009b6:	eb 11                	jmp    4009c9 <__do_global_dtors_aux+0x35>
  4009b8:	48 ff c2             	inc    %rdx
  4009bb:	48 89 15 f6 0c 20 00 	mov    %rdx,0x200cf6(%rip)        # 6016b8 <dtor_idx.5567>
  4009c2:	ff 14 d5 20 13 60 00 	callq  *0x601320(,%rdx,8)
  4009c9:	48 8b 15 e8 0c 20 00 	mov    0x200ce8(%rip),%rdx        # 6016b8 <dtor_idx.5567>
  4009d0:	48 39 da             	cmp    %rbx,%rdx
  4009d3:	72 e3                	jb     4009b8 <__do_global_dtors_aux+0x24>
  4009d5:	c6 05 d4 0c 20 00 01 	movb   $0x1,0x200cd4(%rip)        # 6016b0 <completed.5565>
  4009dc:	58                   	pop    %rax
  4009dd:	5b                   	pop    %rbx
  4009de:	5d                   	pop    %rbp
  4009df:	c3                   	retq   

00000000004009e0 <frame_dummy>:
  4009e0:	55                   	push   %rbp
  4009e1:	48 83 3d 47 09 20 00 	cmpq   $0x0,0x200947(%rip)        # 601330 <__JCR_END__>
  4009e8:	00 
  4009e9:	48 89 e5             	mov    %rsp,%rbp
  4009ec:	74 12                	je     400a00 <frame_dummy+0x20>
  4009ee:	b8 00 00 00 00       	mov    $0x0,%eax
  4009f3:	48 85 c0             	test   %rax,%rax
  4009f6:	74 08                	je     400a00 <frame_dummy+0x20>
  4009f8:	5d                   	pop    %rbp
  4009f9:	bf 30 13 60 00       	mov    $0x601330,%edi
  4009fe:	ff e0                	jmpq   *%rax
  400a00:	5d                   	pop    %rbp
  400a01:	c3                   	retq   
  400a02:	66 90                	xchg   %ax,%ax

0000000000400a04 <main>:
  400a04:	55                   	push   %rbp
  400a05:	48 89 e5             	mov    %rsp,%rbp
  400a08:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
  400a0f:	48 c7 c0 e8 ff ff ff 	mov    $0xffffffffffffffe8,%rax
  400a16:	48 03 05 83 0b 20 00 	add    0x200b83(%rip),%rax        # 6015a0 <__bss_start>
  400a1d:	ba a0 15 60 00       	mov    $0x6015a0,%edx
  400a22:	48 03 10             	add    (%rax),%rdx
  400a25:	b8 c8 00 00 00       	mov    $0xc8,%eax
  400a2a:	48 89 d7             	mov    %rdx,%rdi
  400a2d:	48 89 c6             	mov    %rax,%rsi
  400a30:	e8 0f 04 00 00       	callq  400e44 <std::ios_base::precision(long)>
  400a35:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  400a3c:	b8 01 00 00 00       	mov    $0x1,%eax
  400a41:	c5 f8 92 c8          	kmov   %eax,%k1
  400a45:	62 f2 79 09 18 05 21 	vbroadcastss 0x621(%rip),%zmm0{%k1}        # 401070 <_IO_stdin_used+0xb0>
  400a4c:	06 00 00 
  400a4f:	b8 01 00 00 00       	mov    $0x1,%eax
  400a54:	c5 f8 92 c8          	kmov   %eax,%k1
  400a58:	62 f2 79 09 d1 45 f8 	vpackstorelps %zmm0,-0x20(%rbp){%k1}
  400a5f:	b8 01 00 00 00       	mov    $0x1,%eax
  400a64:	c5 f8 92 c8          	kmov   %eax,%k1
  400a68:	62 f2 79 09 18 05 02 	vbroadcastss 0x602(%rip),%zmm0{%k1}        # 401074 <_IO_stdin_used+0xb4>
  400a6f:	06 00 00 
  400a72:	b8 01 00 00 00       	mov    $0x1,%eax
  400a77:	c5 f8 92 c8          	kmov   %eax,%k1
  400a7b:	62 f2 79 09 d1 45 f9 	vpackstorelps %zmm0,-0x1c(%rbp){%k1}
  400a82:	b8 a0 15 60 00       	mov    $0x6015a0,%eax
  400a87:	ba 80 10 40 00       	mov    $0x401080,%edx
  400a8c:	48 89 c7             	mov    %rax,%rdi
  400a8f:	48 89 d6             	mov    %rdx,%rsi
  400a92:	e8 59 fe ff ff       	callq  4008f0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
  400a97:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  400a9e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  400aa5:	ba 01 00 00 00       	mov    $0x1,%edx
  400aaa:	c5 f8 92 ca          	kmov   %edx,%k1
  400aae:	62 f2 79 09 18 45 f8 	vbroadcastss -0x20(%rbp),%zmm0{%k1}
  400ab5:	ba 01 00 00 00       	mov    $0x1,%edx
  400aba:	c5 f8 92 ca          	kmov   %edx,%k1
  400abe:	62 f2 79 09 18 4d f9 	vbroadcastss -0x1c(%rbp),%zmm1{%k1}
  400ac5:	ba 01 00 00 00       	mov    $0x1,%edx
  400aca:	c5 f8 92 ca          	kmov   %edx,%k1
  400ace:	62 f2 79 08 5a 1d 68 	vbroadcasti32x4 0x568(%rip),%zmm3        # 401040 <_IO_stdin_used+0x80>
  400ad5:	05 00 00 
  400ad8:	62 f1 59 08 ef e4    	vpxord %zmm4,%zmm4,%zmm4
  400ade:	62 f2 79 08 58 2d 90 	vpbroadcastd 0x590(%rip),%zmm5        # 401078 <_IO_stdin_used+0xb8>
  400ae5:	05 00 00 
  400ae8:	62 f2 71 09 55 e5    	vfixupnanps %zmm5,%zmm1,%zmm4{%k1}
  400aee:	62 f2 79 09 55 e5    	vfixupnanps %zmm5,%zmm0,%zmm4{%k1}
  400af4:	62 f1 58 09 c2 d4 00 	vcmpeqps %zmm4,%zmm4,%k2{%k1}
  400afb:	c5 f8 90 da          	kmov   %k2,%k3
  400aff:	c5 f8 42 d9          	kandn  %k1,%k3
  400b03:	62 f3 79 09 26 e1 00 	vgetmantps $0x0,%zmm1,%zmm4{%k1}
  400b0a:	62 f2 79 09 ca ec    	vrcp23ps %zmm4,%zmm5{%k1}
  400b10:	62 f1 78 48 28 db    	vmovaps %zmm3{aaaa},%zmm3
  400b16:	62 f2 51 c9 ac e3    	vfnmadd213ps {rn-sae},%zmm3,%zmm5,%zmm4{%k1}
  400b1c:	62 f2 59 c9 a8 ed    	vfmadd213ps {rn-sae},%zmm5,%zmm4,%zmm5{%k1}
  400b22:	62 f2 79 09 42 d9    	vgetexpps %zmm1,%zmm3{%k1}
  400b28:	62 f2 79 09 42 e0    	vgetexpps %zmm0,%zmm4{%k1}
  400b2e:	62 f1 58 09 5c f3    	vsubps %zmm3,%zmm4,%zmm6{%k1}
  400b34:	62 f3 79 09 cb de 00 	vcvtfxpntps2dq $0x0,%zmm6,%zmm3{%k1}
  400b3b:	62 f3 79 09 26 e0 00 	vgetmantps $0x0,%zmm0,%zmm4{%k1}
  400b42:	62 f1 58 ca 59 f5    	vmulps {rn-sae},%zmm5,%zmm4,%zmm6{%k2}
  400b48:	62 f2 79 08 58 25 2a 	vpbroadcastd 0x52a(%rip),%zmm4        # 40107c <_IO_stdin_used+0xbc>
  400b4f:	05 00 00 
  400b52:	62 f2 71 09 55 cc    	vfixupnanps %zmm4,%zmm1,%zmm1{%k1}
  400b58:	62 f1 78 cb 59 f1    	vmulps {rn-sae},%zmm1,%zmm0,%zmm6{%k3}
  400b5e:	62 f2 49 8a 84 f3    	vscaleps {rn},%zmm3,%zmm6,%zmm6{%k2}
  400b64:	62 f1 78 09 28 d6    	vmovaps %zmm6,%zmm2{%k1}
  400b6a:	48 89 c7             	mov    %rax,%rdi
  400b6d:	62 f1 78 08 28 c2    	vmovaps %zmm2,%zmm0
  400b73:	e8 98 fd ff ff       	callq  400910 <std::ostream::operator<<(float)@plt>
  400b78:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  400b7c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  400b80:	ba 30 09 40 00       	mov    $0x400930,%edx
  400b85:	48 89 c7             	mov    %rax,%rdi
  400b88:	48 89 d6             	mov    %rdx,%rsi
  400b8b:	e8 90 fd ff ff       	callq  400920 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>
  400b90:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  400b94:	b8 01 00 00 00       	mov    $0x1,%eax
  400b99:	c5 f8 92 c8          	kmov   %eax,%k1
  400b9d:	62 f2 f9 09 19 05 b9 	vbroadcastsd 0x4b9(%rip),%zmm0{%k1}        # 401060 <_IO_stdin_used+0xa0>
  400ba4:	04 00 00 
  400ba7:	b8 01 00 00 00       	mov    $0x1,%eax
  400bac:	c5 f8 92 c8          	kmov   %eax,%k1
  400bb0:	62 f2 f9 09 d1 45 fd 	vpackstorelpd %zmm0,-0x18(%rbp){%k1}
  400bb7:	b8 01 00 00 00       	mov    $0x1,%eax
  400bbc:	c5 f8 92 c8          	kmov   %eax,%k1
  400bc0:	62 f2 f9 09 19 05 9e 	vbroadcastsd 0x49e(%rip),%zmm0{%k1}        # 401068 <_IO_stdin_used+0xa8>
  400bc7:	04 00 00 
  400bca:	b8 01 00 00 00       	mov    $0x1,%eax
  400bcf:	c5 f8 92 c8          	kmov   %eax,%k1
  400bd3:	62 f2 f9 09 d1 45 fe 	vpackstorelpd %zmm0,-0x10(%rbp){%k1}
  400bda:	b8 a0 15 60 00       	mov    $0x6015a0,%eax
  400bdf:	ba 94 10 40 00       	mov    $0x401094,%edx
  400be4:	48 89 c7             	mov    %rax,%rdi
  400be7:	48 89 d6             	mov    %rdx,%rsi
  400bea:	e8 01 fd ff ff       	callq  4008f0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
  400bef:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  400bf3:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  400bf7:	ba 01 00 00 00       	mov    $0x1,%edx
  400bfc:	c5 f8 92 ca          	kmov   %edx,%k1
  400c00:	62 f2 f9 09 19 45 fd 	vbroadcastsd -0x18(%rbp),%zmm0{%k1}
  400c07:	ba 01 00 00 00       	mov    $0x1,%edx
  400c0c:	c5 f8 92 ca          	kmov   %edx,%k1
  400c10:	62 f2 f9 09 19 4d fe 	vbroadcastsd -0x10(%rbp),%zmm1{%k1}
  400c17:	ba 01 00 00 00       	mov    $0x1,%edx
  400c1c:	c5 f8 92 ca          	kmov   %edx,%k1
  400c20:	62 f2 f9 08 5b 1d b6 	vbroadcasti64x4 0x3b6(%rip),%zmm3        # 400fe0 <_IO_stdin_used+0x20>
  400c27:	03 00 00 
  400c2a:	62 f2 f9 08 5b 25 cc 	vbroadcasti64x4 0x3cc(%rip),%zmm4        # 401000 <_IO_stdin_used+0x40>
  400c31:	03 00 00 
  400c34:	62 f2 79 08 5a 2d 12 	vbroadcasti32x4 0x412(%rip),%zmm5        # 401050 <_IO_stdin_used+0x90>
  400c3b:	04 00 00 
  400c3e:	62 f1 49 08 ef f6    	vpxord %zmm6,%zmm6,%zmm6
  400c44:	62 f2 79 08 58 3d 2a 	vpbroadcastd 0x42a(%rip),%zmm7        # 401078 <_IO_stdin_used+0xb8>
  400c4b:	04 00 00 
  400c4e:	62 f2 f1 09 55 f7    	vfixupnanpd %zmm7,%zmm1,%zmm6{%k1}
  400c54:	62 f2 f9 09 55 f7    	vfixupnanpd %zmm7,%zmm0,%zmm6{%k1}
  400c5a:	62 f1 c9 09 c2 d6 00 	vcmpeqpd %zmm6,%zmm6,%k2{%k1}
  400c61:	c5 f8 90 da          	kmov   %k2,%k3
  400c65:	c5 f8 42 d9          	kandn  %k1,%k3
  400c69:	62 f3 f9 09 26 f1 00 	vgetmantpd $0x0,%zmm1,%zmm6{%k1}
  400c70:	62 f1 f9 f9 5a fe    	vcvtpd2ps {rz-sae},%zmm6,%zmm7{%k1}
  400c76:	62 72 79 09 ca c7    	vrcp23ps %zmm7,%zmm8{%k1}
  400c7c:	62 d1 78 09 5a f8    	vcvtps2pd %ymm8,%zmm7{%k1}
  400c82:	62 71 f9 58 28 c3    	vmovapd %zmm3{bbbb},%zmm8
  400c88:	62 d2 c1 c9 ac f0    	vfnmadd213pd {rn-sae},%zmm8,%zmm7,%zmm6{%k1}
  400c8e:	62 f2 c9 c9 b8 f6    	vfmadd231pd {rn-sae},%zmm6,%zmm6,%zmm6{%k1}
  400c94:	62 f2 c9 c9 b8 ff    	vfmadd231pd {rn-sae},%zmm7,%zmm6,%zmm7{%k1}
  400c9a:	62 f2 f9 09 42 f1    	vgetexppd %zmm1,%zmm6{%k1}
  400ca0:	62 72 f9 09 42 c0    	vgetexppd %zmm0,%zmm8{%k1}
  400ca6:	62 71 b9 09 5c ce    	vsubpd %zmm6,%zmm8,%zmm9{%k1}
  400cac:	62 f1 79 48 6f f5    	vmovdqa32 %zmm5{aaaa},%zmm6
  400cb2:	62 f2 31 08 39 f6    	vpminsd %zmm6,%zmm9,%zmm6
  400cb8:	62 f1 79 58 6f ed    	vmovdqa32 %zmm5{bbbb},%zmm5
  400cbe:	62 f2 49 08 3b ed    	vpminud %zmm5,%zmm6,%zmm5
  400cc4:	62 f1 f9 68 28 f3    	vmovapd %zmm3{cccc},%zmm6
  400cca:	62 f1 d1 09 58 ee    	vaddpd %zmm6,%zmm5,%zmm5{%k1}
  400cd0:	62 f1 51 08 72 f5 14 	vpslld $0x14,%zmm5,%zmm5
  400cd7:	62 f1 49 08 72 e5 01 	vpsrad $0x1,%zmm5,%zmm6
  400cde:	62 f1 f9 48 6f e4    	vmovdqa64 %zmm4{aaaa},%zmm4
  400ce4:	62 f1 c9 09 db f4    	vpandq %zmm4,%zmm6,%zmm6{%k1}
  400cea:	62 f1 51 08 fa e6    	vpsubd %zmm6,%zmm5,%zmm4
  400cf0:	62 f1 f9 58 6f eb    	vmovdqa64 %zmm3{bbbb},%zmm5
  400cf6:	62 f1 59 08 fe e5    	vpaddd %zmm5,%zmm4,%zmm4
  400cfc:	62 f1 f9 48 6f db    	vmovdqa64 %zmm3{aaaa},%zmm3
  400d02:	62 f1 d9 09 db e3    	vpandq %zmm3,%zmm4,%zmm4{%k1}
  400d08:	62 f3 f9 09 26 d8 00 	vgetmantpd $0x0,%zmm0,%zmm3{%k1}
  400d0f:	62 f1 e1 ca 59 ef    	vmulpd {rn-sae},%zmm7,%zmm3,%zmm5{%k2}
  400d15:	62 f2 79 08 58 1d 5d 	vpbroadcastd 0x35d(%rip),%zmm3        # 40107c <_IO_stdin_used+0xbc>
  400d1c:	03 00 00 
  400d1f:	62 f2 f1 09 55 cb    	vfixupnanpd %zmm3,%zmm1,%zmm1{%k1}
  400d25:	62 f1 f9 cb 59 e9    	vmulpd {rn-sae},%zmm1,%zmm0,%zmm5{%k3}
  400d2b:	62 f1 51 08 fe c6    	vpaddd %zmm6,%zmm5,%zmm0
  400d31:	62 f1 f9 8a 59 ec    	vmulpd {rn},%zmm4,%zmm0,%zmm5{%k2}
  400d37:	62 f1 f9 09 28 d5    	vmovapd %zmm5,%zmm2{%k1}
  400d3d:	48 89 c7             	mov    %rax,%rdi
  400d40:	62 f1 f9 08 28 c2    	vmovapd %zmm2,%zmm0
  400d46:	e8 35 fb ff ff       	callq  400880 <std::ostream::operator<<(double)@plt>
  400d4b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  400d4f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  400d53:	ba 30 09 40 00       	mov    $0x400930,%edx
  400d58:	48 89 c7             	mov    %rax,%rdi
  400d5b:	48 89 d6             	mov    %rdx,%rsi
  400d5e:	e8 bd fb ff ff       	callq  400920 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>
  400d63:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  400d67:	db 2d b3 02 00 00    	fldt   0x2b3(%rip)        # 401020 <_IO_stdin_used+0x60>
  400d6d:	db 7d c0             	fstpt  -0x40(%rbp)
  400d70:	db 2d ba 02 00 00    	fldt   0x2ba(%rip)        # 401030 <_IO_stdin_used+0x70>
  400d76:	db 7d d0             	fstpt  -0x30(%rbp)
  400d79:	b8 a0 15 60 00       	mov    $0x6015a0,%eax
  400d7e:	ba a8 10 40 00       	mov    $0x4010a8,%edx
  400d83:	48 89 c7             	mov    %rax,%rdi
  400d86:	48 89 d6             	mov    %rdx,%rsi
  400d89:	e8 62 fb ff ff       	callq  4008f0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
  400d8e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  400d92:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
  400d96:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  400d9a:	db 6d c0             	fldt   -0x40(%rbp)
  400d9d:	db 6d d0             	fldt   -0x30(%rbp)
  400da0:	de f9                	fdivrp %st,%st(1)
  400da2:	db 3c 24             	fstpt  (%rsp)
  400da5:	48 89 c7             	mov    %rax,%rdi
  400da8:	e8 13 fb ff ff       	callq  4008c0 <std::ostream::operator<<(long double)@plt>
  400dad:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  400db1:	48 83 c4 10          	add    $0x10,%rsp
  400db5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  400db9:	ba 30 09 40 00       	mov    $0x400930,%edx
  400dbe:	48 89 c7             	mov    %rax,%rdi
  400dc1:	48 89 d6             	mov    %rdx,%rsi
  400dc4:	e8 57 fb ff ff       	callq  400920 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>
  400dc9:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  400dcd:	b8 00 00 00 00       	mov    $0x0,%eax
  400dd2:	c9                   	leaveq 
  400dd3:	c3                   	retq   

0000000000400dd4 <__sti__$E>:
  400dd4:	55                   	push   %rbp
  400dd5:	48 89 e5             	mov    %rsp,%rbp
  400dd8:	48 83 ec 10          	sub    $0x10,%rsp
  400ddc:	b8 c0 16 60 00       	mov    $0x6016c0,%eax
  400de1:	48 89 c7             	mov    %rax,%rdi
  400de4:	e8 c7 fa ff ff       	callq  4008b0 <std::ios_base::Init::Init()@plt>
  400de9:	b8 e0 08 40 00       	mov    $0x4008e0,%eax
  400dee:	ba c0 16 60 00       	mov    $0x6016c0,%edx
  400df3:	b9 98 15 60 00       	mov    $0x601598,%ecx
  400df8:	48 89 c7             	mov    %rax,%rdi
  400dfb:	48 89 d6             	mov    %rdx,%rsi
  400dfe:	48 89 ca             	mov    %rcx,%rdx
  400e01:	e8 fa fa ff ff       	callq  400900 <__cxa_atexit@plt>
  400e06:	89 45 f0             	mov    %eax,-0x10(%rbp)
  400e09:	c9                   	leaveq 
  400e0a:	c3                   	retq   
  400e0b:	90                   	nop

0000000000400e0c <std::char_traits<char>::length(char const*)>:
  400e0c:	55                   	push   %rbp
  400e0d:	48 89 e5             	mov    %rsp,%rbp
  400e10:	48 83 ec 10          	sub    $0x10,%rsp
  400e14:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  400e18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400e1c:	48 89 c1             	mov    %rax,%rcx
  400e1f:	33 c0                	xor    %eax,%eax
  400e21:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
  400e25:	85 d2                	test   %edx,%edx
  400e27:	74 10                	je     400e39 <std::char_traits<char>::length(char const*)+0x2d>
  400e29:	0f b6 54 01 01       	movzbl 0x1(%rcx,%rax,1),%edx
  400e2e:	48 83 c0 02          	add    $0x2,%rax
  400e32:	85 d2                	test   %edx,%edx
  400e34:	75 eb                	jne    400e21 <std::char_traits<char>::length(char const*)+0x15>
  400e36:	48 ff c8             	dec    %rax
  400e39:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400e3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400e41:	c9                   	leaveq 
  400e42:	c3                   	retq   
  400e43:	90                   	nop

0000000000400e44 <std::ios_base::precision(long)>:
  400e44:	55                   	push   %rbp
  400e45:	48 89 e5             	mov    %rsp,%rbp
  400e48:	48 83 ec 20          	sub    $0x20,%rsp
  400e4c:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  400e50:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  400e54:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400e58:	48 8b 40 08          	mov    0x8(%rax),%rax
  400e5c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400e60:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400e64:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  400e68:	48 89 50 08          	mov    %rdx,0x8(%rax)
  400e6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400e70:	c9                   	leaveq 
  400e71:	c3                   	retq   
  400e72:	90                   	nop
  400e73:	90                   	nop

0000000000400e74 <std::ctype<char>::widen(char) const>:
  400e74:	55                   	push   %rbp
  400e75:	48 89 e5             	mov    %rsp,%rbp
  400e78:	48 83 ec 20          	sub    $0x20,%rsp
  400e7c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  400e80:	40 88 75 f0          	mov    %sil,-0x10(%rbp)
  400e84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400e88:	0f be 40 38          	movsbl 0x38(%rax),%eax
  400e8c:	48 0f be c0          	movsbq %al,%rax
  400e90:	85 c0                	test   %eax,%eax
  400e92:	74 18                	je     400eac <std::ctype<char>::widen(char) const+0x38>
  400e94:	0f be 45 f0          	movsbl -0x10(%rbp),%eax
  400e98:	48 0f be c0          	movsbq %al,%rax
  400e9c:	0f b6 c0             	movzbl %al,%eax
  400e9f:	48 03 45 e8          	add    -0x18(%rbp),%rax
  400ea3:	48 83 c0 39          	add    $0x39,%rax
  400ea7:	0f be 00             	movsbl (%rax),%eax
  400eaa:	c9                   	leaveq 
  400eab:	c3                   	retq   
  400eac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400eb0:	48 89 c7             	mov    %rax,%rdi
  400eb3:	e8 e8 f9 ff ff       	callq  4008a0 <std::ctype<char>::_M_widen_init() const@plt>
  400eb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400ebc:	ba 06 00 00 00       	mov    $0x6,%edx
  400ec1:	48 63 d2             	movslq %edx,%rdx
  400ec4:	48 6b d2 08          	imul   $0x8,%rdx,%rdx
  400ec8:	48 03 10             	add    (%rax),%rdx
  400ecb:	48 8b 02             	mov    (%rdx),%rax
  400ece:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  400ed2:	0f be 4d f0          	movsbl -0x10(%rbp),%ecx
  400ed6:	48 89 d7             	mov    %rdx,%rdi
  400ed9:	89 ce                	mov    %ecx,%esi
  400edb:	ff d0                	callq  *%rax
  400edd:	88 45 e0             	mov    %al,-0x20(%rbp)
  400ee0:	0f be 45 e0          	movsbl -0x20(%rbp),%eax
  400ee4:	c9                   	leaveq 
  400ee5:	c3                   	retq   
  400ee6:	90                   	nop
  400ee7:	90                   	nop

0000000000400ee8 <std::operator|(std::_Ios_Iostate, std::_Ios_Iostate)>:
  400ee8:	55                   	push   %rbp
  400ee9:	48 89 e5             	mov    %rsp,%rbp
  400eec:	48 83 ec 10          	sub    $0x10,%rsp
  400ef0:	89 7d f0             	mov    %edi,-0x10(%rbp)
  400ef3:	89 75 f8             	mov    %esi,-0x8(%rbp)
  400ef6:	8b 45 f8             	mov    -0x8(%rbp),%eax
  400ef9:	0b 45 f0             	or     -0x10(%rbp),%eax
  400efc:	c9                   	leaveq 
  400efd:	c3                   	retq   
  400efe:	90                   	nop
  400eff:	90                   	nop

0000000000400f00 <std::ctype<char> const& std::__check_facet<std::ctype<char> >(std::ctype<char> const*)>:
  400f00:	55                   	push   %rbp
  400f01:	48 89 e5             	mov    %rsp,%rbp
  400f04:	48 83 ec 10          	sub    $0x10,%rsp
  400f08:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  400f0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400f10:	48 85 c0             	test   %rax,%rax
  400f13:	75 05                	jne    400f1a <std::ctype<char> const& std::__check_facet<std::ctype<char> >(std::ctype<char> const*)+0x1a>
  400f15:	e8 76 f9 ff ff       	callq  400890 <std::__throw_bad_cast()@plt>
  400f1a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400f1e:	c9                   	leaveq 
  400f1f:	c3                   	retq   

0000000000400f20 <__libc_csu_init>:
  400f20:	41 57                	push   %r15
  400f22:	4c 8d 3d db 03 20 00 	lea    0x2003db(%rip),%r15        # 601304 <__init_array_end>
  400f29:	41 56                	push   %r14
  400f2b:	49 89 d6             	mov    %rdx,%r14
  400f2e:	41 55                	push   %r13
  400f30:	49 89 f5             	mov    %rsi,%r13
  400f33:	41 54                	push   %r12
  400f35:	41 89 fc             	mov    %edi,%r12d
  400f38:	55                   	push   %rbp
  400f39:	48 8d 2d c4 03 20 00 	lea    0x2003c4(%rip),%rbp        # 601304 <__init_array_end>
  400f40:	53                   	push   %rbx
  400f41:	49 29 ef             	sub    %rbp,%r15
  400f44:	51                   	push   %rcx
  400f45:	e8 0e f9 ff ff       	callq  400858 <_init>
  400f4a:	49 c1 ff 03          	sar    $0x3,%r15
  400f4e:	74 1d                	je     400f6d <__libc_csu_init+0x4d>
  400f50:	31 db                	xor    %ebx,%ebx
  400f52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400f58:	4c 89 f2             	mov    %r14,%rdx
  400f5b:	4c 89 ee             	mov    %r13,%rsi
  400f5e:	44 89 e7             	mov    %r12d,%edi
  400f61:	ff 54 dd 00          	callq  *0x0(%rbp,%rbx,8)
  400f65:	48 ff c3             	inc    %rbx
  400f68:	4c 39 fb             	cmp    %r15,%rbx
  400f6b:	75 eb                	jne    400f58 <__libc_csu_init+0x38>
  400f6d:	58                   	pop    %rax
  400f6e:	5b                   	pop    %rbx
  400f6f:	5d                   	pop    %rbp
  400f70:	41 5c                	pop    %r12
  400f72:	41 5d                	pop    %r13
  400f74:	41 5e                	pop    %r14
  400f76:	41 5f                	pop    %r15
  400f78:	c3                   	retq   
  400f79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400f80 <__libc_csu_fini>:
  400f80:	c3                   	retq   
  400f81:	66 90                	xchg   %ax,%ax
  400f83:	90                   	nop

0000000000400f84 <__do_global_ctors_aux>:
  400f84:	55                   	push   %rbp
  400f85:	48 89 e5             	mov    %rsp,%rbp
  400f88:	53                   	push   %rbx
  400f89:	bb 10 13 60 00       	mov    $0x601310,%ebx
  400f8e:	52                   	push   %rdx
  400f8f:	eb 06                	jmp    400f97 <__do_global_ctors_aux+0x13>
  400f91:	48 83 eb 08          	sub    $0x8,%rbx
  400f95:	ff d0                	callq  *%rax
  400f97:	48 8b 03             	mov    (%rbx),%rax
  400f9a:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  400f9e:	75 f1                	jne    400f91 <__do_global_ctors_aux+0xd>
  400fa0:	58                   	pop    %rax
  400fa1:	5b                   	pop    %rbx
  400fa2:	5d                   	pop    %rbp
  400fa3:	c3                   	retq   

Disassembly of section .fini:

0000000000400fa4 <_fini>:
  400fa4:	48 83 ec 08          	sub    $0x8,%rsp
  400fa8:	e8 e7 f9 ff ff       	callq  400994 <__do_global_dtors_aux>
  400fad:	48 83 c4 08          	add    $0x8,%rsp
  400fb1:	c3                   	retq   

Disassembly of section .rodata:

0000000000400fc0 <_IO_stdin_used>:
  400fc0:	01 00                	add    %eax,(%rax)
  400fc2:	02 00                	add    (%rax),%al
	...
  400fe4:	00 00                	add    %al,(%rax)
  400fe6:	f0 7f 00             	lock jg 400fe9 <_IO_stdin_used+0x29>
  400fe9:	00 00                	add    %al,(%rax)
  400feb:	00 00                	add    %al,(%rax)
  400fed:	00 f0                	add    %dh,%al
  400fef:	3f                   	(bad)  
  400ff0:	00 00                	add    %al,(%rax)
  400ff2:	00 00                	add    %al,(%rax)
  400ff4:	00 00                	add    %al,(%rax)
  400ff6:	38 41 00             	cmp    %al,0x0(%rcx)
  400ff9:	00 00                	add    %al,(%rax)
  400ffb:	00 02                	add    %al,(%rdx)
  400ffd:	fc                   	cld    
  400ffe:	37                   	(bad)  
  400fff:	41 00 00             	add    %al,(%r8)
  401002:	00 00                	add    %al,(%rax)
  401004:	00 00                	add    %al,(%rax)
  401006:	f0 ff 01             	lock incl (%rcx)
  401009:	00 00                	add    %al,(%rax)
  40100b:	00 00                	add    %al,(%rax)
  40100d:	00 00                	add    %al,(%rax)
  40100f:	00 3e                	add    %bh,(%rsi)
  401011:	04 00                	add    $0x0,%al
	...
  40101f:	80 00 f8             	addb   $0xf8,(%rax)
  401022:	ff                   	(bad)  
  401023:	ff                   	(bad)  
  401024:	ff                   	(bad)  
  401025:	ff                   	(bad)  
  401026:	ff d7                	callq  *%rdi
  401028:	fd                   	std    
  401029:	3f                   	(bad)  
  40102a:	00 00                	add    %al,(%rax)
  40102c:	00 00                	add    %al,(%rax)
  40102e:	00 00                	add    %al,(%rax)
  401030:	00 a8 aa aa aa aa    	add    %ch,-0x55555556(%rax)
  401036:	aa                   	stos   %al,%es:(%rdi)
  401037:	aa                   	stos   %al,%es:(%rdi)
  401038:	f6 3f                	idivb  (%rdi)
	...
  401042:	80 3f 00             	cmpb   $0x0,(%rdi)
  401045:	00 00                	add    %al,(%rax)
  401047:	80 00 00             	addb   $0x0,(%rax)
  40104a:	00 00                	add    %al,(%rax)
  40104c:	00 00                	add    %al,(%rax)
  40104e:	00 00                	add    %al,(%rax)
  401050:	00 08                	add    %cl,(%rax)
  401052:	90                   	nop
  401053:	40 00 d4             	add    %dl,%spl
  401056:	90                   	nop
  401057:	c0 00 00             	rolb   $0x0,(%rax)
  40105a:	e0 7f                	loopne 4010db <_IO_stdin_used+0x11b>
  40105c:	00 00                	add    %al,(%rax)
  40105e:	50                   	push   %rax
  40105f:	03 ff                	add    %edi,%edi
  401061:	ff                   	(bad)  
  401062:	ff                   	(bad)  
  401063:	ff                   	(bad)  
  401064:	ff                   	(bad)  
  401065:	ff da                	lcallq *<internal disassembler error>
  401067:	3f                   	(bad)  
  401068:	55                   	push   %rbp
  401069:	55                   	push   %rbp
  40106a:	55                   	push   %rbp
  40106b:	55                   	push   %rbp
  40106c:	55                   	push   %rbp
  40106d:	55                   	push   %rbp
  40106e:	65                   	gs
  40106f:	3f                   	(bad)  
  401070:	00 00                	add    %al,(%rax)
  401072:	d8 3e                	fdivrs (%rsi)
  401074:	ab                   	stos   %eax,%es:(%rdi)
  401075:	aa                   	stos   %al,%es:(%rdi)
  401076:	2a 3b                	sub    (%rbx),%bh
  401078:	45 8b 02             	mov    (%r10),%r8d
  40107b:	00 42 88             	add    %al,-0x78(%rdx)
  40107e:	01 00                	add    %eax,(%rax)
  401080:	66                   	data16
  401081:	6c                   	insb   (%dx),%es:(%rdi)
  401082:	6f                   	outsl  %ds:(%rsi),(%dx)
  401083:	61                   	(bad)  
  401084:	74 20                	je     4010a6 <_IO_stdin_used+0xe6>
  401086:	70 20                	jo     4010a8 <_IO_stdin_used+0xe8>
  401088:	2f                   	(bad)  
  401089:	20 63 20             	and    %ah,0x20(%rbx)
  40108c:	69 73 3a 20 00 00 00 	imul   $0x20,0x3a(%rbx),%esi
  401093:	00 64 6f 75          	add    %ah,0x75(%rdi,%rbp,2)
  401097:	62                   	(bad)  
  401098:	6c                   	insb   (%dx),%es:(%rdi)
  401099:	65 20 70 20          	and    %dh,%gs:0x20(%rax)
  40109d:	2f                   	(bad)  
  40109e:	20 63 20             	and    %ah,0x20(%rbx)
  4010a1:	69 73 3a 20 00 00 00 	imul   $0x20,0x3a(%rbx),%esi
  4010a8:	6c                   	insb   (%dx),%es:(%rdi)
  4010a9:	6f                   	outsl  %ds:(%rsi),(%dx)
  4010aa:	6e                   	outsb  %ds:(%rsi),(%dx)
  4010ab:	67 20 64 6f 75       	and    %ah,0x75(%edi,%ebp,2)
  4010b0:	62                   	(bad)  
  4010b1:	6c                   	insb   (%dx),%es:(%rdi)
  4010b2:	65 20 70 20          	and    %dh,%gs:0x20(%rax)
  4010b6:	2f                   	(bad)  
  4010b7:	20 63 20             	and    %ah,0x20(%rbx)
  4010ba:	69                   	.byte 0x69
  4010bb:	73 3a                	jae    4010f7 <_IO_stdin_used+0x137>
  4010bd:	20 00                	and    %al,(%rax)
	...

Disassembly of section .eh_frame_hdr:

00000000004010c0 <.eh_frame_hdr>:
  4010c0:	01 1b                	add    %ebx,(%rbx)
  4010c2:	03 3b                	add    (%rbx),%edi
  4010c4:	5c                   	pop    %rsp
  4010c5:	00 20                	add    %ah,(%rax)
  4010c7:	00 0a                	add    %cl,(%rdx)
  4010c9:	00 00                	add    %al,(%rax)
  4010cb:	00 b0 f7 ff ff 78    	add    %dh,0x78fffff7(%rax)
  4010d1:	00 20                	add    %ah,(%rax)
  4010d3:	00 44 f9 ff          	add    %al,-0x1(%rcx,%rdi,8)
  4010d7:	ff 90 01 20 00 14    	callq  *0x14002001(%rax)
  4010dd:	fd                   	std    
  4010de:	ff                   	(bad)  
  4010df:	ff                   	(bad)  
  4010e0:	b8 01 20 00 4c       	mov    $0x4c002001,%eax
  4010e5:	fd                   	std    
  4010e6:	ff                   	(bad)  
  4010e7:	ff c0                	inc    %eax
  4010e9:	00 20                	add    %ah,(%rax)
  4010eb:	00 84 fd ff ff e8 00 	add    %al,0xe8ffff(%rbp,%rdi,8)
  4010f2:	20 00                	and    %al,(%rax)
  4010f4:	b4 fd                	mov    $0xfd,%ah
  4010f6:	ff                   	(bad)  
  4010f7:	ff 10                	callq  *(%rax)
  4010f9:	01 20                	add    %esp,(%rax)
  4010fb:	00 28                	add    %ch,(%rax)
  4010fd:	fe                   	(bad)  
  4010fe:	ff                   	(bad)  
  4010ff:	ff 40 01             	incl   0x1(%rax)
  401102:	20 00                	and    %al,(%rax)
  401104:	40 fe                	rex (bad) 
  401106:	ff                   	(bad)  
  401107:	ff 68 01             	ljmpq  *0x1(%rax)
  40110a:	20 00                	and    %al,(%rax)
  40110c:	60                   	(bad)  
  40110d:	fe                   	(bad)  
  40110e:	ff                   	(bad)  
  40110f:	ff e0                	jmpq   *%rax
  401111:	01 20                	add    %esp,(%rax)
  401113:	00 c0                	add    %al,%al
  401115:	fe                   	(bad)  
  401116:	ff                   	(bad)  
  401117:	ff 28                	ljmpq  *(%rax)
  401119:	02 20                	add    (%rax),%ah
	...

Disassembly of section .eh_frame:

0000000000601120 <__FRAME_END__-0x1e0>:
  601120:	14 00                	adc    $0x0,%al
  601122:	00 00                	add    %al,(%rax)
  601124:	00 00                	add    %al,(%rax)
  601126:	00 00                	add    %al,(%rax)
  601128:	01 7a 52             	add    %edi,0x52(%rdx)
  60112b:	00 01                	add    %al,(%rcx)
  60112d:	78 10                	js     60113f <_IO_stdin_used+0x20017f>
  60112f:	01 1b                	add    %ebx,(%rbx)
  601131:	0c 07                	or     $0x7,%al
  601133:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  601139:	00 00                	add    %al,(%rax)
  60113b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  60113e:	00 00                	add    %al,(%rax)
  601140:	30 f7                	xor    %dh,%bh
  601142:	df ff                	(bad)  
  601144:	e0 00                	loopne 601146 <_IO_stdin_used+0x200186>
  601146:	00 00                	add    %al,(%rax)
  601148:	00 0e                	add    %cl,(%rsi)
  60114a:	10 46 0e             	adc    %al,0xe(%rsi)
  60114d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  601150:	0b 77 08             	or     0x8(%rdi),%esi
  601153:	80 00 3f             	addb   $0x3f,(%rax)
  601156:	1a 3b                	sbb    (%rbx),%bh
  601158:	2a 33                	sub    (%rbx),%dh
  60115a:	24 22                	and    $0x22,%al
  60115c:	00 00                	add    %al,(%rax)
  60115e:	00 00                	add    %al,(%rax)
  601160:	1c 00                	sbb    $0x0,%al
  601162:	00 00                	add    %al,(%rax)
  601164:	00 00                	add    %al,(%rax)
  601166:	00 00                	add    %al,(%rax)
  601168:	01 7a 50             	add    %edi,0x50(%rdx)
  60116b:	00 01                	add    %al,(%rcx)
  60116d:	78 10                	js     60117f <_IO_stdin_used+0x2001bf>
  60116f:	09 00                	or     %eax,(%rax)
  601171:	40 09 40 00          	rex or %eax,0x0(%rax)
  601175:	00 00                	add    %al,(%rax)
  601177:	00 00                	add    %al,(%rax)
  601179:	0c 07                	or     $0x7,%al
  60117b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  601181:	00 00                	add    %al,(%rax)
  601183:	00 24 00             	add    %ah,(%rax,%rax,1)
  601186:	00 00                	add    %al,(%rax)
  601188:	0c 0e                	or     $0xe,%al
  60118a:	40 00 00             	add    %al,(%rax)
  60118d:	00 00                	add    %al,(%rax)
  60118f:	00 38                	add    %bh,(%rax)
	...
  601199:	41 0e                	rex.B (bad) 
  60119b:	10 43 0c             	adc    %al,0xc(%rbx)
  60119e:	06                   	(bad)  
  60119f:	10 86 02 72 c6 00    	adc    %al,0xc67202(%rsi)
  6011a5:	00 00                	add    %al,(%rax)
  6011a7:	00 24 00             	add    %ah,(%rax,%rax,1)
  6011aa:	00 00                	add    %al,(%rax)
  6011ac:	4c 00 00             	rex.WR add %r8b,(%rax)
  6011af:	00 44 0e 40          	add    %al,0x40(%rsi,%rcx,1)
  6011b3:	00 00                	add    %al,(%rax)
  6011b5:	00 00                	add    %al,(%rax)
  6011b7:	00 2e                	add    %ch,(%rsi)
	...
  6011c1:	41 0e                	rex.B (bad) 
  6011c3:	10 43 0c             	adc    %al,0xc(%rbx)
  6011c6:	06                   	(bad)  
  6011c7:	10 86 02 69 c6 00    	adc    %al,0xc66902(%rsi)
  6011cd:	00 00                	add    %al,(%rax)
  6011cf:	00 2c 00             	add    %ch,(%rax,%rax,1)
  6011d2:	00 00                	add    %al,(%rax)
  6011d4:	74 00                	je     6011d6 <_IO_stdin_used+0x200216>
  6011d6:	00 00                	add    %al,(%rax)
  6011d8:	74 0e                	je     6011e8 <_IO_stdin_used+0x200228>
  6011da:	40 00 00             	add    %al,(%rax)
  6011dd:	00 00                	add    %al,(%rax)
  6011df:	00 72 00             	add    %dh,0x0(%rdx)
  6011e2:	00 00                	add    %al,(%rax)
  6011e4:	00 00                	add    %al,(%rax)
  6011e6:	00 00                	add    %al,(%rax)
  6011e8:	00 41 0e             	add    %al,0xe(%rcx)
  6011eb:	10 43 0c             	adc    %al,0xc(%rbx)
  6011ee:	06                   	(bad)  
  6011ef:	10 86 02 73 c6 41    	adc    %al,0x41c67302(%rsi)
  6011f5:	86 02                	xchg   %al,(%rdx)
  6011f7:	79 c6                	jns    6011bf <_IO_stdin_used+0x2001ff>
  6011f9:	00 00                	add    %al,(%rax)
  6011fb:	00 00                	add    %al,(%rax)
  6011fd:	00 00                	add    %al,(%rax)
  6011ff:	00 24 00             	add    %ah,(%rax,%rax,1)
  601202:	00 00                	add    %al,(%rax)
  601204:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
  601205:	00 00                	add    %al,(%rax)
  601207:	00 e8                	add    %ch,%al
  601209:	0e                   	(bad)  
  60120a:	40 00 00             	add    %al,(%rax)
  60120d:	00 00                	add    %al,(%rax)
  60120f:	00 16                	add    %dl,(%rsi)
	...
  601219:	41 0e                	rex.B (bad) 
  60121b:	10 43 0c             	adc    %al,0xc(%rbx)
  60121e:	06                   	(bad)  
  60121f:	10 86 02 51 c6 00    	adc    %al,0xc65102(%rsi)
  601225:	00 00                	add    %al,(%rax)
  601227:	00 24 00             	add    %ah,(%rax,%rax,1)
  60122a:	00 00                	add    %al,(%rax)
  60122c:	cc                   	int3   
  60122d:	00 00                	add    %al,(%rax)
  60122f:	00 00                	add    %al,(%rax)
  601231:	0f 40 00             	cmovo  (%rax),%eax
  601234:	00 00                	add    %al,(%rax)
  601236:	00 00                	add    %al,(%rax)
  601238:	20 00                	and    %al,(%rax)
  60123a:	00 00                	add    %al,(%rax)
  60123c:	00 00                	add    %al,(%rax)
  60123e:	00 00                	add    %al,(%rax)
  601240:	00 41 0e             	add    %al,0xe(%rcx)
  601243:	10 43 0c             	adc    %al,0xc(%rbx)
  601246:	06                   	(bad)  
  601247:	10 86 02 5b c6 00    	adc    %al,0xc65b02(%rsi)
  60124d:	00 00                	add    %al,(%rax)
  60124f:	00 24 00             	add    %ah,(%rax,%rax,1)
  601252:	00 00                	add    %al,(%rax)
  601254:	f4                   	hlt    
  601255:	00 00                	add    %al,(%rax)
  601257:	00 04 0a             	add    %al,(%rdx,%rcx,1)
  60125a:	40 00 00             	add    %al,(%rax)
  60125d:	00 00                	add    %al,(%rax)
  60125f:	00 d0                	add    %dl,%al
  601261:	03 00                	add    (%rax),%eax
  601263:	00 00                	add    %al,(%rax)
  601265:	00 00                	add    %al,(%rax)
  601267:	00 00                	add    %al,(%rax)
  601269:	41 0e                	rex.B (bad) 
  60126b:	10 43 0c             	adc    %al,0xc(%rbx)
  60126e:	06                   	(bad)  
  60126f:	10 86 02 03 cb 03    	adc    %al,0x3cb0302(%rsi)
  601275:	c6 00 00             	movb   $0x0,(%rax)
  601278:	24 00                	and    $0x0,%al
  60127a:	00 00                	add    %al,(%rax)
  60127c:	1c 01                	sbb    $0x1,%al
  60127e:	00 00                	add    %al,(%rax)
  601280:	d4                   	(bad)  
  601281:	0d 40 00 00 00       	or     $0x40,%eax
  601286:	00 00                	add    %al,(%rax)
  601288:	37                   	(bad)  
	...
  601291:	41 0e                	rex.B (bad) 
  601293:	10 43 0c             	adc    %al,0xc(%rbx)
  601296:	06                   	(bad)  
  601297:	10 86 02 72 c6 00    	adc    %al,0xc67202(%rsi)
  60129d:	00 00                	add    %al,(%rax)
  60129f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
  6012a3:	00 84 01 00 00 78 fc 	add    %al,-0x3880000(%rcx,%rax,1)
  6012aa:	df ff                	(bad)  
  6012ac:	59                   	pop    %rcx
  6012ad:	00 00                	add    %al,(%rax)
  6012af:	00 00                	add    %al,(%rax)
  6012b1:	42 0e                	rex.X (bad) 
  6012b3:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
  6012b9:	8e 03                	mov    (%rbx),%es
  6012bb:	45 0e                	rex.RB (bad) 
  6012bd:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
  6012c3:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff8690210d <_end+0xffffffff86300a45>
  6012c9:	06                   	(bad)  
  6012ca:	48 0e                	rex.W (bad) 
  6012cc:	38 83 07 44 0e 40    	cmp    %al,0x400e4407(%rbx)
  6012d2:	69 0e 38 41 0e 30    	imul   $0x300e4138,(%rsi),%ecx
  6012d8:	41 0e                	rex.B (bad) 
  6012da:	28 42 0e             	sub    %al,0xe(%rdx)
  6012dd:	20 42 0e             	and    %al,0xe(%rdx)
  6012e0:	18 42 0e             	sbb    %al,0xe(%rdx)
  6012e3:	10 42 0e             	adc    %al,0xe(%rdx)
  6012e6:	08 00                	or     %al,(%rax)
  6012e8:	14 00                	adc    $0x0,%al
  6012ea:	00 00                	add    %al,(%rax)
  6012ec:	cc                   	int3   
  6012ed:	01 00                	add    %eax,(%rax)
  6012ef:	00 90 fc df ff 01    	add    %dl,0x1ffdffc(%rax)
	...

0000000000601300 <__FRAME_END__>:
  601300:	00 00                	add    %al,(%rax)
	...

Disassembly of section .ctors:

0000000000601308 <__CTOR_LIST__>:
  601308:	ff                   	(bad)  
  601309:	ff                   	(bad)  
  60130a:	ff                   	(bad)  
  60130b:	ff                   	(bad)  
  60130c:	ff                   	(bad)  
  60130d:	ff                   	(bad)  
  60130e:	ff                   	(bad)  
  60130f:	ff d4                	callq  *%rsp
  601311:	0d 40 00 00 00       	or     $0x40,%eax
	...

0000000000601318 <__CTOR_END__>:
	...

Disassembly of section .dtors:

0000000000601320 <__DTOR_LIST__>:
  601320:	ff                   	(bad)  
  601321:	ff                   	(bad)  
  601322:	ff                   	(bad)  
  601323:	ff                   	(bad)  
  601324:	ff                   	(bad)  
  601325:	ff                   	(bad)  
  601326:	ff                   	(bad)  
  601327:	ff 00                	incl   (%rax)

0000000000601328 <__DTOR_END__>:
	...

Disassembly of section .jcr:

0000000000601330 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000601338 <_DYNAMIC>:
  601338:	01 00                	add    %eax,(%rax)
  60133a:	00 00                	add    %al,(%rax)
  60133c:	00 00                	add    %al,(%rax)
  60133e:	00 00                	add    %al,(%rax)
  601340:	01 00                	add    %eax,(%rax)
  601342:	00 00                	add    %al,(%rax)
  601344:	00 00                	add    %al,(%rax)
  601346:	00 00                	add    %al,(%rax)
  601348:	01 00                	add    %eax,(%rax)
  60134a:	00 00                	add    %al,(%rax)
  60134c:	00 00                	add    %al,(%rax)
  60134e:	00 00                	add    %al,(%rax)
  601350:	2e 00 00             	add    %al,%cs:(%rax)
  601353:	00 00                	add    %al,(%rax)
  601355:	00 00                	add    %al,(%rax)
  601357:	00 01                	add    %al,(%rcx)
  601359:	00 00                	add    %al,(%rax)
  60135b:	00 00                	add    %al,(%rax)
  60135d:	00 00                	add    %al,(%rax)
  60135f:	00 67 01             	add    %ah,0x1(%rdi)
  601362:	00 00                	add    %al,(%rax)
  601364:	00 00                	add    %al,(%rax)
  601366:	00 00                	add    %al,(%rax)
  601368:	01 00                	add    %eax,(%rax)
  60136a:	00 00                	add    %al,(%rax)
  60136c:	00 00                	add    %al,(%rax)
  60136e:	00 00                	add    %al,(%rax)
  601370:	75 01                	jne    601373 <_DYNAMIC+0x3b>
  601372:	00 00                	add    %al,(%rax)
  601374:	00 00                	add    %al,(%rax)
  601376:	00 00                	add    %al,(%rax)
  601378:	01 00                	add    %eax,(%rax)
  60137a:	00 00                	add    %al,(%rax)
  60137c:	00 00                	add    %al,(%rax)
  60137e:	00 00                	add    %al,(%rax)
  601380:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
  601381:	01 00                	add    %eax,(%rax)
  601383:	00 00                	add    %al,(%rax)
  601385:	00 00                	add    %al,(%rax)
  601387:	00 0c 00             	add    %cl,(%rax,%rax,1)
  60138a:	00 00                	add    %al,(%rax)
  60138c:	00 00                	add    %al,(%rax)
  60138e:	00 00                	add    %al,(%rax)
  601390:	58                   	pop    %rax
  601391:	08 40 00             	or     %al,0x0(%rax)
  601394:	00 00                	add    %al,(%rax)
  601396:	00 00                	add    %al,(%rax)
  601398:	0d 00 00 00 00       	or     $0x0,%eax
  60139d:	00 00                	add    %al,(%rax)
  60139f:	00 a4 0f 40 00 00 00 	add    %ah,0x40(%rdi,%rcx,1)
  6013a6:	00 00                	add    %al,(%rax)
  6013a8:	04 00                	add    $0x0,%al
  6013aa:	00 00                	add    %al,(%rax)
  6013ac:	00 00                	add    %al,(%rax)
  6013ae:	00 00                	add    %al,(%rax)
  6013b0:	40 02 40 00          	add    0x0(%rax),%al
  6013b4:	00 00                	add    %al,(%rax)
  6013b6:	00 00                	add    %al,(%rax)
  6013b8:	05 00 00 00 00       	add    $0x0,%eax
  6013bd:	00 00                	add    %al,(%rax)
  6013bf:	00 88 04 40 00 00    	add    %cl,0x4004(%rax)
  6013c5:	00 00                	add    %al,(%rax)
  6013c7:	00 06                	add    %al,(%rsi)
  6013c9:	00 00                	add    %al,(%rax)
  6013cb:	00 00                	add    %al,(%rax)
  6013cd:	00 00                	add    %al,(%rax)
  6013cf:	00 d8                	add    %bl,%al
  6013d1:	02 40 00             	add    0x0(%rax),%al
  6013d4:	00 00                	add    %al,(%rax)
  6013d6:	00 00                	add    %al,(%rax)
  6013d8:	0a 00                	or     (%rax),%al
  6013da:	00 00                	add    %al,(%rax)
  6013dc:	00 00                	add    %al,(%rax)
  6013de:	00 00                	add    %al,(%rax)
  6013e0:	e1 01                	loope  6013e3 <_DYNAMIC+0xab>
  6013e2:	00 00                	add    %al,(%rax)
  6013e4:	00 00                	add    %al,(%rax)
  6013e6:	00 00                	add    %al,(%rax)
  6013e8:	0b 00                	or     (%rax),%eax
  6013ea:	00 00                	add    %al,(%rax)
  6013ec:	00 00                	add    %al,(%rax)
  6013ee:	00 00                	add    %al,(%rax)
  6013f0:	18 00                	sbb    %al,(%rax)
  6013f2:	00 00                	add    %al,(%rax)
  6013f4:	00 00                	add    %al,(%rax)
  6013f6:	00 00                	add    %al,(%rax)
  6013f8:	15 00 00 00 00       	adc    $0x0,%eax
	...
  601405:	00 00                	add    %al,(%rax)
  601407:	00 03                	add    %al,(%rbx)
  601409:	00 00                	add    %al,(%rax)
  60140b:	00 00                	add    %al,(%rax)
  60140d:	00 00                	add    %al,(%rax)
  60140f:	00 10                	add    %dl,(%rax)
  601411:	15 60 00 00 00       	adc    $0x60,%eax
  601416:	00 00                	add    %al,(%rax)
  601418:	02 00                	add    (%rax),%al
  60141a:	00 00                	add    %al,(%rax)
  60141c:	00 00                	add    %al,(%rax)
  60141e:	00 00                	add    %al,(%rax)
  601420:	38 01                	cmp    %al,(%rcx)
  601422:	00 00                	add    %al,(%rax)
  601424:	00 00                	add    %al,(%rax)
  601426:	00 00                	add    %al,(%rax)
  601428:	14 00                	adc    $0x0,%al
  60142a:	00 00                	add    %al,(%rax)
  60142c:	00 00                	add    %al,(%rax)
  60142e:	00 00                	add    %al,(%rax)
  601430:	07                   	(bad)  
  601431:	00 00                	add    %al,(%rax)
  601433:	00 00                	add    %al,(%rax)
  601435:	00 00                	add    %al,(%rax)
  601437:	00 17                	add    %dl,(%rdi)
  601439:	00 00                	add    %al,(%rax)
  60143b:	00 00                	add    %al,(%rax)
  60143d:	00 00                	add    %al,(%rax)
  60143f:	00 20                	add    %ah,(%rax)
  601441:	07                   	(bad)  
  601442:	40 00 00             	add    %al,(%rax)
  601445:	00 00                	add    %al,(%rax)
  601447:	00 07                	add    %al,(%rdi)
  601449:	00 00                	add    %al,(%rax)
  60144b:	00 00                	add    %al,(%rax)
  60144d:	00 00                	add    %al,(%rax)
  60144f:	00 f0                	add    %dh,%al
  601451:	06                   	(bad)  
  601452:	40 00 00             	add    %al,(%rax)
  601455:	00 00                	add    %al,(%rax)
  601457:	00 08                	add    %cl,(%rax)
  601459:	00 00                	add    %al,(%rax)
  60145b:	00 00                	add    %al,(%rax)
  60145d:	00 00                	add    %al,(%rax)
  60145f:	00 30                	add    %dh,(%rax)
  601461:	00 00                	add    %al,(%rax)
  601463:	00 00                	add    %al,(%rax)
  601465:	00 00                	add    %al,(%rax)
  601467:	00 09                	add    %cl,(%rcx)
  601469:	00 00                	add    %al,(%rax)
  60146b:	00 00                	add    %al,(%rax)
  60146d:	00 00                	add    %al,(%rax)
  60146f:	00 18                	add    %bl,(%rax)
  601471:	00 00                	add    %al,(%rax)
  601473:	00 00                	add    %al,(%rax)
  601475:	00 00                	add    %al,(%rax)
  601477:	00 fe                	add    %bh,%dh
  601479:	ff                   	(bad)  
  60147a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  60147d:	00 00                	add    %al,(%rax)
  60147f:	00 90 06 40 00 00    	add    %dl,0x4006(%rax)
  601485:	00 00                	add    %al,(%rax)
  601487:	00 ff                	add    %bh,%bh
  601489:	ff                   	(bad)  
  60148a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  60148d:	00 00                	add    %al,(%rax)
  60148f:	00 02                	add    %al,(%rdx)
  601491:	00 00                	add    %al,(%rax)
  601493:	00 00                	add    %al,(%rax)
  601495:	00 00                	add    %al,(%rax)
  601497:	00 f0                	add    %dh,%al
  601499:	ff                   	(bad)  
  60149a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  60149d:	00 00                	add    %al,(%rax)
  60149f:	00 6a 06             	add    %ch,0x6(%rdx)
  6014a2:	40 00 00             	add    %al,(%rax)
	...

Disassembly of section .got:

0000000000601508 <.got>:
	...

Disassembly of section .got.plt:

0000000000601510 <_GLOBAL_OFFSET_TABLE_>:
  601510:	38 13                	cmp    %dl,(%rbx)
  601512:	60                   	(bad)  
	...
  601527:	00 86 08 40 00 00    	add    %al,0x4008(%rsi)
  60152d:	00 00                	add    %al,(%rax)
  60152f:	00 96 08 40 00 00    	add    %dl,0x4008(%rsi)
  601535:	00 00                	add    %al,(%rax)
  601537:	00 a6 08 40 00 00    	add    %ah,0x4008(%rsi)
  60153d:	00 00                	add    %al,(%rax)
  60153f:	00 b6 08 40 00 00    	add    %dh,0x4008(%rsi)
  601545:	00 00                	add    %al,(%rax)
  601547:	00 c6                	add    %al,%dh
  601549:	08 40 00             	or     %al,0x0(%rax)
  60154c:	00 00                	add    %al,(%rax)
  60154e:	00 00                	add    %al,(%rax)
  601550:	d6 08 40 00          	(bad)  
  601554:	00 00                	add    %al,(%rax)
  601556:	00 00                	add    %al,(%rax)
  601558:	e6 08                	out    %al,$0x8
  60155a:	40 00 00             	add    %al,(%rax)
  60155d:	00 00                	add    %al,(%rax)
  60155f:	00 f6                	add    %dh,%dh
  601561:	08 40 00             	or     %al,0x0(%rax)
  601564:	00 00                	add    %al,(%rax)
  601566:	00 00                	add    %al,(%rax)
  601568:	06                   	(bad)  
  601569:	09 40 00             	or     %eax,0x0(%rax)
  60156c:	00 00                	add    %al,(%rax)
  60156e:	00 00                	add    %al,(%rax)
  601570:	16                   	(bad)  
  601571:	09 40 00             	or     %eax,0x0(%rax)
  601574:	00 00                	add    %al,(%rax)
  601576:	00 00                	add    %al,(%rax)
  601578:	26 09 40 00          	or     %eax,%es:0x0(%rax)
  60157c:	00 00                	add    %al,(%rax)
  60157e:	00 00                	add    %al,(%rax)
  601580:	36 09 40 00          	or     %eax,%ss:0x0(%rax)
  601584:	00 00                	add    %al,(%rax)
  601586:	00 00                	add    %al,(%rax)
  601588:	46 09 40 00          	rex.RX or %r8d,0x0(%rax)
  60158c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601590 <__data_start>:
	...

0000000000601598 <__dso_handle>:
	...

Disassembly of section .bss:

00000000006015a0 <std::cout@@GLIBCXX_3.4>:
	...

00000000006016b0 <completed.5565>:
	...

00000000006016b8 <dtor_idx.5567>:
	...

00000000006016c0 <std::__ioinit>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 47 4e             	sub    %al,0x4e(%rdi)
   8:	55                   	push   %rbp
   9:	29 20                	sub    %esp,(%rax)
   b:	34 2e                	xor    $0x2e,%al
   d:	37                   	(bad)  
   e:	2e 30 20             	xor    %ah,%cs:(%rax)
  11:	32 30                	xor    (%rax),%dh
  13:	31 31                	xor    %esi,(%rcx)
  15:	30 35 30 39 20 28    	xor    %dh,0x28203930(%rip)        # 2820394b <_end+0x27c02283>
  1b:	65                   	gs
  1c:	78 70                	js     8e <_init-0x4007ca>
  1e:	65                   	gs
  1f:	72 69                	jb     8a <_init-0x4007ce>
  21:	6d                   	insl   (%dx),%es:(%rdi)
  22:	65 6e                	outsb  %gs:(%rsi),(%dx)
  24:	74 61                	je     87 <_init-0x4007d1>
  26:	6c                   	insb   (%dx),%es:(%rdi)
  27:	29 00                	sub    %eax,(%rax)

Disassembly of section .note:

0000000000000000 <.note>:
   0:	05 00 00 00 00       	add    $0x0,%eax
   5:	00 00                	add    %al,(%rax)
   7:	00 02                	add    %al,(%rdx)
   9:	00 00                	add    %al,(%rax)
   b:	00 6b 31             	add    %ch,0x31(%rbx)
   e:	6f                   	outsl  %ds:(%rsi),(%dx)
   f:	6d                   	insl   (%dx),%es:(%rdi)
  10:	00 00                	add    %al,(%rax)
  12:	00 00                	add    %al,(%rax)
  14:	05 00 00 00 00       	add    $0x0,%eax
  19:	00 00                	add    %al,(%rax)
  1b:	00 02                	add    %al,(%rdx)
  1d:	00 00                	add    %al,(%rax)
  1f:	00 6b 31             	add    %ch,0x31(%rbx)
  22:	6f                   	outsl  %ds:(%rsi),(%dx)
  23:	6d                   	insl   (%dx),%es:(%rdi)
  24:	00 00                	add    %al,(%rax)
  26:	00 00                	add    %al,(%rax)
  28:	05 00 00 00 00       	add    $0x0,%eax
  2d:	00 00                	add    %al,(%rax)
  2f:	00 02                	add    %al,(%rdx)
  31:	00 00                	add    %al,(%rax)
  33:	00 6b 31             	add    %ch,0x31(%rbx)
  36:	6f                   	outsl  %ds:(%rsi),(%dx)
  37:	6d                   	insl   (%dx),%es:(%rdi)
  38:	00 00                	add    %al,(%rax)
  3a:	00 00                	add    %al,(%rax)
  3c:	05 00 00 00 00       	add    $0x0,%eax
  41:	00 00                	add    %al,(%rax)
  43:	00 02                	add    %al,(%rdx)
  45:	00 00                	add    %al,(%rax)
  47:	00 6b 31             	add    %ch,0x31(%rbx)
  4a:	6f                   	outsl  %ds:(%rsi),(%dx)
  4b:	6d                   	insl   (%dx),%es:(%rdi)
  4c:	00 00                	add    %al,(%rax)
  4e:	00 00                	add    %al,(%rax)
  50:	05 00 00 00 00       	add    $0x0,%eax
  55:	00 00                	add    %al,(%rax)
  57:	00 02                	add    %al,(%rdx)
  59:	00 00                	add    %al,(%rax)
  5b:	00 6b 31             	add    %ch,0x31(%rbx)
  5e:	6f                   	outsl  %ds:(%rsi),(%dx)
  5f:	6d                   	insl   (%dx),%es:(%rdi)
  60:	00 00                	add    %al,(%rax)
  62:	00 00                	add    %al,(%rax)
  64:	05 00 00 00 00       	add    $0x0,%eax
  69:	00 00                	add    %al,(%rax)
  6b:	00 02                	add    %al,(%rdx)
  6d:	00 00                	add    %al,(%rax)
  6f:	00 6b 31             	add    %ch,0x31(%rbx)
  72:	6f                   	outsl  %ds:(%rsi),(%dx)
  73:	6d                   	insl   (%dx),%es:(%rdi)
  74:	00 00                	add    %al,(%rax)
  76:	00 00                	add    %al,(%rax)
  78:	05 00 00 00 00       	add    $0x0,%eax
  7d:	00 00                	add    %al,(%rax)
  7f:	00 02                	add    %al,(%rdx)
  81:	00 00                	add    %al,(%rax)
  83:	00 6b 31             	add    %ch,0x31(%rbx)
  86:	6f                   	outsl  %ds:(%rsi),(%dx)
  87:	6d                   	insl   (%dx),%es:(%rdi)
  88:	00 00                	add    %al,(%rax)
  8a:	00 00                	add    %al,(%rax)
  8c:	05 00 00 00 00       	add    $0x0,%eax
  91:	00 00                	add    %al,(%rax)
  93:	00 02                	add    %al,(%rdx)
  95:	00 00                	add    %al,(%rax)
  97:	00 6b 31             	add    %ch,0x31(%rbx)
  9a:	6f                   	outsl  %ds:(%rsi),(%dx)
  9b:	6d                   	insl   (%dx),%es:(%rdi)
  9c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	1c 00                	sbb    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
	...
  20:	2c 00                	sub    $0x0,%al
  22:	00 00                	add    %al,(%rax)
  24:	02 00                	add    (%rax),%al
  26:	78 00                	js     28 <_init-0x400830>
  28:	00 00                	add    %al,(%rax)
  2a:	08 00                	or     %al,(%rax)
  2c:	00 00                	add    %al,(%rax)
  2e:	00 00                	add    %al,(%rax)
  30:	20 0f                	and    %cl,(%rdi)
  32:	40 00 00             	add    %al,(%rax)
  35:	00 00                	add    %al,(%rax)
  37:	00 61 00             	add    %ah,0x0(%rcx)
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	74 00                	je     2 <_init-0x400856>
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 01                	or     %al,(%rcx)
   c:	96                   	xchg   %eax,%esi
   d:	00 00                	add    %al,(%rax)
   f:	00 01                	add    %al,(%rcx)
  11:	d5                   	(bad)  
  12:	00 00                	add    %al,(%rax)
  14:	00 2f                	add    %ch,(%rdi)
  16:	00 00                	add    %al,(%rax)
  18:	00 00                	add    %al,(%rax)
  1a:	00 00                	add    %al,(%rax)
  1c:	00 02                	add    %al,(%rdx)
  1e:	01 08                	add    %ecx,(%rax)
  20:	ba 00 00 00 02       	mov    $0x2000000,%edx
  25:	02 07                	add    (%rdi),%al
  27:	12 00                	adc    (%rax),%al
  29:	00 00                	add    %al,(%rax)
  2b:	02 04 07             	add    (%rdi,%rax,1),%al
  2e:	05 00 00 00 02       	add    $0x2000000,%eax
  33:	08 07                	or     %al,(%rdi)
  35:	00 00                	add    %al,(%rax)
  37:	00 00                	add    %al,(%rax)
  39:	02 01                	add    (%rcx),%al
  3b:	06                   	(bad)  
  3c:	bc 00 00 00 02       	mov    $0x2000000,%esp
  41:	02 05 25 00 00 00    	add    0x25(%rip),%al        # 6c <_init-0x4007ec>
  47:	03 04 05 69 6e 74 00 	add    0x746e69(,%rax,1),%eax
  4e:	02 08                	add    (%rax),%cl
  50:	05 c8 00 00 00       	add    $0xc8,%eax
  55:	02 01                	add    (%rcx),%al
  57:	06                   	(bad)  
  58:	c3                   	retq   
  59:	00 00                	add    %al,(%rax)
  5b:	00 04 87             	add    %al,(%rdi,%rax,4)
  5e:	00 00                	add    %al,(%rax)
  60:	00 01                	add    %al,(%rcx)
  62:	19 72 00             	sbb    %esi,0x0(%rdx)
  65:	00 00                	add    %al,(%rax)
  67:	01 09                	add    %ecx,(%rcx)
  69:	03 c0                	add    %eax,%eax
  6b:	0f 40 00             	cmovo  (%rax),%eax
  6e:	00 00                	add    %al,(%rax)
  70:	00 00                	add    %al,(%rax)
  72:	05 47 00 00 00       	add    $0x47,%eax
  77:	00 7f 01             	add    %bh,0x1(%rdi)
  7a:	00 00                	add    %al,(%rax)
  7c:	02 00                	add    (%rax),%al
  7e:	3e 00 00             	add    %al,%ds:(%rax)
  81:	00 08                	add    %cl,(%rax)
  83:	01 96 00 00 00 01    	add    %edx,0x1000000(%rsi)
  89:	d1 00                	roll   (%rax)
  8b:	00 00                	add    %al,(%rax)
  8d:	2f                   	(bad)  
  8e:	00 00                	add    %al,(%rax)
  90:	00 20                	add    %ah,(%rax)
  92:	0f 40 00             	cmovo  (%rax),%eax
  95:	00 00                	add    %al,(%rax)
  97:	00 00                	add    %al,(%rax)
  99:	81 0f 40 00 00 00    	orl    $0x40,(%rdi)
  9f:	00 00                	add    %al,(%rax)
  a1:	27                   	(bad)  
  a2:	00 00                	add    %al,(%rax)
  a4:	00 02                	add    %al,(%rdx)
  a6:	08 05 c8 00 00 00    	or     %al,0xc8(%rip)        # 174 <_init-0x4006e4>
  ac:	03 dc                	add    %esp,%ebx
  ae:	00 00                	add    %al,(%rax)
  b0:	00 02                	add    %al,(%rdx)
  b2:	d4                   	(bad)  
  b3:	3f                   	(bad)  
  b4:	00 00                	add    %al,(%rax)
  b6:	00 02                	add    %al,(%rdx)
  b8:	08 07                	or     %al,(%rdi)
  ba:	00 00                	add    %al,(%rax)
  bc:	00 00                	add    %al,(%rax)
  be:	04 04                	add    $0x4,%al
  c0:	05 69 6e 74 00       	add    $0x746e69,%eax
  c5:	05 01 ed 00 00       	add    $0xed01,%eax
  ca:	00 01                	add    %al,(%rcx)
  cc:	69 01 20 0f 40 00    	imul   $0x400f20,(%rcx),%eax
  d2:	00 00                	add    %al,(%rax)
  d4:	00 00                	add    %al,(%rax)
  d6:	79 0f                	jns    e7 <_init-0x400771>
  d8:	40 00 00             	add    %al,(%rax)
  db:	00 00                	add    %al,(%rax)
  dd:	00 00                	add    %al,(%rax)
  df:	00 00                	add    %al,(%rax)
  e1:	00 01                	add    %al,(%rcx)
  e3:	e8 00 00 00 06       	callq  60000e8 <_end+0x59fea20>
  e8:	e8 00 00 00 01       	callq  10000ed <_end+0x9fea25>
  ed:	69 46 00 00 00 3d 01 	imul   $0x13d0000,0x0(%rsi),%eax
  f4:	00 00                	add    %al,(%rax)
  f6:	06                   	(bad)  
  f7:	36 01 00             	add    %eax,%ss:(%rax)
  fa:	00 01                	add    %al,(%rcx)
  fc:	69 e8 00 00 00 89    	imul   $0x89000000,%eax,%ebp
 102:	01 00                	add    %eax,(%rax)
 104:	00 06                	add    %al,(%rsi)
 106:	e3 00                	jrcxz  108 <_init-0x400750>
 108:	00 00                	add    %al,(%rax)
 10a:	01 69 e8             	add    %ebp,-0x18(%rcx)
 10d:	00 00                	add    %al,(%rax)
 10f:	00 d5                	add    %dl,%ch
 111:	01 00                	add    %eax,(%rax)
 113:	00 07                	add    %al,(%rdi)
 115:	10 01                	adc    %al,(%rcx)
 117:	00 00                	add    %al,(%rax)
 119:	01 7a fb             	add    %edi,-0x5(%rdx)
 11c:	00 00                	add    %al,(%rax)
 11e:	00 08                	add    %cl,(%rax)
 120:	00 00                	add    %al,(%rax)
 122:	00 00                	add    %al,(%rax)
 124:	da 00                	fiaddl (%rax)
 126:	00 00                	add    %al,(%rax)
 128:	09 69 00             	or     %ebp,0x0(%rcx)
 12b:	01 7b 34             	add    %edi,0x34(%rbx)
 12e:	00 00                	add    %al,(%rax)
 130:	00 21                	add    %ah,(%rcx)
 132:	02 00                	add    (%rax),%al
 134:	00 0a                	add    %cl,(%rdx)
 136:	65 0f 40 00          	cmovo  %gs:(%rax),%eax
 13a:	00 00                	add    %al,(%rax)
 13c:	00 00                	add    %al,(%rax)
 13e:	0b 01                	or     (%rcx),%eax
 140:	55                   	push   %rbp
 141:	02 7c 00 0b          	add    0xb(%rax,%rax,1),%bh
 145:	01 54 02 7d          	add    %edx,0x7d(%rdx,%rax,1)
 149:	00 0b                	add    %cl,(%rbx)
 14b:	01 51 02             	add    %edx,0x2(%rcx)
 14e:	7e 00                	jle    150 <_init-0x400708>
 150:	00 00                	add    %al,(%rax)
 152:	0c 4a                	or     $0x4a,%al
 154:	0f 40 00             	cmovo  (%rax),%eax
 157:	00 00                	add    %al,(%rax)
 159:	00 00                	add    %al,(%rax)
 15b:	78 01                	js     15e <_init-0x4006fa>
 15d:	00 00                	add    %al,(%rax)
 15f:	00 0d 08 ee 00 00    	add    %cl,0xee08(%rip)        # ef6d <_init-0x3f18eb>
 165:	00 0d 08 f4 00 00    	add    %cl,0xf408(%rip)        # f573 <_init-0x3f12e5>
 16b:	00 02                	add    %al,(%rdx)
 16d:	01 06                	add    %eax,(%rsi)
 16f:	c3                   	retq   
 170:	00 00                	add    %al,(%rax)
 172:	00 0e                	add    %cl,(%rsi)
 174:	34 00                	xor    $0x0,%al
 176:	00 00                	add    %al,(%rax)
 178:	0f 01 26             	smsw   (%rsi)
 17b:	01 00                	add    %eax,(%rax)
 17d:	00 01                	add    %al,(%rcx)
 17f:	83 01 80             	addl   $0xffffff80,(%rcx)
 182:	0f 40 00             	cmovo  (%rax),%eax
 185:	00 00                	add    %al,(%rax)
 187:	00 00                	add    %al,(%rax)
 189:	81 0f 40 00 00 00    	orl    $0x40,(%rdi)
 18f:	00 00                	add    %al,(%rax)
 191:	02 77 08             	add    0x8(%rdi),%dh
 194:	01 10                	add    %edx,(%rax)
 196:	3e 01 00             	add    %eax,%ds:(%rax)
 199:	00 28                	add    %ch,(%rax)
 19b:	01 00                	add    %eax,(%rax)
 19d:	00 11                	add    %dl,(%rcx)
 19f:	00 12                	add    %dl,(%rdx)
 1a1:	01 3e                	add    %edi,(%rsi)
 1a3:	01 00                	add    %eax,(%rax)
 1a5:	00 13                	add    %dl,(%rbx)
 1a7:	46 00 00             	rex.RX add %r8b,(%rax)
 1aa:	00 13                	add    %dl,(%rbx)
 1ac:	e8 00 00 00 13       	callq  130001b1 <_end+0x129feae9>
 1b1:	e8 00 00 00 00       	callq  1b6 <_init-0x4006a2>
 1b6:	0d 08 28 01 00       	or     $0x12808,%eax
 1bb:	00 14 fd 00 00 00 01 	add    %dl,0x1000000(,%rdi,8)
 1c2:	3b 1d 01 00 00 01    	cmp    0x1000001(%rip),%ebx        # 10001c9 <_end+0x9feb01>
 1c8:	01 14 15 01 00 00 01 	add    %edx,0x1000001(,%rdx,1)
 1cf:	3d 1d 01 00 00       	cmp    $0x11d,%eax
 1d4:	01 01                	add    %eax,(%rcx)
 1d6:	14 fd                	adc    $0xfd,%al
 1d8:	00 00                	add    %al,(%rax)
 1da:	00 01                	add    %al,(%rcx)
 1dc:	3b 1d 01 00 00 01    	cmp    0x1000001(%rip),%ebx        # 10001e3 <_end+0x9feb1b>
 1e2:	01 14 15 01 00 00 01 	add    %edx,0x1000001(,%rdx,1)
 1e9:	3d 1d 01 00 00       	cmp    $0x11d,%eax
 1ee:	01 01                	add    %eax,(%rcx)
 1f0:	15 01 f7 00 00       	adc    $0xf701,%eax
 1f5:	00 01                	add    %al,(%rcx)
 1f7:	45 01 01             	add    %r8d,(%r9)
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%rcx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b1316 <_end+0x2aafc4e>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    (%rsi),%ecx
   b:	10 06                	adc    %al,(%rsi)
   d:	00 00                	add    %al,(%rax)
   f:	02 24 00             	add    (%rax,%rax,1),%ah
  12:	0b 0b                	or     (%rbx),%ecx
  14:	3e 0b 03             	or     %ds:(%rbx),%eax
  17:	0e                   	(bad)  
  18:	00 00                	add    %al,(%rax)
  1a:	03 24 00             	add    (%rax,%rax,1),%esp
  1d:	0b 0b                	or     (%rbx),%ecx
  1f:	3e 0b 03             	or     %ds:(%rbx),%eax
  22:	08 00                	or     %al,(%rax)
  24:	00 04 34             	add    %al,(%rsp,%rsi,1)
  27:	00 03                	add    %al,(%rbx)
  29:	0e                   	(bad)  
  2a:	3a 0b                	cmp    (%rbx),%cl
  2c:	3b 0b                	cmp    (%rbx),%ecx
  2e:	49 13 3f             	adc    (%r15),%rdi
  31:	0c 02                	or     $0x2,%al
  33:	0a 00                	or     (%rax),%al
  35:	00 05 26 00 49 13    	add    %al,0x13490026(%rip)        # 13490061 <_end+0x12e8e999>
  3b:	00 00                	add    %al,(%rax)
  3d:	00 01                	add    %al,(%rcx)
  3f:	11 01                	adc    %eax,(%rcx)
  41:	25 0e 13 0b 03       	and    $0x30b130e,%eax
  46:	0e                   	(bad)  
  47:	1b 0e                	sbb    (%rsi),%ecx
  49:	11 01                	adc    %eax,(%rcx)
  4b:	12 01                	adc    (%rcx),%al
  4d:	10 06                	adc    %al,(%rsi)
  4f:	00 00                	add    %al,(%rax)
  51:	02 24 00             	add    (%rax,%rax,1),%ah
  54:	0b 0b                	or     (%rbx),%ecx
  56:	3e 0b 03             	or     %ds:(%rbx),%eax
  59:	0e                   	(bad)  
  5a:	00 00                	add    %al,(%rax)
  5c:	03 16                	add    (%rsi),%edx
  5e:	00 03                	add    %al,(%rbx)
  60:	0e                   	(bad)  
  61:	3a 0b                	cmp    (%rbx),%cl
  63:	3b 0b                	cmp    (%rbx),%ecx
  65:	49 13 00             	adc    (%r8),%rax
  68:	00 04 24             	add    %al,(%rsp)
  6b:	00 0b                	add    %cl,(%rbx)
  6d:	0b 3e                	or     (%rsi),%edi
  6f:	0b 03                	or     (%rbx),%eax
  71:	08 00                	or     %al,(%rax)
  73:	00 05 2e 01 3f 0c    	add    %al,0xc3f012e(%rip)        # c3f01a7 <_end+0xbdeeadf>
  79:	03 0e                	add    (%rsi),%ecx
  7b:	3a 0b                	cmp    (%rbx),%cl
  7d:	3b 0b                	cmp    (%rbx),%ecx
  7f:	27                   	(bad)  
  80:	0c 11                	or     $0x11,%al
  82:	01 12                	add    %edx,(%rdx)
  84:	01 40 06             	add    %eax,0x6(%rax)
  87:	97                   	xchg   %eax,%edi
  88:	42 0c 01             	rex.X or $0x1,%al
  8b:	13 00                	adc    (%rax),%eax
  8d:	00 06                	add    %al,(%rsi)
  8f:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
  94:	0b 3b                	or     (%rbx),%edi
  96:	0b 49 13             	or     0x13(%rcx),%ecx
  99:	02 06                	add    (%rsi),%al
  9b:	00 00                	add    %al,(%rax)
  9d:	07                   	(bad)  
  9e:	34 00                	xor    $0x0,%al
  a0:	03 0e                	add    (%rsi),%ecx
  a2:	3a 0b                	cmp    (%rbx),%cl
  a4:	3b 0b                	cmp    (%rbx),%ecx
  a6:	49 13 00             	adc    (%r8),%rax
  a9:	00 08                	add    %cl,(%rax)
  ab:	0b 01                	or     (%rcx),%eax
  ad:	55                   	push   %rbp
  ae:	06                   	(bad)  
  af:	01 13                	add    %edx,(%rbx)
  b1:	00 00                	add    %al,(%rax)
  b3:	09 34 00             	or     %esi,(%rax,%rax,1)
  b6:	03 08                	add    (%rax),%ecx
  b8:	3a 0b                	cmp    (%rbx),%cl
  ba:	3b 0b                	cmp    (%rbx),%ecx
  bc:	49 13 02             	adc    (%r10),%rax
  bf:	06                   	(bad)  
  c0:	00 00                	add    %al,(%rax)
  c2:	0a 89 82 01 01 11    	or     0x11010182(%rcx),%cl
  c8:	01 00                	add    %eax,(%rax)
  ca:	00 0b                	add    %cl,(%rbx)
  cc:	8a 82 01 00 02 0a    	mov    0xa020001(%rdx),%al
  d2:	91                   	xchg   %eax,%ecx
  d3:	42 0a 00             	rex.X or (%rax),%al
  d6:	00 0c 89             	add    %cl,(%rcx,%rcx,4)
  d9:	82                   	(bad)  
  da:	01 00                	add    %eax,(%rax)
  dc:	11 01                	adc    %eax,(%rcx)
  de:	31 13                	xor    %edx,(%rbx)
  e0:	00 00                	add    %al,(%rax)
  e2:	0d 0f 00 0b 0b       	or     $0xb0b000f,%eax
  e7:	49 13 00             	adc    (%r8),%rax
  ea:	00 0e                	add    %cl,(%rsi)
  ec:	26 00 49 13          	add    %cl,%es:0x13(%rcx)
  f0:	00 00                	add    %al,(%rax)
  f2:	0f 2e 00             	ucomiss (%rax),%xmm0
  f5:	3f                   	(bad)  
  f6:	0c 03                	or     $0x3,%al
  f8:	0e                   	(bad)  
  f9:	3a 0b                	cmp    (%rbx),%cl
  fb:	3b 0b                	cmp    (%rbx),%ecx
  fd:	27                   	(bad)  
  fe:	0c 11                	or     $0x11,%al
 100:	01 12                	add    %edx,(%rdx)
 102:	01 40 0a             	add    %eax,0xa(%rax)
 105:	97                   	xchg   %eax,%edi
 106:	42 0c 00             	rex.X or $0x0,%al
 109:	00 10                	add    %dl,(%rax)
 10b:	01 01                	add    %eax,(%rcx)
 10d:	49 13 01             	adc    (%r9),%rax
 110:	13 00                	adc    (%rax),%eax
 112:	00 11                	add    %dl,(%rcx)
 114:	21 00                	and    %eax,(%rax)
 116:	00 00                	add    %al,(%rax)
 118:	12 15 01 27 0c 01    	adc    0x10c2701(%rip),%dl        # 10c281f <_end+0xac1157>
 11e:	13 00                	adc    (%rax),%eax
 120:	00 13                	add    %dl,(%rbx)
 122:	05 00 49 13 00       	add    $0x134900,%eax
 127:	00 14 34             	add    %dl,(%rsp,%rsi,1)
 12a:	00 03                	add    %al,(%rbx)
 12c:	0e                   	(bad)  
 12d:	3a 0b                	cmp    (%rbx),%cl
 12f:	3b 0b                	cmp    (%rbx),%ecx
 131:	49 13 3f             	adc    (%r15),%rdi
 134:	0c 3c                	or     $0x3c,%al
 136:	0c 00                	or     $0x0,%al
 138:	00 15 2e 00 3f 0c    	add    %dl,0xc3f002e(%rip)        # c3f016c <_end+0xbdeeaa4>
 13e:	03 0e                	add    (%rsi),%ecx
 140:	3a 0b                	cmp    (%rbx),%cl
 142:	3b 0b                	cmp    (%rbx),%ecx
 144:	27                   	(bad)  
 145:	0c 3c                	or     $0x3c,%al
 147:	0c 00                	or     $0x0,%al
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	23 00                	and    (%rax),%eax
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	1d 00 00 00 01       	sbb    $0x1000000,%eax
   b:	01 fb                	add    %edi,%ebx
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	01 00                	add    %eax,(%rax)
  19:	00 01                	add    %al,(%rcx)
  1b:	00 69 6e             	add    %ch,0x6e(%rcx)
  1e:	69 74 2e 63 00 00 00 	imul   $0x0,0x63(%rsi,%rbp,1),%esi
  25:	00 
  26:	00 e9                	add    %ch,%cl
  28:	00 00                	add    %al,(%rax)
  2a:	00 02                	add    %al,(%rdx)
  2c:	00 ab 00 00 00 01    	add    %ch,0x1000000(%rbx)
  32:	01 fb                	add    %edi,%ebx
  34:	0e                   	(bad)  
  35:	0d 00 01 01 01       	or     $0x1010100,%eax
  3a:	01 00                	add    %eax,(%rax)
  3c:	00 00                	add    %al,(%rax)
  3e:	01 00                	add    %eax,(%rax)
  40:	00 01                	add    %al,(%rcx)
  42:	2f                   	(bad)  
  43:	73 61                	jae    a6 <_init-0x4007b2>
  45:	6e                   	outsb  %ds:(%rsi),(%dx)
  46:	64                   	fs
  47:	62                   	(bad)  
  48:	6f                   	outsl  %ds:(%rsi),(%dx)
  49:	78 2f                	js     7a <_init-0x4007de>
  4b:	62                   	(bad)  
  4c:	75 69                	jne    b7 <_init-0x4007a1>
  4e:	6c                   	insb   (%dx),%es:(%rdi)
  4f:	64                   	fs
  50:	2f                   	(bad)  
  51:	74 6d                	je     c0 <_init-0x400798>
  53:	70 2f                	jo     84 <_init-0x4007d4>
  55:	74 6d                	je     c4 <_init-0x400794>
  57:	70 2f                	jo     88 <_init-0x4007d0>
  59:	73 79                	jae    d4 <_init-0x400784>
  5b:	73 72                	jae    cf <_init-0x400789>
  5d:	6f                   	outsl  %ds:(%rsi),(%dx)
  5e:	6f                   	outsl  %ds:(%rsi),(%dx)
  5f:	74 73                	je     d4 <_init-0x400784>
  61:	2f                   	(bad)  
  62:	78 38                	js     9c <_init-0x4007bc>
  64:	36                   	ss
  65:	5f                   	pop    %rdi
  66:	36                   	ss
  67:	34 2d                	xor    $0x2d,%al
  69:	6c                   	insb   (%dx),%es:(%rdi)
  6a:	69 6e 75 78 2f 75 73 	imul   $0x73752f78,0x75(%rsi),%ebp
  71:	72 2f                	jb     a2 <_init-0x4007b6>
  73:	6c                   	insb   (%dx),%es:(%rdi)
  74:	69 62 2f 6b 31 6f 6d 	imul   $0x6d6f316b,0x2f(%rdx),%esp
  7b:	2d 6d 70 73 73       	sub    $0x7373706d,%eax
  80:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  85:	78 2e                	js     b5 <_init-0x4007a3>
  87:	67 63 63 2d          	movslq 0x2d(%ebx),%esp
  8b:	63 72 6f             	movslq 0x6f(%rdx),%esi
  8e:	73 73                	jae    103 <_init-0x400755>
  90:	2d 69 6e 74 65       	sub    $0x65746e69,%eax
  95:	72 6d                	jb     104 <_init-0x400754>
  97:	65 64 69 61 74 65 2f 	gs imul $0x63672f65,%fs:%gs:0x74(%rcx),%esp
  9e:	67 63 
  a0:	63 2f                	movslq (%rdi),%ebp
  a2:	6b 31 6f             	imul   $0x6f,(%rcx),%esi
  a5:	6d                   	insl   (%dx),%es:(%rdi)
  a6:	2d 6d 70 73 73       	sub    $0x7373706d,%eax
  ab:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  b0:	78 2f                	js     e1 <_init-0x400777>
  b2:	34 2e                	xor    $0x2e,%al
  b4:	37                   	(bad)  
  b5:	2e 30 2f             	xor    %ch,%cs:(%rdi)
  b8:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  bf:	00 00                	add    %al,(%rax)
  c1:	65                   	gs
  c2:	6c                   	insb   (%dx),%es:(%rdi)
  c3:	66 2d 69 6e          	sub    $0x6e69,%ax
  c7:	69 74 2e 63 00 00 00 	imul   $0x0,0x63(%rsi,%rbp,1),%esi
  ce:	00 
  cf:	73 74                	jae    145 <_init-0x400713>
  d1:	64                   	fs
  d2:	64                   	fs
  d3:	65                   	gs
  d4:	66                   	data16
  d5:	2e                   	cs
  d6:	68 00 01 00 00       	pushq  $0x100
  db:	00 00                	add    %al,(%rax)
  dd:	09 02                	or     %eax,(%rdx)
  df:	20 0f                	and    %cl,(%rdi)
  e1:	40 00 00             	add    %al,(%rax)
  e4:	00 00                	add    %al,(%rax)
  e6:	00 03                	add    %al,(%rbx)
  e8:	e9 00 01 03 10       	jmpq   100301ed <_end+0xfa2eb25>
  ed:	2e 03 70 74          	add    %cs:0x74(%rax),%esi
  f1:	03 10                	add    (%rax),%edx
  f3:	f2 03 70 74          	repnz add 0x74(%rax),%esi
  f7:	03 10                	add    (%rax),%edx
  f9:	20 03                	and    %al,(%rbx)
  fb:	70 3c                	jo     139 <_init-0x40071f>
  fd:	03 0e                	add    (%rsi),%ecx
  ff:	20 5b 00             	and    %bl,0x0(%rbx)
 102:	02 04 02             	add    (%rdx,%rax,1),%al
 105:	d7                   	xlat   %ds:(%rbx)
 106:	00 02                	add    %al,(%rdx)
 108:	04 02                	add    $0x2,%al
 10a:	c7                   	.byte 0xc7
 10b:	84 08                	test   %cl,(%rax)
 10d:	35 1a 02 01 00       	xor    $0x1021a,%eax
 112:	01 01                	add    %eax,(%rcx)

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	6c                   	insb   (%dx),%es:(%rdi)
   1:	6f                   	outsl  %ds:(%rsi),(%dx)
   2:	6e                   	outsb  %ds:(%rsi),(%dx)
   3:	67 20 75 6e          	and    %dh,0x6e(%ebp)
   7:	73 69                	jae    72 <_init-0x4007e6>
   9:	67 6e                	outsb  %ds:(%esi),(%dx)
   b:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%rcx)
  10:	74 00                	je     12 <_init-0x400846>
  12:	73 68                	jae    7c <_init-0x4007dc>
  14:	6f                   	outsl  %ds:(%rsi),(%dx)
  15:	72 74                	jb     8b <_init-0x4007cd>
  17:	20 75 6e             	and    %dh,0x6e(%rbp)
  1a:	73 69                	jae    85 <_init-0x4007d3>
  1c:	67 6e                	outsb  %ds:(%esi),(%dx)
  1e:	65 64 20 69 6e       	gs and %ch,%fs:%gs:0x6e(%rcx)
  23:	74 00                	je     25 <_init-0x400833>
  25:	73 68                	jae    8f <_init-0x4007c9>
  27:	6f                   	outsl  %ds:(%rsi),(%dx)
  28:	72 74                	jb     9e <_init-0x4007ba>
  2a:	20 69 6e             	and    %ch,0x6e(%rcx)
  2d:	74 00                	je     2f <_init-0x400829>
  2f:	2f                   	(bad)  
  30:	73 61                	jae    93 <_init-0x4007c5>
  32:	6e                   	outsb  %ds:(%rsi),(%dx)
  33:	64                   	fs
  34:	62                   	(bad)  
  35:	6f                   	outsl  %ds:(%rsi),(%dx)
  36:	78 2f                	js     67 <_init-0x4007f1>
  38:	62                   	(bad)  
  39:	75 69                	jne    a4 <_init-0x4007b4>
  3b:	6c                   	insb   (%dx),%es:(%rdi)
  3c:	64                   	fs
  3d:	2f                   	(bad)  
  3e:	74 6d                	je     ad <_init-0x4007ab>
  40:	70 2f                	jo     71 <_init-0x4007e7>
  42:	74 6d                	je     b1 <_init-0x4007a7>
  44:	70 2f                	jo     75 <_init-0x4007e3>
  46:	77 6f                	ja     b7 <_init-0x4007a1>
  48:	72 6b                	jb     b5 <_init-0x4007a3>
  4a:	2f                   	(bad)  
  4b:	6b 31 6f             	imul   $0x6f,(%rcx),%esi
  4e:	6d                   	insl   (%dx),%es:(%rdi)
  4f:	2d 6d 70 73 73       	sub    $0x7373706d,%eax
  54:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  59:	78 2f                	js     8a <_init-0x4007ce>
  5b:	67 6c                	insb   (%dx),%es:(%edi)
  5d:	69 62 63 2d 32 2e 31 	imul   $0x312e322d,0x63(%rdx),%esp
  64:	34 2b                	xor    $0x2b,%al
  66:	6d                   	insl   (%dx),%es:(%rdi)
  67:	70 73                	jo     dc <_init-0x40077c>
  69:	73 33                	jae    9e <_init-0x4007ba>
  6b:	2e 33 2d 31 2f 67 6c 	xor    %cs:0x6c672f31(%rip),%ebp        # 6c672fa3 <_end+0x6c0718db>
  72:	69 62 63 2d 32 2e 31 	imul   $0x312e322d,0x63(%rdx),%esp
  79:	34 2b                	xor    $0x2b,%al
  7b:	6d                   	insl   (%dx),%es:(%rdi)
  7c:	70 73                	jo     f1 <_init-0x400767>
  7e:	73 33                	jae    b3 <_init-0x4007a5>
  80:	2e 33 2f             	xor    %cs:(%rdi),%ebp
  83:	63 73 75             	movslq 0x75(%rbx),%esi
  86:	00 5f 49             	add    %bl,0x49(%rdi)
  89:	4f 5f                	rex.WRXB pop %r15
  8b:	73 74                	jae    101 <_init-0x400757>
  8d:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%rsi),%ebp
  94:	64 
  95:	00 47 4e             	add    %al,0x4e(%rdi)
  98:	55                   	push   %rbp
  99:	20 43 20             	and    %al,0x20(%rbx)
  9c:	34 2e                	xor    $0x2e,%al
  9e:	37                   	(bad)  
  9f:	2e 30 20             	xor    %ah,%cs:(%rax)
  a2:	32 30                	xor    (%rax),%dh
  a4:	31 31                	xor    %esi,(%rcx)
  a6:	30 35 30 39 20 28    	xor    %dh,0x28203930(%rip)        # 282039dc <_end+0x27c02314>
  ac:	65                   	gs
  ad:	78 70                	js     11f <_init-0x400739>
  af:	65                   	gs
  b0:	72 69                	jb     11b <_init-0x40073d>
  b2:	6d                   	insl   (%dx),%es:(%rdi)
  b3:	65 6e                	outsb  %gs:(%rsi),(%dx)
  b5:	74 61                	je     118 <_init-0x400740>
  b7:	6c                   	insb   (%dx),%es:(%rdi)
  b8:	29 00                	sub    %eax,(%rax)
  ba:	75 6e                	jne    12a <_init-0x40072e>
  bc:	73 69                	jae    127 <_init-0x400731>
  be:	67 6e                	outsb  %ds:(%esi),(%dx)
  c0:	65 64 20 63 68       	gs and %ah,%fs:%gs:0x68(%rbx)
  c5:	61                   	(bad)  
  c6:	72 00                	jb     c8 <_init-0x400790>
  c8:	6c                   	insb   (%dx),%es:(%rdi)
  c9:	6f                   	outsl  %ds:(%rsi),(%dx)
  ca:	6e                   	outsb  %ds:(%rsi),(%dx)
  cb:	67 20 69 6e          	and    %ch,0x6e(%ecx)
  cf:	74 00                	je     d1 <_init-0x400787>
  d1:	65                   	gs
  d2:	6c                   	insb   (%dx),%es:(%rdi)
  d3:	66 2d 69 6e          	sub    $0x6e69,%ax
  d7:	69 74 2e 63 00 73 69 	imul   $0x7a697300,0x63(%rsi,%rbp,1),%esi
  de:	7a 
  df:	65                   	gs
  e0:	5f                   	pop    %rdi
  e1:	74 00                	je     e3 <_init-0x400775>
  e3:	65 6e                	outsb  %gs:(%rsi),(%dx)
  e5:	76 70                	jbe    157 <_init-0x400701>
  e7:	00 61 72             	add    %ah,0x72(%rcx)
  ea:	67 63 00             	movslq (%eax),%eax
  ed:	5f                   	pop    %rdi
  ee:	5f                   	pop    %rdi
  ef:	6c                   	insb   (%dx),%es:(%rdi)
  f0:	69 62 63 5f 63 73 75 	imul   $0x7573635f,0x63(%rdx),%esp
  f7:	5f                   	pop    %rdi
  f8:	69 6e 69 74 00 5f 5f 	imul   $0x5f5f0074,0x69(%rsi),%ebp
  ff:	69 6e 69 74 5f 61 72 	imul   $0x72615f74,0x69(%rsi),%ebp
 106:	72 61                	jb     169 <_init-0x4006ef>
 108:	79 5f                	jns    169 <_init-0x4006ef>
 10a:	73 74                	jae    180 <_init-0x4006d8>
 10c:	61                   	(bad)  
 10d:	72 74                	jb     183 <_init-0x4006d5>
 10f:	00 73 69             	add    %dh,0x69(%rbx)
 112:	7a 65                	jp     179 <_init-0x4006df>
 114:	00 5f 5f             	add    %bl,0x5f(%rdi)
 117:	69 6e 69 74 5f 61 72 	imul   $0x72615f74,0x69(%rsi),%ebp
 11e:	72 61                	jb     181 <_init-0x4006d7>
 120:	79 5f                	jns    181 <_init-0x4006d7>
 122:	65 6e                	outsb  %gs:(%rsi),(%dx)
 124:	64 00 5f 5f          	add    %bl,%fs:0x5f(%rdi)
 128:	6c                   	insb   (%dx),%es:(%rdi)
 129:	69 62 63 5f 63 73 75 	imul   $0x7573635f,0x63(%rdx),%esp
 130:	5f                   	pop    %rdi
 131:	66 69 6e 69 00 61    	imul   $0x6100,0x69(%rsi),%bp
 137:	72 67                	jb     1a0 <_init-0x4006b8>
 139:	76 00                	jbe    13b <_init-0x40071d>

Disassembly of section .debug_loc:

0000000000000000 <.debug_loc>:
	...
   8:	02 00                	add    (%rax),%al
   a:	00 00                	add    %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	02 00                	add    (%rax),%al
  12:	77 08                	ja     1c <_init-0x40083c>
  14:	02 00                	add    (%rax),%al
  16:	00 00                	add    %al,(%rax)
  18:	00 00                	add    %al,(%rax)
  1a:	00 00                	add    %al,(%rax)
  1c:	0b 00                	or     (%rax),%eax
  1e:	00 00                	add    %al,(%rax)
  20:	00 00                	add    %al,(%rax)
  22:	00 00                	add    %al,(%rax)
  24:	02 00                	add    (%rax),%al
  26:	77 10                	ja     38 <_init-0x400820>
  28:	0b 00                	or     (%rax),%eax
  2a:	00 00                	add    %al,(%rax)
  2c:	00 00                	add    %al,(%rax)
  2e:	00 00                	add    %al,(%rax)
  30:	10 00                	adc    %al,(%rax)
  32:	00 00                	add    %al,(%rax)
  34:	00 00                	add    %al,(%rax)
  36:	00 00                	add    %al,(%rax)
  38:	02 00                	add    (%rax),%al
  3a:	77 18                	ja     54 <_init-0x400804>
  3c:	10 00                	adc    %al,(%rax)
  3e:	00 00                	add    %al,(%rax)
  40:	00 00                	add    %al,(%rax)
  42:	00 00                	add    %al,(%rax)
  44:	15 00 00 00 00       	adc    $0x0,%eax
  49:	00 00                	add    %al,(%rax)
  4b:	00 02                	add    %al,(%rdx)
  4d:	00 77 20             	add    %dh,0x20(%rdi)
  50:	15 00 00 00 00       	adc    $0x0,%eax
  55:	00 00                	add    %al,(%rax)
  57:	00 19                	add    %bl,(%rcx)
  59:	00 00                	add    %al,(%rax)
  5b:	00 00                	add    %al,(%rax)
  5d:	00 00                	add    %al,(%rax)
  5f:	00 02                	add    %al,(%rdx)
  61:	00 77 28             	add    %dh,0x28(%rdi)
  64:	19 00                	sbb    %eax,(%rax)
  66:	00 00                	add    %al,(%rax)
  68:	00 00                	add    %al,(%rax)
  6a:	00 00                	add    %al,(%rax)
  6c:	21 00                	and    %eax,(%rax)
  6e:	00 00                	add    %al,(%rax)
  70:	00 00                	add    %al,(%rax)
  72:	00 00                	add    %al,(%rax)
  74:	02 00                	add    (%rax),%al
  76:	77 30                	ja     a8 <_init-0x4007b0>
  78:	21 00                	and    %eax,(%rax)
  7a:	00 00                	add    %al,(%rax)
  7c:	00 00                	add    %al,(%rax)
  7e:	00 00                	add    %al,(%rax)
  80:	25 00 00 00 00       	and    $0x0,%eax
  85:	00 00                	add    %al,(%rax)
  87:	00 02                	add    %al,(%rdx)
  89:	00 77 38             	add    %dh,0x38(%rdi)
  8c:	25 00 00 00 00       	and    $0x0,%eax
  91:	00 00                	add    %al,(%rax)
  93:	00 4e 00             	add    %cl,0x0(%rsi)
  96:	00 00                	add    %al,(%rax)
  98:	00 00                	add    %al,(%rax)
  9a:	00 00                	add    %al,(%rax)
  9c:	03 00                	add    (%rax),%eax
  9e:	77 c0                	ja     60 <_init-0x4007f8>
  a0:	00 4e 00             	add    %cl,0x0(%rsi)
  a3:	00 00                	add    %al,(%rax)
  a5:	00 00                	add    %al,(%rax)
  a7:	00 00                	add    %al,(%rax)
  a9:	4f 00 00             	rex.WRXB add %r8b,(%r8)
  ac:	00 00                	add    %al,(%rax)
  ae:	00 00                	add    %al,(%rax)
  b0:	00 02                	add    %al,(%rdx)
  b2:	00 77 38             	add    %dh,0x38(%rdi)
  b5:	4f 00 00             	rex.WRXB add %r8b,(%r8)
  b8:	00 00                	add    %al,(%rax)
  ba:	00 00                	add    %al,(%rax)
  bc:	00 50 00             	add    %dl,0x0(%rax)
  bf:	00 00                	add    %al,(%rax)
  c1:	00 00                	add    %al,(%rax)
  c3:	00 00                	add    %al,(%rax)
  c5:	02 00                	add    (%rax),%al
  c7:	77 30                	ja     f9 <_init-0x40075f>
  c9:	50                   	push   %rax
  ca:	00 00                	add    %al,(%rax)
  cc:	00 00                	add    %al,(%rax)
  ce:	00 00                	add    %al,(%rax)
  d0:	00 52 00             	add    %dl,0x0(%rdx)
  d3:	00 00                	add    %al,(%rax)
  d5:	00 00                	add    %al,(%rax)
  d7:	00 00                	add    %al,(%rax)
  d9:	02 00                	add    (%rax),%al
  db:	77 28                	ja     105 <_init-0x400753>
  dd:	52                   	push   %rdx
  de:	00 00                	add    %al,(%rax)
  e0:	00 00                	add    %al,(%rax)
  e2:	00 00                	add    %al,(%rax)
  e4:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
  e8:	00 00                	add    %al,(%rax)
  ea:	00 00                	add    %al,(%rax)
  ec:	00 02                	add    %al,(%rdx)
  ee:	00 77 20             	add    %dh,0x20(%rdi)
  f1:	54                   	push   %rsp
  f2:	00 00                	add    %al,(%rax)
  f4:	00 00                	add    %al,(%rax)
  f6:	00 00                	add    %al,(%rax)
  f8:	00 56 00             	add    %dl,0x0(%rsi)
  fb:	00 00                	add    %al,(%rax)
  fd:	00 00                	add    %al,(%rax)
  ff:	00 00                	add    %al,(%rax)
 101:	02 00                	add    (%rax),%al
 103:	77 18                	ja     11d <_init-0x40073b>
 105:	56                   	push   %rsi
 106:	00 00                	add    %al,(%rax)
 108:	00 00                	add    %al,(%rax)
 10a:	00 00                	add    %al,(%rax)
 10c:	00 58 00             	add    %bl,0x0(%rax)
 10f:	00 00                	add    %al,(%rax)
 111:	00 00                	add    %al,(%rax)
 113:	00 00                	add    %al,(%rax)
 115:	02 00                	add    (%rax),%al
 117:	77 10                	ja     129 <_init-0x40072f>
 119:	58                   	pop    %rax
 11a:	00 00                	add    %al,(%rax)
 11c:	00 00                	add    %al,(%rax)
 11e:	00 00                	add    %al,(%rax)
 120:	00 59 00             	add    %bl,0x0(%rcx)
 123:	00 00                	add    %al,(%rax)
 125:	00 00                	add    %al,(%rax)
 127:	00 00                	add    %al,(%rax)
 129:	02 00                	add    (%rax),%al
 12b:	77 08                	ja     135 <_init-0x400723>
	...
 145:	29 00                	sub    %eax,(%rax)
 147:	00 00                	add    %al,(%rax)
 149:	00 00                	add    %al,(%rax)
 14b:	00 00                	add    %al,(%rax)
 14d:	01 00                	add    %eax,(%rax)
 14f:	55                   	push   %rbp
 150:	29 00                	sub    %eax,(%rax)
 152:	00 00                	add    %al,(%rax)
 154:	00 00                	add    %al,(%rax)
 156:	00 00                	add    %al,(%rax)
 158:	52                   	push   %rdx
 159:	00 00                	add    %al,(%rax)
 15b:	00 00                	add    %al,(%rax)
 15d:	00 00                	add    %al,(%rax)
 15f:	00 01                	add    %al,(%rcx)
 161:	00 5c 52 00          	add    %bl,0x0(%rdx,%rdx,2)
 165:	00 00                	add    %al,(%rax)
 167:	00 00                	add    %al,(%rax)
 169:	00 00                	add    %al,(%rax)
 16b:	59                   	pop    %rcx
 16c:	00 00                	add    %al,(%rax)
 16e:	00 00                	add    %al,(%rax)
 170:	00 00                	add    %al,(%rax)
 172:	00 04 00             	add    %al,(%rax,%rax,1)
 175:	f3 01 55 9f          	repz add %edx,-0x61(%rbp)
	...
 191:	29 00                	sub    %eax,(%rax)
 193:	00 00                	add    %al,(%rax)
 195:	00 00                	add    %al,(%rax)
 197:	00 00                	add    %al,(%rax)
 199:	01 00                	add    %eax,(%rax)
 19b:	54                   	push   %rsp
 19c:	29 00                	sub    %eax,(%rax)
 19e:	00 00                	add    %al,(%rax)
 1a0:	00 00                	add    %al,(%rax)
 1a2:	00 00                	add    %al,(%rax)
 1a4:	54                   	push   %rsp
 1a5:	00 00                	add    %al,(%rax)
 1a7:	00 00                	add    %al,(%rax)
 1a9:	00 00                	add    %al,(%rax)
 1ab:	00 01                	add    %al,(%rcx)
 1ad:	00 5d 54             	add    %bl,0x54(%rbp)
 1b0:	00 00                	add    %al,(%rax)
 1b2:	00 00                	add    %al,(%rax)
 1b4:	00 00                	add    %al,(%rax)
 1b6:	00 59 00             	add    %bl,0x0(%rcx)
 1b9:	00 00                	add    %al,(%rax)
 1bb:	00 00                	add    %al,(%rax)
 1bd:	00 00                	add    %al,(%rax)
 1bf:	04 00                	add    $0x0,%al
 1c1:	f3 01 54 9f 00       	repz add %edx,0x0(%rdi,%rbx,4)
	...
 1da:	00 00                	add    %al,(%rax)
 1dc:	00 29                	add    %ch,(%rcx)
 1de:	00 00                	add    %al,(%rax)
 1e0:	00 00                	add    %al,(%rax)
 1e2:	00 00                	add    %al,(%rax)
 1e4:	00 01                	add    %al,(%rcx)
 1e6:	00 51 29             	add    %dl,0x29(%rcx)
 1e9:	00 00                	add    %al,(%rax)
 1eb:	00 00                	add    %al,(%rax)
 1ed:	00 00                	add    %al,(%rax)
 1ef:	00 56 00             	add    %dl,0x0(%rsi)
 1f2:	00 00                	add    %al,(%rax)
 1f4:	00 00                	add    %al,(%rax)
 1f6:	00 00                	add    %al,(%rax)
 1f8:	01 00                	add    %eax,(%rax)
 1fa:	5e                   	pop    %rsi
 1fb:	56                   	push   %rsi
 1fc:	00 00                	add    %al,(%rax)
 1fe:	00 00                	add    %al,(%rax)
 200:	00 00                	add    %al,(%rax)
 202:	00 59 00             	add    %bl,0x0(%rcx)
 205:	00 00                	add    %al,(%rax)
 207:	00 00                	add    %al,(%rax)
 209:	00 00                	add    %al,(%rax)
 20b:	04 00                	add    $0x0,%al
 20d:	f3 01 51 9f          	repz add %edx,-0x61(%rcx)
	...
 221:	2a 00                	sub    (%rax),%al
 223:	00 00                	add    %al,(%rax)
 225:	00 00                	add    %al,(%rax)
 227:	00 00                	add    %al,(%rax)
 229:	32 00                	xor    (%rax),%al
 22b:	00 00                	add    %al,(%rax)
 22d:	00 00                	add    %al,(%rax)
 22f:	00 00                	add    %al,(%rax)
 231:	02 00                	add    (%rax),%al
 233:	30 9f 48 00 00 00    	xor    %bl,0x48(%rdi)
 239:	00 00                	add    %al,(%rax)
 23b:	00 00                	add    %al,(%rax)
 23d:	4d 00 00             	rex.WRB add %r8b,(%r8)
 240:	00 00                	add    %al,(%rax)
 242:	00 00                	add    %al,(%rax)
 244:	00 01                	add    %al,(%rcx)
 246:	00 53 00             	add    %dl,0x0(%rbx)
	...

Disassembly of section .debug_ranges:

0000000000000000 <.debug_ranges>:
   0:	02 00                	add    (%rax),%al
   2:	00 00                	add    %al,(%rax)
   4:	00 00                	add    %al,(%rax)
   6:	00 00                	add    %al,(%rax)
   8:	09 00                	or     %eax,(%rax)
   a:	00 00                	add    %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	19 00                	sbb    %eax,(%rax)
  12:	00 00                	add    %al,(%rax)
  14:	00 00                	add    %al,(%rax)
  16:	00 00                	add    %al,(%rax)
  18:	20 00                	and    %al,(%rax)
  1a:	00 00                	add    %al,(%rax)
  1c:	00 00                	add    %al,(%rax)
  1e:	00 00                	add    %al,(%rax)
  20:	21 00                	and    %eax,(%rax)
  22:	00 00                	add    %al,(%rax)
  24:	00 00                	add    %al,(%rax)
  26:	00 00                	add    %al,(%rax)
  28:	24 00                	and    $0x0,%al
  2a:	00 00                	add    %al,(%rax)
  2c:	00 00                	add    %al,(%rax)
  2e:	00 00                	add    %al,(%rax)
  30:	2a 00                	sub    (%rax),%al
  32:	00 00                	add    %al,(%rax)
  34:	00 00                	add    %al,(%rax)
  36:	00 00                	add    %al,(%rax)
  38:	4d 00 00             	rex.WRB add %r8b,(%r8)
	...
