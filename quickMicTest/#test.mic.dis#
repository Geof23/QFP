
test.mic:     file format elf64-k1om


Disassembly of section .init:

0000000000400778 <_init>:
  400778:	48 83 ec 08          	sub    $0x8,%rsp
  40077c:	e8 0b 01 00 00       	callq  40088c <call_gmon_start>
  400781:	e8 6a 01 00 00       	callq  4008f0 <frame_dummy>
  400786:	e8 f9 03 00 00       	callq  400b84 <__do_global_ctors_aux>
  40078b:	48 83 c4 08          	add    $0x8,%rsp
  40078f:	c3                   	retq   

Disassembly of section .plt:

0000000000400790 <std::ostream::operator<<(double)@plt-0x10>:
  400790:	ff 35 2a 0c 20 00    	pushq  0x200c2a(%rip)        # 6013c0 <_GLOBAL_OFFSET_TABLE_+0x8>
  400796:	ff 25 2c 0c 20 00    	jmpq   *0x200c2c(%rip)        # 6013c8 <_GLOBAL_OFFSET_TABLE_+0x10>
  40079c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004007a0 <std::ostream::operator<<(double)@plt>:
  4007a0:	ff 25 2a 0c 20 00    	jmpq   *0x200c2a(%rip)        # 6013d0 <_GLOBAL_OFFSET_TABLE_+0x18>
  4007a6:	68 00 00 00 00       	pushq  $0x0
  4007ab:	e9 e0 ff ff ff       	jmpq   400790 <_init+0x18>

00000000004007b0 <std::ios_base::Init::Init()@plt>:
  4007b0:	ff 25 22 0c 20 00    	jmpq   *0x200c22(%rip)        # 6013d8 <_GLOBAL_OFFSET_TABLE_+0x20>
  4007b6:	68 01 00 00 00       	pushq  $0x1
  4007bb:	e9 d0 ff ff ff       	jmpq   400790 <_init+0x18>

00000000004007c0 <std::ostream::operator<<(long double)@plt>:
  4007c0:	ff 25 1a 0c 20 00    	jmpq   *0x200c1a(%rip)        # 6013e0 <_GLOBAL_OFFSET_TABLE_+0x28>
  4007c6:	68 02 00 00 00       	pushq  $0x2
  4007cb:	e9 c0 ff ff ff       	jmpq   400790 <_init+0x18>

00000000004007d0 <__libc_start_main@plt>:
  4007d0:	ff 25 12 0c 20 00    	jmpq   *0x200c12(%rip)        # 6013e8 <_GLOBAL_OFFSET_TABLE_+0x30>
  4007d6:	68 03 00 00 00       	pushq  $0x3
  4007db:	e9 b0 ff ff ff       	jmpq   400790 <_init+0x18>

00000000004007e0 <std::ios_base::Init::~Init()@plt>:
  4007e0:	ff 25 0a 0c 20 00    	jmpq   *0x200c0a(%rip)        # 6013f0 <_GLOBAL_OFFSET_TABLE_+0x38>
  4007e6:	68 04 00 00 00       	pushq  $0x4
  4007eb:	e9 a0 ff ff ff       	jmpq   400790 <_init+0x18>

00000000004007f0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>:
  4007f0:	ff 25 02 0c 20 00    	jmpq   *0x200c02(%rip)        # 6013f8 <_GLOBAL_OFFSET_TABLE_+0x40>
  4007f6:	68 05 00 00 00       	pushq  $0x5
  4007fb:	e9 90 ff ff ff       	jmpq   400790 <_init+0x18>

0000000000400800 <__cxa_atexit@plt>:
  400800:	ff 25 fa 0b 20 00    	jmpq   *0x200bfa(%rip)        # 601400 <_GLOBAL_OFFSET_TABLE_+0x48>
  400806:	68 06 00 00 00       	pushq  $0x6
  40080b:	e9 80 ff ff ff       	jmpq   400790 <_init+0x18>

0000000000400810 <memset@plt>:
  400810:	ff 25 f2 0b 20 00    	jmpq   *0x200bf2(%rip)        # 601408 <_GLOBAL_OFFSET_TABLE_+0x50>
  400816:	68 07 00 00 00       	pushq  $0x7
  40081b:	e9 70 ff ff ff       	jmpq   400790 <_init+0x18>

0000000000400820 <std::ostream::operator<<(float)@plt>:
  400820:	ff 25 ea 0b 20 00    	jmpq   *0x200bea(%rip)        # 601410 <_GLOBAL_OFFSET_TABLE_+0x58>
  400826:	68 08 00 00 00       	pushq  $0x8
  40082b:	e9 60 ff ff ff       	jmpq   400790 <_init+0x18>

0000000000400830 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>:
  400830:	ff 25 e2 0b 20 00    	jmpq   *0x200be2(%rip)        # 601418 <_GLOBAL_OFFSET_TABLE_+0x60>
  400836:	68 09 00 00 00       	pushq  $0x9
  40083b:	e9 50 ff ff ff       	jmpq   400790 <_init+0x18>

0000000000400840 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>:
  400840:	ff 25 da 0b 20 00    	jmpq   *0x200bda(%rip)        # 601420 <_GLOBAL_OFFSET_TABLE_+0x68>
  400846:	68 0a 00 00 00       	pushq  $0xa
  40084b:	e9 40 ff ff ff       	jmpq   400790 <_init+0x18>

0000000000400850 <__gxx_personality_v0@plt>:
  400850:	ff 25 d2 0b 20 00    	jmpq   *0x200bd2(%rip)        # 601428 <_GLOBAL_OFFSET_TABLE_+0x70>
  400856:	68 0b 00 00 00       	pushq  $0xb
  40085b:	e9 30 ff ff ff       	jmpq   400790 <_init+0x18>

Disassembly of section .text:

0000000000400860 <_start>:
  400860:	31 ed                	xor    %ebp,%ebp
  400862:	49 89 d1             	mov    %rdx,%r9
  400865:	5e                   	pop    %rsi
  400866:	48 89 e2             	mov    %rsp,%rdx
  400869:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40086d:	50                   	push   %rax
  40086e:	54                   	push   %rsp
  40086f:	49 c7 c0 80 0b 40 00 	mov    $0x400b80,%r8
  400876:	48 c7 c1 20 0b 40 00 	mov    $0x400b20,%rcx
  40087d:	48 c7 c7 20 09 40 00 	mov    $0x400920,%rdi
  400884:	e8 47 ff ff ff       	callq  4007d0 <__libc_start_main@plt>
  400889:	f4                   	hlt    
  40088a:	66 90                	xchg   %ax,%ax

000000000040088c <call_gmon_start>:
  40088c:	48 83 ec 08          	sub    $0x8,%rsp
  400890:	48 8b 05 19 0b 20 00 	mov    0x200b19(%rip),%rax        # 6013b0 <_DYNAMIC+0x1d0>
  400897:	48 85 c0             	test   %rax,%rax
  40089a:	74 02                	je     40089e <call_gmon_start+0x12>
  40089c:	ff d0                	callq  *%rax
  40089e:	48 83 c4 08          	add    $0x8,%rsp
  4008a2:	c3                   	retq   
  4008a3:	90                   	nop

00000000004008a4 <__do_global_dtors_aux>:
  4008a4:	55                   	push   %rbp
  4008a5:	48 89 e5             	mov    %rsp,%rbp
  4008a8:	53                   	push   %rbx
  4008a9:	52                   	push   %rdx
  4008aa:	80 3d 9f 0c 20 00 00 	cmpb   $0x0,0x200c9f(%rip)        # 601550 <completed.5565>
  4008b1:	75 39                	jne    4008ec <__do_global_dtors_aux+0x48>
  4008b3:	b8 d0 11 60 00       	mov    $0x6011d0,%eax
  4008b8:	48 2d c8 11 60 00    	sub    $0x6011c8,%rax
  4008be:	48 c1 f8 03          	sar    $0x3,%rax
  4008c2:	48 8d 58 ff          	lea    -0x1(%rax),%rbx
  4008c6:	eb 11                	jmp    4008d9 <__do_global_dtors_aux+0x35>
  4008c8:	48 ff c2             	inc    %rdx
  4008cb:	48 89 15 86 0c 20 00 	mov    %rdx,0x200c86(%rip)        # 601558 <dtor_idx.5567>
  4008d2:	ff 14 d5 c8 11 60 00 	callq  *0x6011c8(,%rdx,8)
  4008d9:	48 8b 15 78 0c 20 00 	mov    0x200c78(%rip),%rdx        # 601558 <dtor_idx.5567>
  4008e0:	48 39 da             	cmp    %rbx,%rdx
  4008e3:	72 e3                	jb     4008c8 <__do_global_dtors_aux+0x24>
  4008e5:	c6 05 64 0c 20 00 01 	movb   $0x1,0x200c64(%rip)        # 601550 <completed.5565>
  4008ec:	58                   	pop    %rax
  4008ed:	5b                   	pop    %rbx
  4008ee:	5d                   	pop    %rbp
  4008ef:	c3                   	retq   

00000000004008f0 <frame_dummy>:
  4008f0:	55                   	push   %rbp
  4008f1:	48 83 3d df 08 20 00 	cmpq   $0x0,0x2008df(%rip)        # 6011d8 <__JCR_END__>
  4008f8:	00 
  4008f9:	48 89 e5             	mov    %rsp,%rbp
  4008fc:	74 12                	je     400910 <frame_dummy+0x20>
  4008fe:	b8 00 00 00 00       	mov    $0x0,%eax
  400903:	48 85 c0             	test   %rax,%rax
  400906:	74 08                	je     400910 <frame_dummy+0x20>
  400908:	5d                   	pop    %rbp
  400909:	bf d8 11 60 00       	mov    $0x6011d8,%edi
  40090e:	ff e0                	jmpq   *%rax
  400910:	5d                   	pop    %rbp
  400911:	c3                   	retq   
  400912:	66 90                	xchg   %ax,%ax
  400914:	66 90                	xchg   %ax,%ax
  400916:	66 90                	xchg   %ax,%ax
  400918:	66 90                	xchg   %ax,%ax
  40091a:	66 90                	xchg   %ax,%ax
  40091c:	66 90                	xchg   %ax,%ax
  40091e:	66 90                	xchg   %ax,%ax

0000000000400920 <main>:
  400920:	55                   	push   %rbp
  400921:	48 89 e5             	mov    %rsp,%rbp
  400924:	48 83 e4 80          	and    $0xffffffffffffff80,%rsp
  400928:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
  40092f:	33 f6                	xor    %esi,%esi
  400931:	bf 03 00 00 00       	mov    $0x3,%edi
  400936:	e8 25 01 00 00       	callq  400a60 <__intel_new_feature_proc_init>
  40093b:	0f ae 1c 24          	stmxcsr (%rsp)
  40093f:	bf 40 14 60 00       	mov    $0x601440,%edi
  400944:	be c4 0b 40 00       	mov    $0x400bc4,%esi
  400949:	48 8b 05 f0 0a 20 00 	mov    0x200af0(%rip),%rax        # 601440 <__bss_start>
  400950:	81 0c 24 40 80 00 00 	orl    $0x8040,(%rsp)
  400957:	48 8b 50 e8          	mov    -0x18(%rax),%rdx
  40095b:	0f ae 14 24          	ldmxcsr (%rsp)
  40095f:	48 c7 82 48 14 60 00 	movq   $0xc8,0x601448(%rdx)
  400966:	c8 00 00 00 
  40096a:	e8 81 fe ff ff       	callq  4007f0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
   40096f:	ba 01 00 00 00       	mov    $0x1,%edx
  400974:	48 89 c7             	mov    %rax,%rdi
  400977:	c5 f8 92 ca          	kmov   %edx,%k1
  40097b:	62 f2 79 09 18 05 a3 	vbroadcastss 0x2a3(%rip),%zmm0{%k1}        # 400c28 <.L_2il0floatpacket.4+0x18>
  400982:	02 00 00 
  400985:	e8 96 fe ff ff       	callq  400820 <std::ostream::operator<<(float)@plt>
  40098a:	48 89 c7             	mov    %rax,%rdi
  40098d:	be 40 08 40 00       	mov    $0x400840,%esi
  400992:	e8 99 fe ff ff       	callq  400830 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>
  400997:	bf 40 14 60 00       	mov    $0x601440,%edi
  40099c:	be d8 0b 40 00       	mov    $0x400bd8,%esi
  4009a1:	e8 4a fe ff ff       	callq  4007f0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
  4009a6:	ba 01 00 00 00       	mov    $0x1,%edx
  4009ab:	48 89 c7             	mov    %rax,%rdi
  4009ae:	c5 f8 92 ca          	kmov   %edx,%k1
  4009b2:	62 f2 f9 09 19 05 64 	vbroadcastsd 0x264(%rip),%zmm0{%k1}        # 400c20 <.L_2il0floatpacket.4+0x10>
  4009b9:	02 00 00 
  4009bc:	e8 df fd ff ff       	callq  4007a0 <std::ostream::operator<<(double)@plt>
  4009c1:	48 89 c7             	mov    %rax,%rdi
  4009c4:	be 40 08 40 00       	mov    $0x400840,%esi
  4009c9:	e8 62 fe ff ff       	callq  400830 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>
  4009ce:	bf 40 14 60 00       	mov    $0x601440,%edi
  4009d3:	be ec 0b 40 00       	mov    $0x400bec,%esi
  4009d8:	e8 13 fe ff ff       	callq  4007f0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@plt>
  4009dd:	db 2d 2d 02 00 00    	fldt   0x22d(%rip)        # 400c10 <.L_2il0floatpacket.4>
  4009e3:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
  4009e7:	48 89 c7             	mov    %rax,%rdi
  4009ea:	db 3c 24             	fstpt  (%rsp)
  4009ed:	e8 ce fd ff ff       	callq  4007c0 <std::ostream::operator<<(long double)@plt>
  4009f2:	48 83 c4 10          	add    $0x10,%rsp
  4009f6:	48 89 c7             	mov    %rax,%rdi
  4009f9:	be 40 08 40 00       	mov    $0x400840,%esi
  4009fe:	e8 2d fe ff ff       	callq  400830 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>
  400a03:	33 c0                	xor    %eax,%eax
  400a05:	48 89 ec             	mov    %rbp,%rsp
  400a08:	5d                   	pop    %rbp
  400a09:	c3                   	retq   
  400a0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400a10 <__sti__$E>:
  400a10:	56                   	push   %rsi
  400a11:	bf 60 15 60 00       	mov    $0x601560,%edi
  400a16:	e8 95 fd ff ff       	callq  4007b0 <std::ios_base::Init::Init()@plt>
  400a1b:	bf e0 07 40 00       	mov    $0x4007e0,%edi
  400a20:	be 60 15 60 00       	mov    $0x601560,%esi
  400a25:	ba 38 14 60 00       	mov    $0x601438,%edx
  400a2a:	48 83 c4 08          	add    $0x8,%rsp
  400a2e:	e9 cd fd ff ff       	jmpq   400800 <__cxa_atexit@plt>
  400a33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400a38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400a3f:	00 

0000000000400a40 <std::char_traits<char>::length(char const*)>:
  400a40:	48 89 f9             	mov    %rdi,%rcx
  400a43:	33 c0                	xor    %eax,%eax
  400a45:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
  400a49:	85 d2                	test   %edx,%edx
  400a4b:	74 10                	je     400a5d <std::char_traits<char>::length(char const*)+0x1d>
  400a4d:	0f b6 54 01 01       	movzbl 0x1(%rcx,%rax,1),%edx
  400a52:	48 83 c0 02          	add    $0x2,%rax
  400a56:	85 d2                	test   %edx,%edx
  400a58:	75 eb                	jne    400a45 <std::char_traits<char>::length(char const*)+0x5>
  400a5a:	48 ff c8             	dec    %rax
  400a5d:	c3                   	retq   
  400a5e:	66 90                	xchg   %ax,%ax

0000000000400a60 <__intel_new_feature_proc_init>:
  400a60:	56                   	push   %rsi
  400a61:	89 fe                	mov    %edi,%esi
  400a63:	33 ff                	xor    %edi,%edi
  400a65:	48 83 c4 08          	add    $0x8,%rsp
  400a69:	e9 02 00 00 00       	jmpq   400a70 <__intel_proc_init_ftzdazule>
  400a6e:	66 90                	xchg   %ax,%ax

0000000000400a70 <__intel_proc_init_ftzdazule>:
  400a70:	41 54                	push   %r12
  400a72:	53                   	push   %rbx
  400a73:	55                   	push   %rbp
  400a74:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
  400a7b:	89 f3                	mov    %esi,%ebx
  400a7d:	89 dd                	mov    %ebx,%ebp
  400a7f:	41 89 dc             	mov    %ebx,%r12d
  400a82:	83 e5 04             	and    $0x4,%ebp
  400a85:	41 83 e4 02          	and    $0x2,%r12d
  400a89:	74 09                	je     400a94 <__intel_proc_init_ftzdazule+0x24>
  400a8b:	b8 02 00 00 00       	mov    $0x2,%eax
  400a90:	85 f8                	test   %edi,%eax
  400a92:	74 09                	je     400a9d <__intel_proc_init_ftzdazule+0x2d>
  400a94:	85 ed                	test   %ebp,%ebp
  400a96:	74 35                	je     400acd <__intel_proc_init_ftzdazule+0x5d>
  400a98:	83 e7 04             	and    $0x4,%edi
  400a9b:	75 30                	jne    400acd <__intel_proc_init_ftzdazule+0x5d>
  400a9d:	48 8d 3c 24          	lea    (%rsp),%rdi
  400aa1:	33 f6                	xor    %esi,%esi
  400aa3:	ba 00 02 00 00       	mov    $0x200,%edx
  400aa8:	e8 63 fd ff ff       	callq  400810 <memset@plt>
  400aad:	0f ae 04 24          	fxsave (%rsp)
  400ab1:	f6 44 24 1c 40       	testb  $0x40,0x1c(%rsp)
  400ab6:	75 06                	jne    400abe <__intel_proc_init_ftzdazule+0x4e>
  400ab8:	41 bc 00 00 00 00    	mov    $0x0,%r12d
  400abe:	f7 44 24 1c 00 00 02 	testl  $0x20000,0x1c(%rsp)
  400ac5:	00 
  400ac6:	75 05                	jne    400acd <__intel_proc_init_ftzdazule+0x5d>
  400ac8:	bd 00 00 00 00       	mov    $0x0,%ebp
  400acd:	83 e3 01             	and    $0x1,%ebx
  400ad0:	75 39                	jne    400b0b <__intel_proc_init_ftzdazule+0x9b>
  400ad2:	45 85 e4             	test   %r12d,%r12d
  400ad5:	74 11                	je     400ae8 <__intel_proc_init_ftzdazule+0x78>
  400ad7:	0f ae 1c 24          	stmxcsr (%rsp)
  400adb:	8b 04 24             	mov    (%rsp),%eax
  400ade:	83 c8 40             	or     $0x40,%eax
  400ae1:	89 04 24             	mov    %eax,(%rsp)
  400ae4:	0f ae 14 24          	ldmxcsr (%rsp)
  400ae8:	85 ed                	test   %ebp,%ebp
  400aea:	74 13                	je     400aff <__intel_proc_init_ftzdazule+0x8f>
  400aec:	0f ae 1c 24          	stmxcsr (%rsp)
  400af0:	8b 04 24             	mov    (%rsp),%eax
  400af3:	0d 00 00 02 00       	or     $0x20000,%eax
  400af8:	89 04 24             	mov    %eax,(%rsp)
  400afb:	0f ae 14 24          	ldmxcsr (%rsp)
  400aff:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
  400b06:	5d                   	pop    %rbp
  400b07:	5b                   	pop    %rbx
  400b08:	41 5c                	pop    %r12
  400b0a:	c3                   	retq   
  400b0b:	0f ae 1c 24          	stmxcsr (%rsp)
  400b0f:	8b 04 24             	mov    (%rsp),%eax
  400b12:	0d 00 80 00 00       	or     $0x8000,%eax
  400b17:	89 04 24             	mov    %eax,(%rsp)
  400b1a:	0f ae 14 24          	ldmxcsr (%rsp)
  400b1e:	eb b2                	jmp    400ad2 <__intel_proc_init_ftzdazule+0x62>

0000000000400b20 <__libc_csu_init>:
  400b20:	41 57                	push   %r15
  400b22:	4c 8d 3d 83 06 20 00 	lea    0x200683(%rip),%r15        # 6011ac <__init_array_end>
  400b29:	41 56                	push   %r14
  400b2b:	49 89 d6             	mov    %rdx,%r14
  400b2e:	41 55                	push   %r13
  400b30:	49 89 f5             	mov    %rsi,%r13
  400b33:	41 54                	push   %r12
  400b35:	41 89 fc             	mov    %edi,%r12d
  400b38:	55                   	push   %rbp
  400b39:	48 8d 2d 6c 06 20 00 	lea    0x20066c(%rip),%rbp        # 6011ac <__init_array_end>
  400b40:	53                   	push   %rbx
  400b41:	49 29 ef             	sub    %rbp,%r15
  400b44:	51                   	push   %rcx
  400b45:	e8 2e fc ff ff       	callq  400778 <_init>
  400b4a:	49 c1 ff 03          	sar    $0x3,%r15
  400b4e:	74 1d                	je     400b6d <__libc_csu_init+0x4d>
  400b50:	31 db                	xor    %ebx,%ebx
  400b52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400b58:	4c 89 f2             	mov    %r14,%rdx
  400b5b:	4c 89 ee             	mov    %r13,%rsi
  400b5e:	44 89 e7             	mov    %r12d,%edi
  400b61:	ff 54 dd 00          	callq  *0x0(%rbp,%rbx,8)
  400b65:	48 ff c3             	inc    %rbx
  400b68:	4c 39 fb             	cmp    %r15,%rbx
  400b6b:	75 eb                	jne    400b58 <__libc_csu_init+0x38>
  400b6d:	58                   	pop    %rax
  400b6e:	5b                   	pop    %rbx
  400b6f:	5d                   	pop    %rbp
  400b70:	41 5c                	pop    %r12
  400b72:	41 5d                	pop    %r13
  400b74:	41 5e                	pop    %r14
  400b76:	41 5f                	pop    %r15
  400b78:	c3                   	retq   
  400b79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400b80 <__libc_csu_fini>:
  400b80:	c3                   	retq   
  400b81:	66 90                	xchg   %ax,%ax
  400b83:	90                   	nop

0000000000400b84 <__do_global_ctors_aux>:
  400b84:	55                   	push   %rbp
  400b85:	48 89 e5             	mov    %rsp,%rbp
  400b88:	53                   	push   %rbx
  400b89:	bb b8 11 60 00       	mov    $0x6011b8,%ebx
  400b8e:	52                   	push   %rdx
  400b8f:	eb 06                	jmp    400b97 <__do_global_ctors_aux+0x13>
  400b91:	48 83 eb 08          	sub    $0x8,%rbx
  400b95:	ff d0                	callq  *%rax
  400b97:	48 8b 03             	mov    (%rbx),%rax
  400b9a:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  400b9e:	75 f1                	jne    400b91 <__do_global_ctors_aux+0xd>
  400ba0:	58                   	pop    %rax
  400ba1:	5b                   	pop    %rbx
  400ba2:	5d                   	pop    %rbp
  400ba3:	c3                   	retq   

Disassembly of section .fini:

0000000000400ba4 <_fini>:
  400ba4:	48 83 ec 08          	sub    $0x8,%rsp
  400ba8:	e8 f7 fc ff ff       	callq  4008a4 <__do_global_dtors_aux>
  400bad:	48 83 c4 08          	add    $0x8,%rsp
  400bb1:	c3                   	retq   
