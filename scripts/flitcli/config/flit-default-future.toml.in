# Autogenerated by "flit init"
#   flit version {flit_version}

[database]

# older versions of flit supported postgres.  that has been removed.  only
# sqlite is supported at the moment.
type = 'sqlite'

# if relative path, it is relative to the directory containing this
# configuration file.
filepath = 'results.sqlite'

# For now, only one host is supported, all others are ignored
[[hosts]]

# TODO: add documentation here for each element.

name = '{hostname}'
flit_path = '{flit_path}'
config_dir = '{config_dir}'

# The settings for "make dev"
[hosts.dev_build]
# compiler_name must be found in [[hosts.compilers]] list under name attribute
# but the optimization level and switches do not need to be in the compiler list
compiler_name = 'g++'
optimization_level = '-O2'
switches = '-funsafe-math-optimizations'

# The ground truth compilation to use in analysis, for "make gt"
[hosts.ground_truth]
# compiler_name must be found in [[hosts.compilers]] list under name attribute
# but the optimization level and switches do not need to be in the compiler list
compiler_name = 'g++'
optimization_level = '-O0'
switches = ''

  # This host's list of compilers.
  # For now, only used for hosts.ground_truth and hosts.dev_build.
  # TODO: use this list to generate the Makefile
  [[hosts.compilers]]

  # TODO: figure out how to specify path for each host machine
  # TODO: what if the compilers list is part of the host?

  # binary can be an absolute path, relative path, or binary name (found in
  # PATH).  If you want to specify a compiler in the same directory as this
  # config file, prepend with a "./" (e.g. "./my-compiler")
  binary = 'g++'
  # TODO: this is not yet used...
  # It is recommended to include version number in the name.  This is how the
  # compiler will be recognized in the results, and subsequently in the
  # database and analysis.
  name = 'g++'
  # TODO: implement these supported types
  # There are a few supported types: [ gcc, intel, clang, cuda ]
  type = 'gcc'
  optimization_levels = [
    '-O0',
    '-O1',
    '-O2',
    '-O3',
    #'-Ofast',
    #'-O...' ?
  ]
  # Note: in some versions of python-toml, there is a parsing bug when a list
  # has an empty string in the middle.  So simply put it at the end without a
  # comma.  This has been fixed in the latest version of python-toml.
  switches_list = [
    '-fassociative-math',
    '-mavx',
    '-mp1',
    '-mavx2 -mfma',
    ''
    # ...
  ]
  

